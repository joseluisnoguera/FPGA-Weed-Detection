-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity resizeNNBilinear is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    imgInput_data_V_dout : IN STD_LOGIC_VECTOR (23 downto 0);
    imgInput_data_V_empty_n : IN STD_LOGIC;
    imgInput_data_V_read : OUT STD_LOGIC;
    imgOutput_data_V_din : OUT STD_LOGIC_VECTOR (23 downto 0);
    imgOutput_data_V_full_n : IN STD_LOGIC;
    imgOutput_data_V_write : OUT STD_LOGIC );
end;


architecture behav of resizeNNBilinear is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (7 downto 0) := "00100000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (7 downto 0) := "01000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv11_0 : STD_LOGIC_VECTOR (10 downto 0) := "00000000000";
    constant ap_const_lv10_0 : STD_LOGIC_VECTOR (9 downto 0) := "0000000000";
    constant ap_const_lv40_5000000000 : STD_LOGIC_VECTOR (39 downto 0) := "0101000000000000000000000000000000000000";
    constant ap_const_lv40_2D00000000 : STD_LOGIC_VECTOR (39 downto 0) := "0010110100000000000000000000000000000000";
    constant ap_const_lv10_140 : STD_LOGIC_VECTOR (9 downto 0) := "0101000000";
    constant ap_const_lv10_B4 : STD_LOGIC_VECTOR (9 downto 0) := "0010110100";
    constant ap_const_lv17_0 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000000";
    constant ap_const_lv11_140 : STD_LOGIC_VECTOR (10 downto 0) := "00101000000";
    constant ap_const_lv11_500 : STD_LOGIC_VECTOR (10 downto 0) := "10100000000";
    constant ap_const_lv13_A00 : STD_LOGIC_VECTOR (12 downto 0) := "0101000000000";
    constant ap_const_lv13_1 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000001";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv11_1 : STD_LOGIC_VECTOR (10 downto 0) := "00000000001";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv10_2D0 : STD_LOGIC_VECTOR (9 downto 0) := "1011010000";
    constant ap_const_lv10_1 : STD_LOGIC_VECTOR (9 downto 0) := "0000000001";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv32_FFFFFFFE : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111110";
    constant ap_const_lv32_2D0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000001011010000";
    constant ap_const_lv32_B3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000010110011";
    constant ap_const_lv32_2A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101010";
    constant ap_const_lv32_29 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000101001";
    constant ap_const_lv42_B3C00000 : STD_LOGIC_VECTOR (41 downto 0) := "000000000010110011110000000000000000000000";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv22_0 : STD_LOGIC_VECTOR (21 downto 0) := "0000000000000000000000";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_26 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100110";
    constant ap_const_lv17_1 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv42_13FC00000 : STD_LOGIC_VECTOR (41 downto 0) := "000000000100111111110000000000000000000000";
    constant ap_const_lv7_0 : STD_LOGIC_VECTOR (6 downto 0) := "0000000";
    constant ap_const_lv17_4FF : STD_LOGIC_VECTOR (16 downto 0) := "00000010011111111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";

    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal imgInput_data_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal icmp_ln266_reg_2092 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal icmp_ln308_reg_2218 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln318_reg_2176 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln322_reg_2227 : STD_LOGIC_VECTOR (0 downto 0);
    signal imgOutput_data_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp1_iter8 : STD_LOGIC := '0';
    signal icmp_ln409_reg_2184 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_15_reg_2236 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_15_reg_2236_pp1_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln411_reg_2246 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln411_reg_2246_pp1_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln411_1_reg_2242 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln411_1_reg_2242_pp1_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal indvar_flatten_reg_361 : STD_LOGIC_VECTOR (12 downto 0);
    signal read_rows_count_0_reg_372 : STD_LOGIC_VECTOR (1 downto 0);
    signal j_0_reg_383 : STD_LOGIC_VECTOR (10 downto 0);
    signal j13_0_reg_441 : STD_LOGIC_VECTOR (10 downto 0);
    signal j13_0_reg_441_pp1_iter1_reg : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_block_state8_pp1_stage0_iter0 : BOOLEAN;
    signal ap_predicate_op130_read_state9 : BOOLEAN;
    signal ap_block_state9_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_state10_pp1_stage0_iter2 : BOOLEAN;
    signal ap_block_state11_pp1_stage0_iter3 : BOOLEAN;
    signal ap_block_state12_pp1_stage0_iter4 : BOOLEAN;
    signal ap_block_state13_pp1_stage0_iter5 : BOOLEAN;
    signal ap_block_state14_pp1_stage0_iter6 : BOOLEAN;
    signal ap_block_state15_pp1_stage0_iter7 : BOOLEAN;
    signal ap_predicate_op400_write_state16 : BOOLEAN;
    signal ap_block_state16_pp1_stage0_iter8 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal grp_xfUDivResize_fu_519_ap_return : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_576 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal grp_xfUDivResize_fu_519_ap_ready : STD_LOGIC;
    signal grp_xfUDivResize_fu_519_ap_done : STD_LOGIC;
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal line_buffer_2_0_V_q1 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_enable_reg_pp1_iter3 : STD_LOGIC := '0';
    signal icmp_ln308_reg_2218_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln343_reg_2154 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln365_reg_2172 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_15_reg_2236_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal line_buffer_0_0_V_q1 : STD_LOGIC_VECTOR (23 downto 0);
    signal line_buffer_1_0_V_q1 : STD_LOGIC_VECTOR (23 downto 0);
    signal scalex_V_fu_598_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal scalex_V_reg_2082 : STD_LOGIC_VECTOR (31 downto 0);
    signal scaley_V_fu_604_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal scaley_V_reg_2087 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln266_fu_616_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state4_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal add_ln266_fu_622_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal select_ln321_fu_634_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln321_reg_2101 : STD_LOGIC_VECTOR (10 downto 0);
    signal select_ln321_1_fu_642_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal select_ln321_1_reg_2106 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln321_fu_650_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln321_reg_2111 : STD_LOGIC_VECTOR (0 downto 0);
    signal j_fu_654_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal rhs_V_fu_675_p1 : STD_LOGIC_VECTOR (42 downto 0);
    signal rhs_V_reg_2140 : STD_LOGIC_VECTOR (42 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal icmp_ln304_fu_689_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal add_ln304_fu_695_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln304_reg_2149 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln343_fu_701_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln409_fu_707_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln409_reg_2158 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln409_1_fu_713_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal add_ln409_1_reg_2166 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln365_fu_719_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln318_fu_725_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln409_fu_731_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ret_V_fu_741_p2 : STD_LOGIC_VECTOR (42 downto 0);
    signal ret_V_reg_2191 : STD_LOGIC_VECTOR (42 downto 0);
    signal p_Result_s_reg_2197 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_Val2_12_fu_856_p3 : STD_LOGIC_VECTOR (41 downto 0);
    signal p_Val2_12_reg_2202 : STD_LOGIC_VECTOR (41 downto 0);
    signal p_Result_1_reg_2208 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln700_fu_872_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln700_reg_2213 : STD_LOGIC_VECTOR (23 downto 0);
    signal icmp_ln308_fu_876_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln308_reg_2218_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal j_1_fu_882_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal j_1_reg_2222 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal icmp_ln322_fu_931_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln703_fu_980_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln703_reg_2231 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln879_15_fu_993_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_15_reg_2236_pp1_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_15_reg_2236_pp1_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_15_reg_2236_pp1_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_15_reg_2236_pp1_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln411_1_fu_1003_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln411_1_reg_2242_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln411_1_reg_2242_pp1_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln411_1_reg_2242_pp1_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln411_1_reg_2242_pp1_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln411_1_reg_2242_pp1_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln411_fu_1009_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln411_reg_2246_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln411_reg_2246_pp1_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln411_reg_2246_pp1_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln411_reg_2246_pp1_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln411_reg_2246_pp1_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal WeightY_V_fu_1036_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal WeightY_V_reg_2250 : STD_LOGIC_VECTOR (11 downto 0);
    signal WeightX_0_V_fu_1204_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal WeightX_0_V_reg_2255 : STD_LOGIC_VECTOR (11 downto 0);
    signal WeightX_0_V_reg_2255_pp1_iter3_reg : STD_LOGIC_VECTOR (11 downto 0);
    signal line_buffer_2_0_V_1_gep_fu_305_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal line_buffer_0_0_V_1_gep_fu_326_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal line_buffer_1_0_V_1_gep_fu_340_p3 : STD_LOGIC_VECTOR (10 downto 0);
    signal trunc_ln647_fu_1292_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln647_reg_2330 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln647_reg_2330_pp1_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln647_reg_2330_pp1_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln647_reg_2330_pp1_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln647_reg_2330_pp1_iter7_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln215_fu_1300_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln215_reg_2335 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln215_17_fu_1304_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln215_17_reg_2341 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln1118_3_fu_1318_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal p_Result_i_i_i_i23_2_fu_1321_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_i_i_i_i23_2_reg_2358 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_i_i_i_i23_2_reg_2358_pp1_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_i_i_i_i23_2_reg_2358_pp1_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_i_i_i_i23_2_reg_2358_pp1_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_i_i_i_i23_2_reg_2358_pp1_iter7_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln215_21_fu_1341_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln215_21_reg_2363 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln215_23_fu_1345_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln215_23_reg_2369 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_i_i_i_i23_4_fu_1359_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_i_i_i_i23_4_reg_2379 : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_i_i_i_i23_4_reg_2379_pp1_iter4_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_i_i_i_i23_4_reg_2379_pp1_iter5_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_i_i_i_i23_4_reg_2379_pp1_iter6_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal p_Result_i_i_i_i23_4_reg_2379_pp1_iter7_reg : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln215_27_fu_1379_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln215_27_reg_2384 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln215_29_fu_1383_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln215_29_reg_2390 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln1354_fu_1438_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln1354_reg_2400 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln1118_4_fu_1453_p1 : STD_LOGIC_VECTOR (20 downto 0);
    signal sub_ln1354_3_fu_1502_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln1354_3_reg_2417 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln1354_6_fu_1563_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln1354_6_reg_2427 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln1118_2_fu_1590_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal output_rows_count_1_fu_1918_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal read_rows_count_3_fu_1971_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal first_row_index_1_fu_1992_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state4 : STD_LOGIC;
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state8 : STD_LOGIC;
    signal ap_enable_reg_pp1_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter7 : STD_LOGIC := '0';
    signal line_buffer_0_0_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal line_buffer_0_0_V_ce0 : STD_LOGIC;
    signal line_buffer_0_0_V_we0 : STD_LOGIC;
    signal line_buffer_0_0_V_d0 : STD_LOGIC_VECTOR (23 downto 0);
    signal line_buffer_0_0_V_q0 : STD_LOGIC_VECTOR (23 downto 0);
    signal line_buffer_0_0_V_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal line_buffer_0_0_V_ce1 : STD_LOGIC;
    signal line_buffer_1_0_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal line_buffer_1_0_V_ce0 : STD_LOGIC;
    signal line_buffer_1_0_V_we0 : STD_LOGIC;
    signal line_buffer_1_0_V_d0 : STD_LOGIC_VECTOR (23 downto 0);
    signal line_buffer_1_0_V_q0 : STD_LOGIC_VECTOR (23 downto 0);
    signal line_buffer_1_0_V_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal line_buffer_1_0_V_ce1 : STD_LOGIC;
    signal line_buffer_2_0_V_address0 : STD_LOGIC_VECTOR (10 downto 0);
    signal line_buffer_2_0_V_ce0 : STD_LOGIC;
    signal line_buffer_2_0_V_we0 : STD_LOGIC;
    signal line_buffer_2_0_V_q0 : STD_LOGIC_VECTOR (23 downto 0);
    signal line_buffer_2_0_V_address1 : STD_LOGIC_VECTOR (10 downto 0);
    signal line_buffer_2_0_V_ce1 : STD_LOGIC;
    signal grp_xfUDivResize_fu_519_ap_start : STD_LOGIC;
    signal grp_xfUDivResize_fu_519_ap_idle : STD_LOGIC;
    signal grp_xfUDivResize_fu_519_in_n : STD_LOGIC_VECTOR (39 downto 0);
    signal grp_xfUDivResize_fu_519_in_d : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_scaleCompute_fu_544_ap_ready : STD_LOGIC;
    signal grp_scaleCompute_fu_544_currindex : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_scaleCompute_fu_544_inscale_V : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_scaleCompute_fu_544_ap_return : STD_LOGIC_VECTOR (41 downto 0);
    signal ap_phi_mux_read_rows_count_0_phi_fu_376_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal read_rows_count_1_reg_394 : STD_LOGIC_VECTOR (31 downto 0);
    signal output_rows_count_0_reg_406 : STD_LOGIC_VECTOR (31 downto 0);
    signal indexstores_reg_418 : STD_LOGIC_VECTOR (31 downto 0);
    signal i12_0_reg_430 : STD_LOGIC_VECTOR (9 downto 0);
    signal ap_phi_mux_j13_0_phi_fu_445_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal ap_phi_mux_flag_write_2_phi_fu_458_p6 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp1_iter0_flag_write_2_reg_453 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp1_iter1_flag_write_2_reg_453 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_reg_pp1_iter2_flag_write_2_reg_453 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_P0Buf_0_V_3_phi_fu_472_p6 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp1_iter3_P0Buf_0_V_3_reg_469 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_mux_P0Buf_V_0_1_phi_fu_486_p6 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp1_iter3_P0Buf_V_0_1_reg_483 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp1_iter0_P0Buf_V_1_1_reg_497 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp1_iter1_P0Buf_V_1_1_reg_497 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp1_iter2_P0Buf_V_1_1_reg_497 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp1_iter3_P0Buf_V_1_1_reg_497 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp1_iter4_P0Buf_V_1_1_reg_497 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp1_iter0_P0Buf_1_V_3_reg_508 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp1_iter1_P0Buf_1_V_3_reg_508 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp1_iter2_P0Buf_1_V_3_reg_508 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp1_iter3_P0Buf_1_V_3_reg_508 : STD_LOGIC_VECTOR (23 downto 0);
    signal ap_phi_reg_pp1_iter4_P0Buf_1_V_3_reg_508 : STD_LOGIC_VECTOR (23 downto 0);
    signal grp_xfUDivResize_fu_519_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_state1_ignore_call8 : BOOLEAN;
    signal zext_ln308_fu_1019_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln275_fu_660_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln351_fu_1234_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln396_fu_1244_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln405_fu_1250_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln374_fu_1255_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln383_fu_1261_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln352_fu_1266_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln361_fu_1272_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal read_pixel_V_1_fu_188 : STD_LOGIC_VECTOR (23 downto 0);
    signal indexy_V_fu_192 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_V_fu_973_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal nextYScale_V_1_fu_196 : STD_LOGIC_VECTOR (16 downto 0);
    signal nextYScale_V_fu_920_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_block_pp1_stage0_01001 : BOOLEAN;
    signal icmp_ln269_fu_610_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal i_fu_628_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln708_2_fu_665_p4 : STD_LOGIC_VECTOR (24 downto 0);
    signal lhs_V_fu_737_p0 : STD_LOGIC_VECTOR (41 downto 0);
    signal lhs_V_fu_737_p1 : STD_LOGIC_VECTOR (42 downto 0);
    signal tmp_17_fu_754_p1 : STD_LOGIC_VECTOR (41 downto 0);
    signal icmp_ln1494_fu_762_p0 : STD_LOGIC_VECTOR (41 downto 0);
    signal tmp_17_fu_754_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1494_fu_762_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln1495_fu_768_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_fu_780_p1 : STD_LOGIC_VECTOR (41 downto 0);
    signal tmp_19_fu_788_p1 : STD_LOGIC_VECTOR (41 downto 0);
    signal tmp_20_fu_796_p1 : STD_LOGIC_VECTOR (41 downto 0);
    signal tmp_20_fu_796_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_21_fu_812_p1 : STD_LOGIC_VECTOR (41 downto 0);
    signal tmp_18_fu_780_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_19_fu_788_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1495_1_fu_804_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_21_fu_812_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_22_fu_820_p9 : STD_LOGIC_VECTOR (32 downto 0);
    signal sext_ln1495_fu_840_p1 : STD_LOGIC_VECTOR (41 downto 0);
    signal and_ln1494_fu_774_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1495_fu_850_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1495_fu_844_p2 : STD_LOGIC_VECTOR (41 downto 0);
    signal p_Val2_12_fu_856_p2 : STD_LOGIC_VECTOR (41 downto 0);
    signal trunc_ln851_fu_888_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_3_fu_897_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal icmp_ln851_3_fu_891_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln851_fu_906_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal select_ln851_fu_912_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln891_fu_927_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln851_3_fu_941_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_4_fu_950_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal icmp_ln851_4_fu_944_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln851_1_fu_959_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal select_ln851_1_fu_965_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln879_1_fu_989_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln879_16_fu_998_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_564_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal shl_ln_fu_1024_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal ret_V_9_fu_1031_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal tmp_26_fu_1068_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_25_fu_1060_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln1495_3_fu_1076_p3 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_27_fu_1084_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_28_fu_1092_p7 : STD_LOGIC_VECTOR (33 downto 0);
    signal sext_ln1495_1_fu_1108_p1 : STD_LOGIC_VECTOR (41 downto 0);
    signal tmp_24_fu_1046_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1494_1_fu_1054_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln1495_1_fu_1118_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln1495_1_fu_1112_p2 : STD_LOGIC_VECTOR (41 downto 0);
    signal select_ln1495_fu_1124_p3 : STD_LOGIC_VECTOR (41 downto 0);
    signal trunc_ln851_4_fu_1140_p1 : STD_LOGIC_VECTOR (21 downto 0);
    signal tmp_5_fu_1150_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal icmp_ln851_5_fu_1144_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln851_2_fu_1160_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal tmp_29_fu_1132_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln851_2_fu_1166_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal indexx_0_V_fu_1174_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln1193_fu_1182_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln703_1_fu_1194_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal shl_ln4_fu_1186_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal sub_ln1193_fu_1198_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal icmp_ln349_fu_1218_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln349_fu_1214_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal zext_ln349_1_fu_1224_p1 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln349_fu_1228_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal select_ln413_1_fu_1285_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln647_2_fu_1296_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln1354_1_fu_1308_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_i_i_i_i_0_2_fu_1331_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln1354_4_fu_1349_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_i_i_i_i_0_4_fu_1369_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal sub_ln1354_7_fu_1387_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal select_ln413_fu_1397_p3 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln647_4_fu_1408_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln215_16_fu_1412_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal trunc_ln647_3_fu_1404_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln215_18_fu_1421_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln1353_fu_1416_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln1353_6_fu_1425_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln215_19_fu_1430_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln215_20_fu_1434_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln1354_2_fu_1444_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_i_i_i_i_0_3_fu_1466_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln215_22_fu_1476_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_i_i_i_i23_3_fu_1456_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln215_24_fu_1485_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln1353_7_fu_1480_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln1353_8_fu_1489_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln215_25_fu_1494_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln215_26_fu_1498_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln1354_5_fu_1508_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_i_i_i_i_0_5_fu_1527_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln215_28_fu_1537_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal p_Result_i_i_i_i23_5_fu_1517_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln215_30_fu_1546_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln1353_9_fu_1541_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln1353_10_fu_1550_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln215_31_fu_1555_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln215_32_fu_1559_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln1354_8_fu_1569_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_2000_p2 : STD_LOGIC_VECTOR (21 downto 0);
    signal trunc_ln_fu_1578_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_2007_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_2014_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_2021_p2 : STD_LOGIC_VECTOR (20 downto 0);
    signal grp_fu_2028_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_2037_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_2046_p3 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_2055_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal shl_ln5_fu_1618_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln703_1_fu_1625_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal zext_ln1192_fu_1628_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal add_ln1192_2_fu_1632_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln851_5_fu_1646_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln1_fu_1656_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln851_fu_1650_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln851_3_fu_1666_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_30_fu_1638_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln851_3_fu_1672_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2064_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal shl_ln728_2_fu_1688_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln703_3_fu_1695_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal zext_ln1192_1_fu_1698_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal add_ln1192_5_fu_1702_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln851_6_fu_1716_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln851_1_fu_1726_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln851_1_fu_1720_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln851_4_fu_1736_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_31_fu_1708_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln851_4_fu_1742_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_2073_p3 : STD_LOGIC_VECTOR (22 downto 0);
    signal shl_ln728_3_fu_1758_p3 : STD_LOGIC_VECTOR (17 downto 0);
    signal sext_ln703_5_fu_1765_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal zext_ln1192_2_fu_1768_p1 : STD_LOGIC_VECTOR (23 downto 0);
    signal add_ln1192_8_fu_1772_p2 : STD_LOGIC_VECTOR (23 downto 0);
    signal trunc_ln851_7_fu_1786_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal trunc_ln851_2_fu_1796_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln851_2_fu_1790_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal add_ln851_5_fu_1806_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_32_fu_1778_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln851_5_fu_1812_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln850_4_fu_1820_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln850_3_fu_1750_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal select_ln850_fu_1680_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln879_fu_1845_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln879_fu_1849_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln879_fu_1860_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln879_14_fu_1871_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln879_fu_1865_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln428_fu_1887_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln428_fu_1882_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln428_fu_1893_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln428_1_fu_1899_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln879_fu_1876_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal output_rows_count_fu_1854_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal or_ln428_fu_1905_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln428_fu_1911_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln891_1_fu_1926_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal first_row_index_fu_1935_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal read_rows_count_fu_1947_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln891_fu_1930_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln432_fu_1960_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln891_fu_1965_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal read_rows_count_2_fu_1953_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln443_fu_1941_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln891_fu_1979_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln891_fu_1984_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2000_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_2000_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_2007_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_2014_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_2021_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_2028_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_2037_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_2046_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_2055_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_2064_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_2073_p0 : STD_LOGIC_VECTOR (11 downto 0);
    signal grp_fu_2000_ce : STD_LOGIC;
    signal grp_fu_2007_ce : STD_LOGIC;
    signal grp_fu_2014_ce : STD_LOGIC;
    signal grp_fu_2021_ce : STD_LOGIC;
    signal grp_fu_2028_ce : STD_LOGIC;
    signal grp_fu_2037_ce : STD_LOGIC;
    signal grp_fu_2046_ce : STD_LOGIC;
    signal grp_fu_2055_ce : STD_LOGIC;
    signal grp_fu_2064_ce : STD_LOGIC;
    signal grp_fu_2073_ce : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal grp_fu_2000_p00 : STD_LOGIC_VECTOR (21 downto 0);
    signal grp_fu_2000_p10 : STD_LOGIC_VECTOR (21 downto 0);
    signal ap_condition_617 : BOOLEAN;
    signal ap_condition_277 : BOOLEAN;
    signal ap_condition_76 : BOOLEAN;
    signal ap_condition_603 : BOOLEAN;
    signal ap_condition_181 : BOOLEAN;
    signal ap_condition_175 : BOOLEAN;
    signal ap_condition_651 : BOOLEAN;
    signal ap_condition_1915 : BOOLEAN;
    signal ap_condition_333 : BOOLEAN;
    signal ap_condition_344 : BOOLEAN;
    signal ap_condition_1924 : BOOLEAN;

    component xfUDivResize IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        in_n : IN STD_LOGIC_VECTOR (39 downto 0);
        in_d : IN STD_LOGIC_VECTOR (9 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component scaleCompute IS
    port (
        ap_ready : OUT STD_LOGIC;
        currindex : IN STD_LOGIC_VECTOR (31 downto 0);
        inscale_V : IN STD_LOGIC_VECTOR (31 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (41 downto 0) );
    end component;


    component ip_accel_app_mul_hbi IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component ip_accel_app_mul_ibs IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (20 downto 0) );
    end component;


    component ip_accel_app_mac_jbC IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (8 downto 0);
        din2 : IN STD_LOGIC_VECTOR (20 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (21 downto 0) );
    end component;


    component ip_accel_app_mac_kbM IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (11 downto 0);
        din1 : IN STD_LOGIC_VECTOR (9 downto 0);
        din2 : IN STD_LOGIC_VECTOR (21 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (22 downto 0) );
    end component;


    component resizeNNBilinear_eOg IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (23 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (23 downto 0);
        address1 : IN STD_LOGIC_VECTOR (10 downto 0);
        ce1 : IN STD_LOGIC;
        q1 : OUT STD_LOGIC_VECTOR (23 downto 0) );
    end component;



begin
    line_buffer_0_0_V_U : component resizeNNBilinear_eOg
    generic map (
        DataWidth => 24,
        AddressRange => 1280,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => line_buffer_0_0_V_address0,
        ce0 => line_buffer_0_0_V_ce0,
        we0 => line_buffer_0_0_V_we0,
        d0 => line_buffer_0_0_V_d0,
        q0 => line_buffer_0_0_V_q0,
        address1 => line_buffer_0_0_V_address1,
        ce1 => line_buffer_0_0_V_ce1,
        q1 => line_buffer_0_0_V_q1);

    line_buffer_1_0_V_U : component resizeNNBilinear_eOg
    generic map (
        DataWidth => 24,
        AddressRange => 1280,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => line_buffer_1_0_V_address0,
        ce0 => line_buffer_1_0_V_ce0,
        we0 => line_buffer_1_0_V_we0,
        d0 => line_buffer_1_0_V_d0,
        q0 => line_buffer_1_0_V_q0,
        address1 => line_buffer_1_0_V_address1,
        ce1 => line_buffer_1_0_V_ce1,
        q1 => line_buffer_1_0_V_q1);

    line_buffer_2_0_V_U : component resizeNNBilinear_eOg
    generic map (
        DataWidth => 24,
        AddressRange => 1280,
        AddressWidth => 11)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => line_buffer_2_0_V_address0,
        ce0 => line_buffer_2_0_V_ce0,
        we0 => line_buffer_2_0_V_we0,
        d0 => read_pixel_V_1_fu_188,
        q0 => line_buffer_2_0_V_q0,
        address1 => line_buffer_2_0_V_address1,
        ce1 => line_buffer_2_0_V_ce1,
        q1 => line_buffer_2_0_V_q1);

    grp_xfUDivResize_fu_519 : component xfUDivResize
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_xfUDivResize_fu_519_ap_start,
        ap_done => grp_xfUDivResize_fu_519_ap_done,
        ap_idle => grp_xfUDivResize_fu_519_ap_idle,
        ap_ready => grp_xfUDivResize_fu_519_ap_ready,
        in_n => grp_xfUDivResize_fu_519_in_n,
        in_d => grp_xfUDivResize_fu_519_in_d,
        ap_return => grp_xfUDivResize_fu_519_ap_return);

    grp_scaleCompute_fu_544 : component scaleCompute
    port map (
        ap_ready => grp_scaleCompute_fu_544_ap_ready,
        currindex => grp_scaleCompute_fu_544_currindex,
        inscale_V => grp_scaleCompute_fu_544_inscale_V,
        ap_return => grp_scaleCompute_fu_544_ap_return);

    ip_accel_app_mul_hbi_U60 : component ip_accel_app_mul_hbi
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 12,
        din1_WIDTH => 12,
        dout_WIDTH => 22)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2000_p0,
        din1 => grp_fu_2000_p1,
        ce => grp_fu_2000_ce,
        dout => grp_fu_2000_p2);

    ip_accel_app_mul_ibs_U61 : component ip_accel_app_mul_ibs
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 12,
        din1_WIDTH => 9,
        dout_WIDTH => 21)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2007_p0,
        din1 => sub_ln1354_1_fu_1308_p2,
        ce => grp_fu_2007_ce,
        dout => grp_fu_2007_p2);

    ip_accel_app_mul_ibs_U62 : component ip_accel_app_mul_ibs
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 12,
        din1_WIDTH => 9,
        dout_WIDTH => 21)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2014_p0,
        din1 => sub_ln1354_4_fu_1349_p2,
        ce => grp_fu_2014_ce,
        dout => grp_fu_2014_p2);

    ip_accel_app_mul_ibs_U63 : component ip_accel_app_mul_ibs
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 12,
        din1_WIDTH => 9,
        dout_WIDTH => 21)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2021_p0,
        din1 => sub_ln1354_7_fu_1387_p2,
        ce => grp_fu_2021_ce,
        dout => grp_fu_2021_p2);

    ip_accel_app_mac_jbC_U64 : component ip_accel_app_mac_jbC
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 12,
        din1_WIDTH => 9,
        din2_WIDTH => 21,
        dout_WIDTH => 22)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2028_p0,
        din1 => sub_ln1354_2_fu_1444_p2,
        din2 => grp_fu_2007_p2,
        ce => grp_fu_2028_ce,
        dout => grp_fu_2028_p3);

    ip_accel_app_mac_jbC_U65 : component ip_accel_app_mac_jbC
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 12,
        din1_WIDTH => 9,
        din2_WIDTH => 21,
        dout_WIDTH => 22)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2037_p0,
        din1 => sub_ln1354_5_fu_1508_p2,
        din2 => grp_fu_2014_p2,
        ce => grp_fu_2037_ce,
        dout => grp_fu_2037_p3);

    ip_accel_app_mac_jbC_U66 : component ip_accel_app_mac_jbC
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 12,
        din1_WIDTH => 9,
        din2_WIDTH => 21,
        dout_WIDTH => 22)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2046_p0,
        din1 => sub_ln1354_8_fu_1569_p2,
        din2 => grp_fu_2021_p2,
        ce => grp_fu_2046_ce,
        dout => grp_fu_2046_p3);

    ip_accel_app_mac_kbM_U67 : component ip_accel_app_mac_kbM
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 12,
        din1_WIDTH => 10,
        din2_WIDTH => 22,
        dout_WIDTH => 23)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2055_p0,
        din1 => sub_ln1354_reg_2400,
        din2 => grp_fu_2028_p3,
        ce => grp_fu_2055_ce,
        dout => grp_fu_2055_p3);

    ip_accel_app_mac_kbM_U68 : component ip_accel_app_mac_kbM
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 12,
        din1_WIDTH => 10,
        din2_WIDTH => 22,
        dout_WIDTH => 23)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2064_p0,
        din1 => sub_ln1354_3_reg_2417,
        din2 => grp_fu_2037_p3,
        ce => grp_fu_2064_ce,
        dout => grp_fu_2064_p3);

    ip_accel_app_mac_kbM_U69 : component ip_accel_app_mac_kbM
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 12,
        din1_WIDTH => 10,
        din2_WIDTH => 22,
        dout_WIDTH => 23)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2073_p0,
        din1 => sub_ln1354_6_reg_2427,
        din2 => grp_fu_2046_p3,
        ce => grp_fu_2073_ce,
        dout => grp_fu_2073_p3);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((icmp_ln304_fu_689_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (grp_xfUDivResize_fu_519_ap_done = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state4))) then 
                    ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state4);
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (grp_xfUDivResize_fu_519_ap_done = ap_const_logic_1))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state8))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif (((icmp_ln304_fu_689_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp1_exit_iter0_state8)) then 
                        ap_enable_reg_pp1_iter1 <= (ap_const_logic_1 xor ap_condition_pp1_exit_iter0_state8);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter4 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter4 <= ap_enable_reg_pp1_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter5 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter5 <= ap_enable_reg_pp1_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter6 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter6 <= ap_enable_reg_pp1_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter7 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter7 <= ap_enable_reg_pp1_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter8 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter8 <= ap_enable_reg_pp1_iter7;
                elsif (((icmp_ln304_fu_689_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                    ap_enable_reg_pp1_iter8 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_xfUDivResize_fu_519_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_xfUDivResize_fu_519_ap_start_reg <= ap_const_logic_0;
            else
                if (((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (grp_xfUDivResize_fu_519_ap_done = ap_const_logic_1)))) then 
                    grp_xfUDivResize_fu_519_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_xfUDivResize_fu_519_ap_ready = ap_const_logic_1)) then 
                    grp_xfUDivResize_fu_519_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp1_iter1_flag_write_2_reg_453_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_277)) then
                if ((ap_const_boolean_1 = ap_condition_617)) then 
                    ap_phi_reg_pp1_iter1_flag_write_2_reg_453 <= ap_const_lv1_0;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter1_flag_write_2_reg_453 <= ap_phi_reg_pp1_iter0_flag_write_2_reg_453;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter2_flag_write_2_reg_453_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_603)) then
                if (((icmp_ln318_reg_2176 = ap_const_lv1_1) and (icmp_ln308_reg_2218 = ap_const_lv1_1))) then 
                    ap_phi_reg_pp1_iter2_flag_write_2_reg_453 <= ap_const_lv1_0;
                elsif ((ap_const_boolean_1 = ap_condition_76)) then 
                    ap_phi_reg_pp1_iter2_flag_write_2_reg_453 <= ap_const_lv1_1;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter2_flag_write_2_reg_453 <= ap_phi_reg_pp1_iter1_flag_write_2_reg_453;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter4_P0Buf_1_V_3_reg_508_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                if ((ap_const_boolean_1 = ap_condition_175)) then 
                    ap_phi_reg_pp1_iter4_P0Buf_1_V_3_reg_508 <= line_buffer_0_0_V_q1;
                elsif ((ap_const_boolean_1 = ap_condition_181)) then 
                    ap_phi_reg_pp1_iter4_P0Buf_1_V_3_reg_508 <= line_buffer_2_0_V_q1;
                elsif (((icmp_ln343_reg_2154 = ap_const_lv1_1) and (icmp_ln308_reg_2218_pp1_iter2_reg = ap_const_lv1_1))) then 
                    ap_phi_reg_pp1_iter4_P0Buf_1_V_3_reg_508 <= line_buffer_1_0_V_q1;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter4_P0Buf_1_V_3_reg_508 <= ap_phi_reg_pp1_iter3_P0Buf_1_V_3_reg_508;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp1_iter4_P0Buf_V_1_1_reg_497_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter3 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                if ((ap_const_boolean_1 = ap_condition_175)) then 
                    ap_phi_reg_pp1_iter4_P0Buf_V_1_1_reg_497 <= line_buffer_2_0_V_q1;
                elsif ((ap_const_boolean_1 = ap_condition_181)) then 
                    ap_phi_reg_pp1_iter4_P0Buf_V_1_1_reg_497 <= line_buffer_1_0_V_q1;
                elsif (((icmp_ln343_reg_2154 = ap_const_lv1_1) and (icmp_ln308_reg_2218_pp1_iter2_reg = ap_const_lv1_1))) then 
                    ap_phi_reg_pp1_iter4_P0Buf_V_1_1_reg_497 <= line_buffer_0_0_V_q1;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp1_iter4_P0Buf_V_1_1_reg_497 <= ap_phi_reg_pp1_iter3_P0Buf_V_1_1_reg_497;
                end if;
            end if; 
        end if;
    end process;

    i12_0_reg_430_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
                i12_0_reg_430 <= add_ln304_reg_2149;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                i12_0_reg_430 <= ap_const_lv10_0;
            end if; 
        end if;
    end process;

    indexstores_reg_418_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
                indexstores_reg_418 <= first_row_index_1_fu_1992_p3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                indexstores_reg_418 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    indexy_V_fu_192_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln308_reg_2218 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                indexy_V_fu_192 <= tmp_V_fu_973_p3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                indexy_V_fu_192 <= ap_const_lv17_0;
            end if; 
        end if;
    end process;

    indvar_flatten_reg_361_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln266_fu_616_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                indvar_flatten_reg_361 <= add_ln266_fu_622_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (grp_xfUDivResize_fu_519_ap_done = ap_const_logic_1))) then 
                indvar_flatten_reg_361 <= ap_const_lv13_0;
            end if; 
        end if;
    end process;

    j13_0_reg_441_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln308_reg_2218 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                j13_0_reg_441 <= j_1_reg_2222;
            elsif (((icmp_ln304_fu_689_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                j13_0_reg_441 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    j_0_reg_383_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln266_fu_616_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
                j_0_reg_383 <= j_fu_654_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (grp_xfUDivResize_fu_519_ap_done = ap_const_logic_1))) then 
                j_0_reg_383 <= ap_const_lv11_0;
            end if; 
        end if;
    end process;

    nextYScale_V_1_fu_196_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln308_fu_876_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
                nextYScale_V_1_fu_196 <= nextYScale_V_fu_920_p3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                nextYScale_V_1_fu_196 <= ap_const_lv17_0;
            end if; 
        end if;
    end process;

    output_rows_count_0_reg_406_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
                output_rows_count_0_reg_406 <= output_rows_count_1_fu_1918_p3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                output_rows_count_0_reg_406 <= ap_const_lv32_0;
            end if; 
        end if;
    end process;

    read_rows_count_0_reg_372_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln266_reg_2092 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                read_rows_count_0_reg_372 <= select_ln321_1_reg_2106;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state3) and (grp_xfUDivResize_fu_519_ap_done = ap_const_logic_1))) then 
                read_rows_count_0_reg_372 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    read_rows_count_1_reg_394_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state17)) then 
                read_rows_count_1_reg_394 <= read_rows_count_3_fu_1971_p3;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
                read_rows_count_1_reg_394 <= ap_const_lv32_2;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln308_reg_2218_pp1_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                WeightX_0_V_reg_2255 <= sub_ln1193_fu_1198_p2(23 downto 12);
                WeightY_V_reg_2250 <= ret_V_9_fu_1031_p2(23 downto 12);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp1_stage0_11001)) then
                WeightX_0_V_reg_2255_pp1_iter3_reg <= WeightX_0_V_reg_2255;
                and_ln411_1_reg_2242_pp1_iter2_reg <= and_ln411_1_reg_2242;
                and_ln411_1_reg_2242_pp1_iter3_reg <= and_ln411_1_reg_2242_pp1_iter2_reg;
                and_ln411_1_reg_2242_pp1_iter4_reg <= and_ln411_1_reg_2242_pp1_iter3_reg;
                and_ln411_1_reg_2242_pp1_iter5_reg <= and_ln411_1_reg_2242_pp1_iter4_reg;
                and_ln411_1_reg_2242_pp1_iter6_reg <= and_ln411_1_reg_2242_pp1_iter5_reg;
                and_ln411_1_reg_2242_pp1_iter7_reg <= and_ln411_1_reg_2242_pp1_iter6_reg;
                and_ln411_reg_2246_pp1_iter2_reg <= and_ln411_reg_2246;
                and_ln411_reg_2246_pp1_iter3_reg <= and_ln411_reg_2246_pp1_iter2_reg;
                and_ln411_reg_2246_pp1_iter4_reg <= and_ln411_reg_2246_pp1_iter3_reg;
                and_ln411_reg_2246_pp1_iter5_reg <= and_ln411_reg_2246_pp1_iter4_reg;
                and_ln411_reg_2246_pp1_iter6_reg <= and_ln411_reg_2246_pp1_iter5_reg;
                and_ln411_reg_2246_pp1_iter7_reg <= and_ln411_reg_2246_pp1_iter6_reg;
                icmp_ln308_reg_2218_pp1_iter2_reg <= icmp_ln308_reg_2218_pp1_iter1_reg;
                icmp_ln879_15_reg_2236_pp1_iter2_reg <= icmp_ln879_15_reg_2236;
                icmp_ln879_15_reg_2236_pp1_iter3_reg <= icmp_ln879_15_reg_2236_pp1_iter2_reg;
                icmp_ln879_15_reg_2236_pp1_iter4_reg <= icmp_ln879_15_reg_2236_pp1_iter3_reg;
                icmp_ln879_15_reg_2236_pp1_iter5_reg <= icmp_ln879_15_reg_2236_pp1_iter4_reg;
                icmp_ln879_15_reg_2236_pp1_iter6_reg <= icmp_ln879_15_reg_2236_pp1_iter5_reg;
                icmp_ln879_15_reg_2236_pp1_iter7_reg <= icmp_ln879_15_reg_2236_pp1_iter6_reg;
                p_Result_i_i_i_i23_2_reg_2358_pp1_iter4_reg <= p_Result_i_i_i_i23_2_reg_2358;
                p_Result_i_i_i_i23_2_reg_2358_pp1_iter5_reg <= p_Result_i_i_i_i23_2_reg_2358_pp1_iter4_reg;
                p_Result_i_i_i_i23_2_reg_2358_pp1_iter6_reg <= p_Result_i_i_i_i23_2_reg_2358_pp1_iter5_reg;
                p_Result_i_i_i_i23_2_reg_2358_pp1_iter7_reg <= p_Result_i_i_i_i23_2_reg_2358_pp1_iter6_reg;
                p_Result_i_i_i_i23_4_reg_2379_pp1_iter4_reg <= p_Result_i_i_i_i23_4_reg_2379;
                p_Result_i_i_i_i23_4_reg_2379_pp1_iter5_reg <= p_Result_i_i_i_i23_4_reg_2379_pp1_iter4_reg;
                p_Result_i_i_i_i23_4_reg_2379_pp1_iter6_reg <= p_Result_i_i_i_i23_4_reg_2379_pp1_iter5_reg;
                p_Result_i_i_i_i23_4_reg_2379_pp1_iter7_reg <= p_Result_i_i_i_i23_4_reg_2379_pp1_iter6_reg;
                trunc_ln647_reg_2330_pp1_iter4_reg <= trunc_ln647_reg_2330;
                trunc_ln647_reg_2330_pp1_iter5_reg <= trunc_ln647_reg_2330_pp1_iter4_reg;
                trunc_ln647_reg_2330_pp1_iter6_reg <= trunc_ln647_reg_2330_pp1_iter5_reg;
                trunc_ln647_reg_2330_pp1_iter7_reg <= trunc_ln647_reg_2330_pp1_iter6_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state7)) then
                add_ln304_reg_2149 <= add_ln304_fu_695_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln304_fu_689_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                add_ln409_1_reg_2166 <= add_ln409_1_fu_713_p2;
                add_ln409_reg_2158 <= add_ln409_fu_707_p2;
                icmp_ln318_reg_2176 <= icmp_ln318_fu_725_p2;
                icmp_ln343_reg_2154 <= icmp_ln343_fu_701_p2;
                icmp_ln365_reg_2172 <= icmp_ln365_fu_719_p2;
                icmp_ln409_reg_2184 <= icmp_ln409_fu_731_p2;
                p_Result_1_reg_2208 <= p_Val2_12_fu_856_p3(41 downto 41);
                p_Result_s_reg_2197 <= ret_V_fu_741_p2(42 downto 42);
                p_Val2_12_reg_2202 <= p_Val2_12_fu_856_p3;
                ret_V_reg_2191 <= ret_V_fu_741_p2;
                trunc_ln700_reg_2213 <= trunc_ln700_fu_872_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln409_reg_2184 = ap_const_lv1_0) and (icmp_ln879_15_fu_993_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                and_ln411_1_reg_2242 <= and_ln411_1_fu_1003_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln879_15_fu_993_p2 = ap_const_lv1_1) and (icmp_ln409_reg_2184 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                and_ln411_reg_2246 <= and_ln411_fu_1009_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                ap_phi_reg_pp1_iter1_P0Buf_1_V_3_reg_508 <= ap_phi_reg_pp1_iter0_P0Buf_1_V_3_reg_508;
                ap_phi_reg_pp1_iter1_P0Buf_V_1_1_reg_497 <= ap_phi_reg_pp1_iter0_P0Buf_V_1_1_reg_497;
                j_1_reg_2222 <= j_1_fu_882_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                ap_phi_reg_pp1_iter2_P0Buf_1_V_3_reg_508 <= ap_phi_reg_pp1_iter1_P0Buf_1_V_3_reg_508;
                ap_phi_reg_pp1_iter2_P0Buf_V_1_1_reg_497 <= ap_phi_reg_pp1_iter1_P0Buf_V_1_1_reg_497;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                ap_phi_reg_pp1_iter3_P0Buf_1_V_3_reg_508 <= ap_phi_reg_pp1_iter2_P0Buf_1_V_3_reg_508;
                ap_phi_reg_pp1_iter3_P0Buf_V_1_1_reg_497 <= ap_phi_reg_pp1_iter2_P0Buf_V_1_1_reg_497;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln266_reg_2092 <= icmp_ln266_fu_616_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                icmp_ln308_reg_2218 <= icmp_ln308_fu_876_p2;
                icmp_ln308_reg_2218_pp1_iter1_reg <= icmp_ln308_reg_2218;
                j13_0_reg_441_pp1_iter1_reg <= j13_0_reg_441;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln308_fu_876_p2 = ap_const_lv1_1) and (icmp_ln318_reg_2176 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                icmp_ln322_reg_2227 <= icmp_ln322_fu_931_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln409_reg_2184 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                icmp_ln879_15_reg_2236 <= icmp_ln879_15_fu_993_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (((ap_const_lv1_1 = and_ln411_reg_2246_pp1_iter2_reg) and (icmp_ln879_15_reg_2236_pp1_iter2_reg = ap_const_lv1_1) and (icmp_ln409_reg_2184 = ap_const_lv1_0)) or ((ap_const_lv1_1 = and_ln411_1_reg_2242_pp1_iter2_reg) and (icmp_ln409_reg_2184 = ap_const_lv1_0) and (icmp_ln879_15_reg_2236_pp1_iter2_reg = ap_const_lv1_0))))) then
                p_Result_i_i_i_i23_2_reg_2358 <= select_ln413_1_fu_1285_p3(15 downto 8);
                p_Result_i_i_i_i23_4_reg_2379 <= select_ln413_1_fu_1285_p3(23 downto 16);
                trunc_ln647_reg_2330 <= trunc_ln647_fu_1292_p1;
                    zext_ln215_17_reg_2341(7 downto 0) <= zext_ln215_17_fu_1304_p1(7 downto 0);
                    zext_ln215_21_reg_2363(7 downto 0) <= zext_ln215_21_fu_1341_p1(7 downto 0);
                    zext_ln215_23_reg_2369(7 downto 0) <= zext_ln215_23_fu_1345_p1(7 downto 0);
                    zext_ln215_27_reg_2384(7 downto 0) <= zext_ln215_27_fu_1379_p1(7 downto 0);
                    zext_ln215_29_reg_2390(7 downto 0) <= zext_ln215_29_fu_1383_p1(7 downto 0);
                    zext_ln215_reg_2335(7 downto 0) <= zext_ln215_fu_1300_p1(7 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln308_reg_2218 = ap_const_lv1_1) and (icmp_ln322_reg_2227 = ap_const_lv1_0) and (icmp_ln318_reg_2176 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                read_pixel_V_1_fu_188 <= imgInput_data_V_dout;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_CS_fsm_state3) and (grp_xfUDivResize_fu_519_ap_done = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (grp_xfUDivResize_fu_519_ap_done = ap_const_logic_1)))) then
                reg_576 <= grp_xfUDivResize_fu_519_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state6)) then
                    rhs_V_reg_2140(24 downto 0) <= rhs_V_fu_675_p1(24 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state3) and (grp_xfUDivResize_fu_519_ap_done = ap_const_logic_1))) then
                    scalex_V_reg_2082(31 downto 1) <= scalex_V_fu_598_p2(31 downto 1);
                    scaley_V_reg_2087(31 downto 1) <= scaley_V_fu_604_p2(31 downto 1);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln266_fu_616_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                select_ln321_1_reg_2106 <= select_ln321_1_fu_642_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln266_fu_616_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                select_ln321_reg_2101 <= select_ln321_fu_634_p3;
                trunc_ln321_reg_2111 <= trunc_ln321_fu_650_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (((ap_const_lv1_1 = and_ln411_1_reg_2242_pp1_iter3_reg) and (icmp_ln409_reg_2184 = ap_const_lv1_0) and (icmp_ln879_15_reg_2236_pp1_iter3_reg = ap_const_lv1_0)) or ((ap_const_lv1_1 = and_ln411_reg_2246_pp1_iter3_reg) and (icmp_ln879_15_reg_2236_pp1_iter3_reg = ap_const_lv1_1) and (icmp_ln409_reg_2184 = ap_const_lv1_0))))) then
                sub_ln1354_3_reg_2417 <= sub_ln1354_3_fu_1502_p2;
                sub_ln1354_6_reg_2427 <= sub_ln1354_6_fu_1563_p2;
                sub_ln1354_reg_2400 <= sub_ln1354_fu_1438_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln308_reg_2218 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then
                trunc_ln703_reg_2231 <= trunc_ln703_fu_980_p1;
            end if;
        end if;
    end process;
    scalex_V_reg_2082(0) <= '0';
    scaley_V_reg_2087(0) <= '0';
    rhs_V_reg_2140(42 downto 25) <= "000000000000000000";
    zext_ln215_reg_2335(8) <= '0';
    zext_ln215_17_reg_2341(8) <= '0';
    zext_ln215_21_reg_2363(8) <= '0';
    zext_ln215_23_reg_2369(8) <= '0';
    zext_ln215_27_reg_2384(8) <= '0';
    zext_ln215_29_reg_2390(8) <= '0';

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter8, ap_CS_fsm_state2, grp_xfUDivResize_fu_519_ap_done, ap_CS_fsm_state3, icmp_ln266_fu_616_p2, ap_enable_reg_pp0_iter0, icmp_ln304_fu_689_p2, ap_CS_fsm_state7, icmp_ln308_fu_876_p2, ap_enable_reg_pp1_iter0, ap_block_pp0_stage0_subdone, ap_block_pp1_stage0_subdone, ap_enable_reg_pp1_iter7)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (grp_xfUDivResize_fu_519_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (grp_xfUDivResize_fu_519_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((icmp_ln266_fu_616_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((icmp_ln266_fu_616_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                if (((icmp_ln304_fu_689_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_pp1_stage0 => 
                if ((not(((ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (icmp_ln308_fu_876_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) and not(((ap_enable_reg_pp1_iter7 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter8 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif ((((ap_enable_reg_pp1_iter7 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter8 = ap_const_logic_1)) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (icmp_ln308_fu_876_p2 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state17 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when others =>  
                ap_NS_fsm <= "XXXXXXXX";
        end case;
    end process;
    WeightX_0_V_fu_1204_p4 <= sub_ln1193_fu_1198_p2(23 downto 12);
    WeightY_V_fu_1036_p4 <= ret_V_9_fu_1031_p2(23 downto 12);
    add_ln1192_2_fu_1632_p2 <= std_logic_vector(signed(sext_ln703_1_fu_1625_p1) + signed(zext_ln1192_fu_1628_p1));
    add_ln1192_5_fu_1702_p2 <= std_logic_vector(signed(sext_ln703_3_fu_1695_p1) + signed(zext_ln1192_1_fu_1698_p1));
    add_ln1192_8_fu_1772_p2 <= std_logic_vector(signed(sext_ln703_5_fu_1765_p1) + signed(zext_ln1192_2_fu_1768_p1));
    add_ln1353_10_fu_1550_p2 <= std_logic_vector(unsigned(zext_ln215_29_reg_2390) + unsigned(zext_ln215_30_fu_1546_p1));
    add_ln1353_6_fu_1425_p2 <= std_logic_vector(unsigned(zext_ln215_17_reg_2341) + unsigned(zext_ln215_18_fu_1421_p1));
    add_ln1353_7_fu_1480_p2 <= std_logic_vector(unsigned(zext_ln215_21_reg_2363) + unsigned(zext_ln215_22_fu_1476_p1));
    add_ln1353_8_fu_1489_p2 <= std_logic_vector(unsigned(zext_ln215_23_reg_2369) + unsigned(zext_ln215_24_fu_1485_p1));
    add_ln1353_9_fu_1541_p2 <= std_logic_vector(unsigned(zext_ln215_27_reg_2384) + unsigned(zext_ln215_28_fu_1537_p1));
    add_ln1353_fu_1416_p2 <= std_logic_vector(unsigned(zext_ln215_reg_2335) + unsigned(zext_ln215_16_fu_1412_p1));
    add_ln1495_1_fu_1112_p2 <= std_logic_vector(unsigned(ap_const_lv42_13FC00000) + unsigned(sext_ln1495_1_fu_1108_p1));
    add_ln1495_fu_844_p2 <= std_logic_vector(unsigned(ap_const_lv42_B3C00000) + unsigned(sext_ln1495_fu_840_p1));
    add_ln266_fu_622_p2 <= std_logic_vector(unsigned(indvar_flatten_reg_361) + unsigned(ap_const_lv13_1));
    add_ln304_fu_695_p2 <= std_logic_vector(unsigned(i12_0_reg_430) + unsigned(ap_const_lv10_1));
    add_ln349_fu_1228_p2 <= std_logic_vector(unsigned(zext_ln349_fu_1214_p1) + unsigned(zext_ln349_1_fu_1224_p1));
    add_ln409_1_fu_713_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFE) + signed(read_rows_count_1_reg_394));
    add_ln409_fu_707_p2 <= std_logic_vector(signed(ap_const_lv32_FFFFFFFF) + signed(read_rows_count_1_reg_394));
    add_ln851_1_fu_959_p2 <= std_logic_vector(unsigned(ap_const_lv17_1) + unsigned(tmp_4_fu_950_p4));
    add_ln851_2_fu_1160_p2 <= std_logic_vector(unsigned(ap_const_lv17_1) + unsigned(tmp_5_fu_1150_p4));
    add_ln851_3_fu_1666_p2 <= std_logic_vector(unsigned(ap_const_lv8_1) + unsigned(trunc_ln1_fu_1656_p4));
    add_ln851_4_fu_1736_p2 <= std_logic_vector(unsigned(ap_const_lv8_1) + unsigned(trunc_ln851_1_fu_1726_p4));
    add_ln851_5_fu_1806_p2 <= std_logic_vector(unsigned(ap_const_lv8_1) + unsigned(trunc_ln851_2_fu_1796_p4));
    add_ln851_fu_906_p2 <= std_logic_vector(unsigned(ap_const_lv17_1) + unsigned(tmp_3_fu_897_p4));
    and_ln1494_fu_774_p2 <= (xor_ln1495_fu_768_p2 and icmp_ln1494_fu_762_p2);
    and_ln411_1_fu_1003_p2 <= (icmp_ln879_16_fu_998_p2 and grp_fu_564_p2);
    and_ln411_fu_1009_p2 <= (icmp_ln318_reg_2176 and grp_fu_564_p2);
    and_ln428_1_fu_1899_p2 <= (icmp_ln879_fu_1849_p2 and and_ln428_fu_1893_p2);
    and_ln428_fu_1893_p2 <= (xor_ln428_fu_1882_p2 and icmp_ln428_fu_1887_p2);
    and_ln879_fu_1876_p2 <= (xor_ln879_fu_1865_p2 and icmp_ln879_14_fu_1871_p2);
    and_ln891_fu_1965_p2 <= (xor_ln432_fu_1960_p2 and icmp_ln891_fu_1930_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(3);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(6);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state17 <= ap_CS_fsm(7);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state6 <= ap_CS_fsm(4);
    ap_CS_fsm_state7 <= ap_CS_fsm(5);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(imgInput_data_V_empty_n, ap_enable_reg_pp0_iter1, icmp_ln266_reg_2092)
    begin
                ap_block_pp0_stage0_11001 <= ((icmp_ln266_reg_2092 = ap_const_lv1_0) and (imgInput_data_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(imgInput_data_V_empty_n, ap_enable_reg_pp0_iter1, icmp_ln266_reg_2092)
    begin
                ap_block_pp0_stage0_subdone <= ((icmp_ln266_reg_2092 = ap_const_lv1_0) and (imgInput_data_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1));
    end process;

        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage0_01001_assign_proc : process(imgInput_data_V_empty_n, imgOutput_data_V_full_n, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter8, ap_predicate_op130_read_state9, ap_predicate_op400_write_state16)
    begin
                ap_block_pp1_stage0_01001 <= (((imgOutput_data_V_full_n = ap_const_logic_0) and (ap_predicate_op400_write_state16 = ap_const_boolean_1) and (ap_enable_reg_pp1_iter8 = ap_const_logic_1)) or ((imgInput_data_V_empty_n = ap_const_logic_0) and (ap_predicate_op130_read_state9 = ap_const_boolean_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp1_stage0_11001_assign_proc : process(imgInput_data_V_empty_n, imgOutput_data_V_full_n, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter8, ap_predicate_op130_read_state9, ap_predicate_op400_write_state16)
    begin
                ap_block_pp1_stage0_11001 <= (((imgOutput_data_V_full_n = ap_const_logic_0) and (ap_predicate_op400_write_state16 = ap_const_boolean_1) and (ap_enable_reg_pp1_iter8 = ap_const_logic_1)) or ((imgInput_data_V_empty_n = ap_const_logic_0) and (ap_predicate_op130_read_state9 = ap_const_boolean_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1)));
    end process;


    ap_block_pp1_stage0_subdone_assign_proc : process(imgInput_data_V_empty_n, imgOutput_data_V_full_n, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter8, ap_predicate_op130_read_state9, ap_predicate_op400_write_state16)
    begin
                ap_block_pp1_stage0_subdone <= (((imgOutput_data_V_full_n = ap_const_logic_0) and (ap_predicate_op400_write_state16 = ap_const_boolean_1) and (ap_enable_reg_pp1_iter8 = ap_const_logic_1)) or ((imgInput_data_V_empty_n = ap_const_logic_0) and (ap_predicate_op130_read_state9 = ap_const_boolean_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1)));
    end process;


    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state10_pp1_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp1_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp1_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp1_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp1_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp1_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state16_pp1_stage0_iter8_assign_proc : process(imgOutput_data_V_full_n, ap_predicate_op400_write_state16)
    begin
                ap_block_state16_pp1_stage0_iter8 <= ((imgOutput_data_V_full_n = ap_const_logic_0) and (ap_predicate_op400_write_state16 = ap_const_boolean_1));
    end process;


    ap_block_state1_ignore_call8_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1_ignore_call8 <= ((ap_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state4_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state5_pp0_stage0_iter1_assign_proc : process(imgInput_data_V_empty_n, icmp_ln266_reg_2092)
    begin
                ap_block_state5_pp0_stage0_iter1 <= ((icmp_ln266_reg_2092 = ap_const_lv1_0) and (imgInput_data_V_empty_n = ap_const_logic_0));
    end process;

        ap_block_state8_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state9_pp1_stage0_iter1_assign_proc : process(imgInput_data_V_empty_n, ap_predicate_op130_read_state9)
    begin
                ap_block_state9_pp1_stage0_iter1 <= ((imgInput_data_V_empty_n = ap_const_logic_0) and (ap_predicate_op130_read_state9 = ap_const_boolean_1));
    end process;


    ap_condition_175_assign_proc : process(icmp_ln308_reg_2218_pp1_iter2_reg, icmp_ln343_reg_2154, icmp_ln365_reg_2172)
    begin
                ap_condition_175 <= ((icmp_ln308_reg_2218_pp1_iter2_reg = ap_const_lv1_1) and (icmp_ln365_reg_2172 = ap_const_lv1_0) and (icmp_ln343_reg_2154 = ap_const_lv1_0));
    end process;


    ap_condition_181_assign_proc : process(icmp_ln308_reg_2218_pp1_iter2_reg, icmp_ln343_reg_2154, icmp_ln365_reg_2172)
    begin
                ap_condition_181 <= ((icmp_ln365_reg_2172 = ap_const_lv1_1) and (icmp_ln308_reg_2218_pp1_iter2_reg = ap_const_lv1_1) and (icmp_ln343_reg_2154 = ap_const_lv1_0));
    end process;


    ap_condition_1915_assign_proc : process(icmp_ln879_15_reg_2236, icmp_ln343_reg_2154, icmp_ln365_reg_2172)
    begin
                ap_condition_1915 <= ((icmp_ln365_reg_2172 = ap_const_lv1_1) and (icmp_ln879_15_reg_2236 = ap_const_lv1_0) and (icmp_ln343_reg_2154 = ap_const_lv1_0));
    end process;


    ap_condition_1924_assign_proc : process(ap_block_pp1_stage0, icmp_ln343_reg_2154, icmp_ln308_reg_2218_pp1_iter1_reg, ap_enable_reg_pp1_iter2)
    begin
                ap_condition_1924 <= ((icmp_ln308_reg_2218_pp1_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (icmp_ln343_reg_2154 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1));
    end process;


    ap_condition_277_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter0)
    begin
                ap_condition_277 <= ((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001));
    end process;


    ap_condition_333_assign_proc : process(icmp_ln879_15_reg_2236, icmp_ln343_reg_2154, icmp_ln365_reg_2172, icmp_ln308_reg_2218_pp1_iter1_reg)
    begin
                ap_condition_333 <= ((icmp_ln308_reg_2218_pp1_iter1_reg = ap_const_lv1_1) and (icmp_ln879_15_reg_2236 = ap_const_lv1_0) and (icmp_ln365_reg_2172 = ap_const_lv1_0) and (icmp_ln343_reg_2154 = ap_const_lv1_0));
    end process;


    ap_condition_344_assign_proc : process(icmp_ln343_reg_2154, icmp_ln365_reg_2172, icmp_ln308_reg_2218_pp1_iter1_reg)
    begin
                ap_condition_344 <= ((icmp_ln308_reg_2218_pp1_iter1_reg = ap_const_lv1_1) and (icmp_ln365_reg_2172 = ap_const_lv1_1) and (icmp_ln343_reg_2154 = ap_const_lv1_0));
    end process;


    ap_condition_603_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0_11001)
    begin
                ap_condition_603 <= ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001));
    end process;


    ap_condition_617_assign_proc : process(icmp_ln318_reg_2176, icmp_ln308_fu_876_p2, icmp_ln322_fu_931_p2)
    begin
                ap_condition_617 <= ((icmp_ln322_fu_931_p2 = ap_const_lv1_1) and (icmp_ln308_fu_876_p2 = ap_const_lv1_1) and (icmp_ln318_reg_2176 = ap_const_lv1_0));
    end process;


    ap_condition_651_assign_proc : process(ap_block_pp1_stage0, icmp_ln308_reg_2218_pp1_iter1_reg, ap_enable_reg_pp1_iter2)
    begin
                ap_condition_651 <= ((icmp_ln308_reg_2218_pp1_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1));
    end process;


    ap_condition_76_assign_proc : process(icmp_ln308_reg_2218, icmp_ln318_reg_2176, icmp_ln322_reg_2227)
    begin
                ap_condition_76 <= ((icmp_ln308_reg_2218 = ap_const_lv1_1) and (icmp_ln322_reg_2227 = ap_const_lv1_0) and (icmp_ln318_reg_2176 = ap_const_lv1_0));
    end process;


    ap_condition_pp0_exit_iter0_state4_assign_proc : process(icmp_ln266_fu_616_p2)
    begin
        if ((icmp_ln266_fu_616_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state4 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_exit_iter0_state8_assign_proc : process(icmp_ln308_fu_876_p2)
    begin
        if ((icmp_ln308_fu_876_p2 = ap_const_lv1_0)) then 
            ap_condition_pp1_exit_iter0_state8 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state8 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, icmp_ln304_fu_689_p2, ap_CS_fsm_state7)
    begin
        if (((icmp_ln304_fu_689_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter0)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter8, ap_enable_reg_pp1_iter3, ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter2, ap_enable_reg_pp1_iter4, ap_enable_reg_pp1_iter5, ap_enable_reg_pp1_iter6, ap_enable_reg_pp1_iter7)
    begin
        if (((ap_enable_reg_pp1_iter8 = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter7 = ap_const_logic_0) and (ap_enable_reg_pp1_iter6 = ap_const_logic_0) and (ap_enable_reg_pp1_iter5 = ap_const_logic_0) and (ap_enable_reg_pp1_iter4 = ap_const_logic_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_P0Buf_0_V_3_phi_fu_472_p6_assign_proc : process(icmp_ln308_reg_2218_pp1_iter2_reg, icmp_ln343_reg_2154, icmp_ln365_reg_2172, line_buffer_0_0_V_q0, line_buffer_1_0_V_q0, line_buffer_2_0_V_q0, ap_phi_reg_pp1_iter3_P0Buf_0_V_3_reg_469)
    begin
        if ((icmp_ln308_reg_2218_pp1_iter2_reg = ap_const_lv1_1)) then
            if (((icmp_ln365_reg_2172 = ap_const_lv1_0) and (icmp_ln343_reg_2154 = ap_const_lv1_0))) then 
                ap_phi_mux_P0Buf_0_V_3_phi_fu_472_p6 <= line_buffer_0_0_V_q0;
            elsif (((icmp_ln365_reg_2172 = ap_const_lv1_1) and (icmp_ln343_reg_2154 = ap_const_lv1_0))) then 
                ap_phi_mux_P0Buf_0_V_3_phi_fu_472_p6 <= line_buffer_2_0_V_q0;
            elsif ((icmp_ln343_reg_2154 = ap_const_lv1_1)) then 
                ap_phi_mux_P0Buf_0_V_3_phi_fu_472_p6 <= line_buffer_1_0_V_q0;
            else 
                ap_phi_mux_P0Buf_0_V_3_phi_fu_472_p6 <= ap_phi_reg_pp1_iter3_P0Buf_0_V_3_reg_469;
            end if;
        else 
            ap_phi_mux_P0Buf_0_V_3_phi_fu_472_p6 <= ap_phi_reg_pp1_iter3_P0Buf_0_V_3_reg_469;
        end if; 
    end process;


    ap_phi_mux_P0Buf_V_0_1_phi_fu_486_p6_assign_proc : process(icmp_ln308_reg_2218_pp1_iter2_reg, icmp_ln343_reg_2154, icmp_ln365_reg_2172, line_buffer_0_0_V_q0, line_buffer_1_0_V_q0, line_buffer_2_0_V_q0, ap_phi_reg_pp1_iter3_P0Buf_V_0_1_reg_483)
    begin
        if ((icmp_ln308_reg_2218_pp1_iter2_reg = ap_const_lv1_1)) then
            if (((icmp_ln365_reg_2172 = ap_const_lv1_0) and (icmp_ln343_reg_2154 = ap_const_lv1_0))) then 
                ap_phi_mux_P0Buf_V_0_1_phi_fu_486_p6 <= line_buffer_2_0_V_q0;
            elsif (((icmp_ln365_reg_2172 = ap_const_lv1_1) and (icmp_ln343_reg_2154 = ap_const_lv1_0))) then 
                ap_phi_mux_P0Buf_V_0_1_phi_fu_486_p6 <= line_buffer_1_0_V_q0;
            elsif ((icmp_ln343_reg_2154 = ap_const_lv1_1)) then 
                ap_phi_mux_P0Buf_V_0_1_phi_fu_486_p6 <= line_buffer_0_0_V_q0;
            else 
                ap_phi_mux_P0Buf_V_0_1_phi_fu_486_p6 <= ap_phi_reg_pp1_iter3_P0Buf_V_0_1_reg_483;
            end if;
        else 
            ap_phi_mux_P0Buf_V_0_1_phi_fu_486_p6 <= ap_phi_reg_pp1_iter3_P0Buf_V_0_1_reg_483;
        end if; 
    end process;

    ap_phi_mux_flag_write_2_phi_fu_458_p6 <= ap_phi_reg_pp1_iter2_flag_write_2_reg_453;

    ap_phi_mux_j13_0_phi_fu_445_p4_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, icmp_ln308_reg_2218, j13_0_reg_441, j_1_reg_2222)
    begin
        if (((icmp_ln308_reg_2218 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            ap_phi_mux_j13_0_phi_fu_445_p4 <= j_1_reg_2222;
        else 
            ap_phi_mux_j13_0_phi_fu_445_p4 <= j13_0_reg_441;
        end if; 
    end process;


    ap_phi_mux_read_rows_count_0_phi_fu_376_p4_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln266_reg_2092, read_rows_count_0_reg_372, select_ln321_1_reg_2106)
    begin
        if (((icmp_ln266_reg_2092 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_phi_mux_read_rows_count_0_phi_fu_376_p4 <= select_ln321_1_reg_2106;
        else 
            ap_phi_mux_read_rows_count_0_phi_fu_376_p4 <= read_rows_count_0_reg_372;
        end if; 
    end process;

    ap_phi_reg_pp1_iter0_P0Buf_1_V_3_reg_508 <= "XXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_P0Buf_V_1_1_reg_497 <= "XXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter0_flag_write_2_reg_453 <= "X";
    ap_phi_reg_pp1_iter3_P0Buf_0_V_3_reg_469 <= "XXXXXXXXXXXXXXXXXXXXXXXX";
    ap_phi_reg_pp1_iter3_P0Buf_V_0_1_reg_483 <= "XXXXXXXXXXXXXXXXXXXXXXXX";

    ap_predicate_op130_read_state9_assign_proc : process(icmp_ln308_reg_2218, icmp_ln318_reg_2176, icmp_ln322_reg_2227)
    begin
                ap_predicate_op130_read_state9 <= ((icmp_ln308_reg_2218 = ap_const_lv1_1) and (icmp_ln322_reg_2227 = ap_const_lv1_0) and (icmp_ln318_reg_2176 = ap_const_lv1_0));
    end process;


    ap_predicate_op400_write_state16_assign_proc : process(icmp_ln409_reg_2184, icmp_ln879_15_reg_2236_pp1_iter7_reg, and_ln411_reg_2246_pp1_iter7_reg, and_ln411_1_reg_2242_pp1_iter7_reg)
    begin
                ap_predicate_op400_write_state16 <= (((ap_const_lv1_1 = and_ln411_1_reg_2242_pp1_iter7_reg) and (icmp_ln879_15_reg_2236_pp1_iter7_reg = ap_const_lv1_0) and (icmp_ln409_reg_2184 = ap_const_lv1_0)) or ((ap_const_lv1_1 = and_ln411_reg_2246_pp1_iter7_reg) and (icmp_ln879_15_reg_2236_pp1_iter7_reg = ap_const_lv1_1) and (icmp_ln409_reg_2184 = ap_const_lv1_0)));
    end process;


    ap_ready_assign_proc : process(icmp_ln304_fu_689_p2, ap_CS_fsm_state7)
    begin
        if (((icmp_ln304_fu_689_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;

    first_row_index_1_fu_1992_p3 <= 
        indexstores_reg_418 when (or_ln891_fu_1979_p2(0) = '1') else 
        select_ln891_fu_1984_p3;
    first_row_index_fu_1935_p2 <= std_logic_vector(unsigned(indexstores_reg_418) + unsigned(ap_const_lv32_1));

    grp_fu_2000_ce_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            grp_fu_2000_ce <= ap_const_logic_1;
        else 
            grp_fu_2000_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2000_p0 <= grp_fu_2000_p00(12 - 1 downto 0);
    grp_fu_2000_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(WeightY_V_fu_1036_p4),22));
    grp_fu_2000_p1 <= grp_fu_2000_p10(12 - 1 downto 0);
    grp_fu_2000_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(WeightX_0_V_fu_1204_p4),22));

    grp_fu_2007_ce_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            grp_fu_2007_ce <= ap_const_logic_1;
        else 
            grp_fu_2007_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2007_p0 <= zext_ln1118_3_fu_1318_p1(12 - 1 downto 0);

    grp_fu_2014_ce_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            grp_fu_2014_ce <= ap_const_logic_1;
        else 
            grp_fu_2014_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2014_p0 <= zext_ln1118_3_fu_1318_p1(12 - 1 downto 0);

    grp_fu_2021_ce_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            grp_fu_2021_ce <= ap_const_logic_1;
        else 
            grp_fu_2021_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2021_p0 <= zext_ln1118_3_fu_1318_p1(12 - 1 downto 0);

    grp_fu_2028_ce_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            grp_fu_2028_ce <= ap_const_logic_1;
        else 
            grp_fu_2028_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2028_p0 <= zext_ln1118_4_fu_1453_p1(12 - 1 downto 0);

    grp_fu_2037_ce_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            grp_fu_2037_ce <= ap_const_logic_1;
        else 
            grp_fu_2037_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2037_p0 <= zext_ln1118_4_fu_1453_p1(12 - 1 downto 0);

    grp_fu_2046_ce_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            grp_fu_2046_ce <= ap_const_logic_1;
        else 
            grp_fu_2046_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2046_p0 <= zext_ln1118_4_fu_1453_p1(12 - 1 downto 0);

    grp_fu_2055_ce_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            grp_fu_2055_ce <= ap_const_logic_1;
        else 
            grp_fu_2055_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2055_p0 <= zext_ln1118_2_fu_1590_p1(12 - 1 downto 0);

    grp_fu_2064_ce_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            grp_fu_2064_ce <= ap_const_logic_1;
        else 
            grp_fu_2064_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2064_p0 <= zext_ln1118_2_fu_1590_p1(12 - 1 downto 0);

    grp_fu_2073_ce_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            grp_fu_2073_ce <= ap_const_logic_1;
        else 
            grp_fu_2073_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_2073_p0 <= zext_ln1118_2_fu_1590_p1(12 - 1 downto 0);
    grp_fu_564_p2 <= "1" when (unsigned(j13_0_reg_441) < unsigned(ap_const_lv11_140)) else "0";

    grp_scaleCompute_fu_544_currindex_assign_proc : process(ap_block_pp1_stage0, icmp_ln304_fu_689_p2, ap_CS_fsm_state7, icmp_ln308_reg_2218_pp1_iter1_reg, ap_enable_reg_pp1_iter2, output_rows_count_0_reg_406, zext_ln308_fu_1019_p1)
    begin
        if (((icmp_ln308_reg_2218_pp1_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            grp_scaleCompute_fu_544_currindex <= zext_ln308_fu_1019_p1;
        elsif (((icmp_ln304_fu_689_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            grp_scaleCompute_fu_544_currindex <= output_rows_count_0_reg_406;
        else 
            grp_scaleCompute_fu_544_currindex <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_scaleCompute_fu_544_inscale_V_assign_proc : process(ap_block_pp1_stage0, scalex_V_reg_2082, scaley_V_reg_2087, icmp_ln304_fu_689_p2, ap_CS_fsm_state7, icmp_ln308_reg_2218_pp1_iter1_reg, ap_enable_reg_pp1_iter2)
    begin
        if (((icmp_ln308_reg_2218_pp1_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            grp_scaleCompute_fu_544_inscale_V <= scalex_V_reg_2082;
        elsif (((icmp_ln304_fu_689_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
            grp_scaleCompute_fu_544_inscale_V <= scaley_V_reg_2087;
        else 
            grp_scaleCompute_fu_544_inscale_V <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_xfUDivResize_fu_519_ap_start <= grp_xfUDivResize_fu_519_ap_start_reg;

    grp_xfUDivResize_fu_519_in_d_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_xfUDivResize_fu_519_in_d <= ap_const_lv10_B4;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_xfUDivResize_fu_519_in_d <= ap_const_lv10_140;
        else 
            grp_xfUDivResize_fu_519_in_d <= "XXXXXXXXXX";
        end if; 
    end process;


    grp_xfUDivResize_fu_519_in_n_assign_proc : process(ap_CS_fsm_state2, ap_CS_fsm_state3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
            grp_xfUDivResize_fu_519_in_n <= ap_const_lv40_2D00000000;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            grp_xfUDivResize_fu_519_in_n <= ap_const_lv40_5000000000;
        else 
            grp_xfUDivResize_fu_519_in_n <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    i_fu_628_p2 <= std_logic_vector(unsigned(ap_const_lv2_1) + unsigned(ap_phi_mux_read_rows_count_0_phi_fu_376_p4));
    icmp_ln1494_1_fu_1054_p2 <= "1" when (unsigned(grp_scaleCompute_fu_544_ap_return) > unsigned(ap_const_lv42_13FC00000)) else "0";
    icmp_ln1494_fu_762_p0 <= grp_scaleCompute_fu_544_ap_return;
    icmp_ln1494_fu_762_p2 <= "1" when (unsigned(icmp_ln1494_fu_762_p0) > unsigned(ap_const_lv42_B3C00000)) else "0";
    icmp_ln266_fu_616_p2 <= "1" when (indvar_flatten_reg_361 = ap_const_lv13_A00) else "0";
    icmp_ln269_fu_610_p2 <= "1" when (unsigned(j_0_reg_383) < unsigned(ap_const_lv11_500)) else "0";
    icmp_ln304_fu_689_p2 <= "1" when (unsigned(i12_0_reg_430) < unsigned(ap_const_lv10_2D0)) else "0";
    icmp_ln308_fu_876_p2 <= "1" when (unsigned(ap_phi_mux_j13_0_phi_fu_445_p4) < unsigned(ap_const_lv11_500)) else "0";
    icmp_ln318_fu_725_p2 <= "1" when (read_rows_count_1_reg_394 = ap_const_lv32_2D0) else "0";
    icmp_ln322_fu_931_p2 <= "1" when (signed(zext_ln891_fu_927_p1) < signed(add_ln409_reg_2158)) else "0";
    icmp_ln343_fu_701_p2 <= "1" when (indexstores_reg_418 = ap_const_lv32_0) else "0";
    icmp_ln349_fu_1218_p2 <= "0" when (indexx_0_V_fu_1174_p3 = ap_const_lv17_4FF) else "1";
    icmp_ln365_fu_719_p2 <= "1" when (indexstores_reg_418 = ap_const_lv32_1) else "0";
    icmp_ln409_fu_731_p2 <= "1" when (signed(output_rows_count_0_reg_406) > signed(ap_const_lv32_B3)) else "0";
    icmp_ln428_fu_1887_p2 <= "0" when (read_rows_count_1_reg_394 = ap_const_lv32_2D0) else "1";
    icmp_ln443_fu_1941_p2 <= "1" when (first_row_index_fu_1935_p2 = ap_const_lv32_3) else "0";
    icmp_ln851_1_fu_1720_p2 <= "1" when (trunc_ln851_6_fu_1716_p1 = ap_const_lv10_0) else "0";
    icmp_ln851_2_fu_1790_p2 <= "1" when (trunc_ln851_7_fu_1786_p1 = ap_const_lv10_0) else "0";
    icmp_ln851_3_fu_891_p2 <= "1" when (trunc_ln851_fu_888_p1 = ap_const_lv22_0) else "0";
    icmp_ln851_4_fu_944_p2 <= "1" when (trunc_ln851_3_fu_941_p1 = ap_const_lv22_0) else "0";
    icmp_ln851_5_fu_1144_p2 <= "1" when (trunc_ln851_4_fu_1140_p1 = ap_const_lv22_0) else "0";
    icmp_ln851_fu_1650_p2 <= "1" when (trunc_ln851_5_fu_1646_p1 = ap_const_lv10_0) else "0";
    icmp_ln879_14_fu_1871_p2 <= "0" when (zext_ln879_fu_1845_p1 = add_ln409_1_reg_2166) else "1";
    icmp_ln879_15_fu_993_p2 <= "1" when (zext_ln879_1_fu_989_p1 = add_ln409_reg_2158) else "0";
    icmp_ln879_16_fu_998_p2 <= "1" when (zext_ln879_1_fu_989_p1 = add_ln409_1_reg_2166) else "0";
    icmp_ln879_fu_1849_p2 <= "1" when (zext_ln879_fu_1845_p1 = add_ln409_reg_2158) else "0";
    icmp_ln891_fu_1930_p2 <= "1" when (signed(zext_ln891_1_fu_1926_p1) < signed(add_ln409_reg_2158)) else "0";

    imgInput_data_V_blk_n_assign_proc : process(imgInput_data_V_empty_n, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, icmp_ln266_reg_2092, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, icmp_ln308_reg_2218, icmp_ln318_reg_2176, icmp_ln322_reg_2227)
    begin
        if ((((icmp_ln308_reg_2218 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (icmp_ln322_reg_2227 = ap_const_lv1_0) and (icmp_ln318_reg_2176 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((icmp_ln266_reg_2092 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            imgInput_data_V_blk_n <= imgInput_data_V_empty_n;
        else 
            imgInput_data_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    imgInput_data_V_read_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln266_reg_2092, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_predicate_op130_read_state9, ap_block_pp1_stage0_11001, ap_block_pp0_stage0_11001)
    begin
        if ((((ap_predicate_op130_read_state9 = ap_const_boolean_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((icmp_ln266_reg_2092 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            imgInput_data_V_read <= ap_const_logic_1;
        else 
            imgInput_data_V_read <= ap_const_logic_0;
        end if; 
    end process;


    imgOutput_data_V_blk_n_assign_proc : process(imgOutput_data_V_full_n, ap_block_pp1_stage0, ap_enable_reg_pp1_iter8, icmp_ln409_reg_2184, icmp_ln879_15_reg_2236_pp1_iter7_reg, and_ln411_reg_2246_pp1_iter7_reg, and_ln411_1_reg_2242_pp1_iter7_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter8 = ap_const_logic_1) and (((ap_const_lv1_1 = and_ln411_1_reg_2242_pp1_iter7_reg) and (icmp_ln879_15_reg_2236_pp1_iter7_reg = ap_const_lv1_0) and (icmp_ln409_reg_2184 = ap_const_lv1_0)) or ((ap_const_lv1_1 = and_ln411_reg_2246_pp1_iter7_reg) and (icmp_ln879_15_reg_2236_pp1_iter7_reg = ap_const_lv1_1) and (icmp_ln409_reg_2184 = ap_const_lv1_0))))) then 
            imgOutput_data_V_blk_n <= imgOutput_data_V_full_n;
        else 
            imgOutput_data_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    imgOutput_data_V_din <= ((select_ln850_4_fu_1820_p3 & select_ln850_3_fu_1750_p3) & select_ln850_fu_1680_p3);

    imgOutput_data_V_write_assign_proc : process(ap_enable_reg_pp1_iter8, ap_predicate_op400_write_state16, ap_block_pp1_stage0_11001)
    begin
        if (((ap_predicate_op400_write_state16 = ap_const_boolean_1) and (ap_enable_reg_pp1_iter8 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            imgOutput_data_V_write <= ap_const_logic_1;
        else 
            imgOutput_data_V_write <= ap_const_logic_0;
        end if; 
    end process;

    indexx_0_V_fu_1174_p3 <= 
        select_ln851_2_fu_1166_p3 when (tmp_29_fu_1132_p3(0) = '1') else 
        tmp_5_fu_1150_p4;
    j_1_fu_882_p2 <= std_logic_vector(unsigned(ap_phi_mux_j13_0_phi_fu_445_p4) + unsigned(ap_const_lv11_1));
    j_fu_654_p2 <= std_logic_vector(unsigned(select_ln321_fu_634_p3) + unsigned(ap_const_lv11_1));
    lhs_V_fu_737_p0 <= grp_scaleCompute_fu_544_ap_return;
        lhs_V_fu_737_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(lhs_V_fu_737_p0),43));

    line_buffer_0_0_V_1_gep_fu_326_p3 <= zext_ln351_fu_1234_p1(11 - 1 downto 0);

    line_buffer_0_0_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp1_stage0, icmp_ln879_15_reg_2236, icmp_ln343_reg_2154, icmp_ln365_reg_2172, icmp_ln308_reg_2218_pp1_iter1_reg, line_buffer_0_0_V_1_gep_fu_326_p3, ap_enable_reg_pp1_iter2, ap_phi_mux_flag_write_2_phi_fu_458_p6, zext_ln275_fu_660_p1, zext_ln351_fu_1234_p1, zext_ln383_fu_1261_p1)
    begin
        if (((icmp_ln308_reg_2218_pp1_iter1_reg = ap_const_lv1_1) and (icmp_ln343_reg_2154 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (icmp_ln879_15_reg_2236 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            line_buffer_0_0_V_address0 <= line_buffer_0_0_V_1_gep_fu_326_p3;
        elsif (((ap_phi_mux_flag_write_2_phi_fu_458_p6 = ap_const_lv1_1) and (icmp_ln365_reg_2172 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (icmp_ln343_reg_2154 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            line_buffer_0_0_V_address0 <= zext_ln383_fu_1261_p1(11 - 1 downto 0);
        elsif (((icmp_ln308_reg_2218_pp1_iter1_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (icmp_ln365_reg_2172 = ap_const_lv1_0) and (icmp_ln343_reg_2154 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            line_buffer_0_0_V_address0 <= zext_ln351_fu_1234_p1(11 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            line_buffer_0_0_V_address0 <= zext_ln275_fu_660_p1(11 - 1 downto 0);
        else 
            line_buffer_0_0_V_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    line_buffer_0_0_V_address1_assign_proc : process(icmp_ln879_15_reg_2236, icmp_ln343_reg_2154, icmp_ln365_reg_2172, zext_ln396_fu_1244_p1, zext_ln352_fu_1266_p1, ap_condition_651)
    begin
        if ((ap_const_boolean_1 = ap_condition_651)) then
            if (((icmp_ln343_reg_2154 = ap_const_lv1_1) and (icmp_ln879_15_reg_2236 = ap_const_lv1_0))) then 
                line_buffer_0_0_V_address1 <= zext_ln352_fu_1266_p1(11 - 1 downto 0);
            elsif (((icmp_ln365_reg_2172 = ap_const_lv1_0) and (icmp_ln343_reg_2154 = ap_const_lv1_0))) then 
                line_buffer_0_0_V_address1 <= zext_ln396_fu_1244_p1(11 - 1 downto 0);
            else 
                line_buffer_0_0_V_address1 <= "XXXXXXXXXXX";
            end if;
        else 
            line_buffer_0_0_V_address1 <= "XXXXXXXXXXX";
        end if; 
    end process;


    line_buffer_0_0_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln879_15_reg_2236, ap_block_pp1_stage0_11001, icmp_ln343_reg_2154, icmp_ln365_reg_2172, ap_block_pp0_stage0_11001, icmp_ln308_reg_2218_pp1_iter1_reg, ap_enable_reg_pp1_iter2, ap_phi_mux_flag_write_2_phi_fu_458_p6)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((icmp_ln308_reg_2218_pp1_iter1_reg = ap_const_lv1_1) and (icmp_ln343_reg_2154 = ap_const_lv1_1) and (icmp_ln879_15_reg_2236 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((ap_phi_mux_flag_write_2_phi_fu_458_p6 = ap_const_lv1_1) and (icmp_ln365_reg_2172 = ap_const_lv1_1) and (icmp_ln343_reg_2154 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((icmp_ln308_reg_2218_pp1_iter1_reg = ap_const_lv1_1) and (icmp_ln365_reg_2172 = ap_const_lv1_0) and (icmp_ln343_reg_2154 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            line_buffer_0_0_V_ce0 <= ap_const_logic_1;
        else 
            line_buffer_0_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_0_0_V_ce1_assign_proc : process(icmp_ln879_15_reg_2236, ap_block_pp1_stage0_11001, icmp_ln343_reg_2154, icmp_ln365_reg_2172, icmp_ln308_reg_2218_pp1_iter1_reg, ap_enable_reg_pp1_iter2)
    begin
        if ((((icmp_ln308_reg_2218_pp1_iter1_reg = ap_const_lv1_1) and (icmp_ln343_reg_2154 = ap_const_lv1_1) and (icmp_ln879_15_reg_2236 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((icmp_ln308_reg_2218_pp1_iter1_reg = ap_const_lv1_1) and (icmp_ln365_reg_2172 = ap_const_lv1_0) and (icmp_ln343_reg_2154 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            line_buffer_0_0_V_ce1 <= ap_const_logic_1;
        else 
            line_buffer_0_0_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_0_0_V_d0_assign_proc : process(imgInput_data_V_dout, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp1_stage0, icmp_ln343_reg_2154, icmp_ln365_reg_2172, ap_enable_reg_pp1_iter2, ap_phi_mux_flag_write_2_phi_fu_458_p6, read_pixel_V_1_fu_188)
    begin
        if (((ap_phi_mux_flag_write_2_phi_fu_458_p6 = ap_const_lv1_1) and (icmp_ln365_reg_2172 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (icmp_ln343_reg_2154 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            line_buffer_0_0_V_d0 <= read_pixel_V_1_fu_188;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            line_buffer_0_0_V_d0 <= imgInput_data_V_dout;
        else 
            line_buffer_0_0_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    line_buffer_0_0_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp1_stage0_11001, icmp_ln343_reg_2154, icmp_ln365_reg_2172, ap_block_pp0_stage0_11001, trunc_ln321_reg_2111, ap_enable_reg_pp1_iter2, ap_phi_mux_flag_write_2_phi_fu_458_p6)
    begin
        if ((((trunc_ln321_reg_2111 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_phi_mux_flag_write_2_phi_fu_458_p6 = ap_const_lv1_1) and (icmp_ln365_reg_2172 = ap_const_lv1_1) and (icmp_ln343_reg_2154 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            line_buffer_0_0_V_we0 <= ap_const_logic_1;
        else 
            line_buffer_0_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    line_buffer_1_0_V_1_gep_fu_340_p3 <= zext_ln351_fu_1234_p1(11 - 1 downto 0);

    line_buffer_1_0_V_address0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp1_stage0, icmp_ln879_15_reg_2236, icmp_ln343_reg_2154, icmp_ln365_reg_2172, icmp_ln308_reg_2218_pp1_iter1_reg, line_buffer_1_0_V_1_gep_fu_340_p3, ap_enable_reg_pp1_iter2, ap_phi_mux_flag_write_2_phi_fu_458_p6, zext_ln275_fu_660_p1, zext_ln351_fu_1234_p1, zext_ln405_fu_1250_p1)
    begin
        if (((icmp_ln308_reg_2218_pp1_iter1_reg = ap_const_lv1_1) and (icmp_ln343_reg_2154 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            line_buffer_1_0_V_address0 <= line_buffer_1_0_V_1_gep_fu_340_p3;
        elsif (((icmp_ln308_reg_2218_pp1_iter1_reg = ap_const_lv1_1) and (icmp_ln365_reg_2172 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (icmp_ln879_15_reg_2236 = ap_const_lv1_0) and (icmp_ln343_reg_2154 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            line_buffer_1_0_V_address0 <= zext_ln351_fu_1234_p1(11 - 1 downto 0);
        elsif (((ap_phi_mux_flag_write_2_phi_fu_458_p6 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (icmp_ln365_reg_2172 = ap_const_lv1_0) and (icmp_ln343_reg_2154 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            line_buffer_1_0_V_address0 <= zext_ln405_fu_1250_p1(11 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            line_buffer_1_0_V_address0 <= zext_ln275_fu_660_p1(11 - 1 downto 0);
        else 
            line_buffer_1_0_V_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    line_buffer_1_0_V_address1_assign_proc : process(icmp_ln343_reg_2154, zext_ln374_fu_1255_p1, zext_ln352_fu_1266_p1, ap_condition_651, ap_condition_1915)
    begin
        if ((ap_const_boolean_1 = ap_condition_651)) then
            if ((icmp_ln343_reg_2154 = ap_const_lv1_1)) then 
                line_buffer_1_0_V_address1 <= zext_ln352_fu_1266_p1(11 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_1915)) then 
                line_buffer_1_0_V_address1 <= zext_ln374_fu_1255_p1(11 - 1 downto 0);
            else 
                line_buffer_1_0_V_address1 <= "XXXXXXXXXXX";
            end if;
        else 
            line_buffer_1_0_V_address1 <= "XXXXXXXXXXX";
        end if; 
    end process;


    line_buffer_1_0_V_ce0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, icmp_ln879_15_reg_2236, ap_block_pp1_stage0_11001, icmp_ln343_reg_2154, icmp_ln365_reg_2172, ap_block_pp0_stage0_11001, icmp_ln308_reg_2218_pp1_iter1_reg, ap_enable_reg_pp1_iter2, ap_phi_mux_flag_write_2_phi_fu_458_p6)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((icmp_ln308_reg_2218_pp1_iter1_reg = ap_const_lv1_1) and (icmp_ln343_reg_2154 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((icmp_ln308_reg_2218_pp1_iter1_reg = ap_const_lv1_1) and (icmp_ln365_reg_2172 = ap_const_lv1_1) and (icmp_ln879_15_reg_2236 = ap_const_lv1_0) and (icmp_ln343_reg_2154 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((ap_phi_mux_flag_write_2_phi_fu_458_p6 = ap_const_lv1_1) and (icmp_ln365_reg_2172 = ap_const_lv1_0) and (icmp_ln343_reg_2154 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            line_buffer_1_0_V_ce0 <= ap_const_logic_1;
        else 
            line_buffer_1_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_1_0_V_ce1_assign_proc : process(icmp_ln879_15_reg_2236, ap_block_pp1_stage0_11001, icmp_ln343_reg_2154, icmp_ln365_reg_2172, icmp_ln308_reg_2218_pp1_iter1_reg, ap_enable_reg_pp1_iter2)
    begin
        if ((((icmp_ln308_reg_2218_pp1_iter1_reg = ap_const_lv1_1) and (icmp_ln343_reg_2154 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((icmp_ln308_reg_2218_pp1_iter1_reg = ap_const_lv1_1) and (icmp_ln365_reg_2172 = ap_const_lv1_1) and (icmp_ln879_15_reg_2236 = ap_const_lv1_0) and (icmp_ln343_reg_2154 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            line_buffer_1_0_V_ce1 <= ap_const_logic_1;
        else 
            line_buffer_1_0_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_1_0_V_d0_assign_proc : process(imgInput_data_V_dout, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, ap_block_pp1_stage0, icmp_ln343_reg_2154, icmp_ln365_reg_2172, ap_enable_reg_pp1_iter2, ap_phi_mux_flag_write_2_phi_fu_458_p6, read_pixel_V_1_fu_188)
    begin
        if (((ap_phi_mux_flag_write_2_phi_fu_458_p6 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (icmp_ln365_reg_2172 = ap_const_lv1_0) and (icmp_ln343_reg_2154 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            line_buffer_1_0_V_d0 <= read_pixel_V_1_fu_188;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            line_buffer_1_0_V_d0 <= imgInput_data_V_dout;
        else 
            line_buffer_1_0_V_d0 <= "XXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    line_buffer_1_0_V_we0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp1_stage0_11001, icmp_ln343_reg_2154, icmp_ln365_reg_2172, ap_block_pp0_stage0_11001, trunc_ln321_reg_2111, ap_enable_reg_pp1_iter2, ap_phi_mux_flag_write_2_phi_fu_458_p6)
    begin
        if ((((trunc_ln321_reg_2111 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_phi_mux_flag_write_2_phi_fu_458_p6 = ap_const_lv1_1) and (icmp_ln365_reg_2172 = ap_const_lv1_0) and (icmp_ln343_reg_2154 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            line_buffer_1_0_V_we0 <= ap_const_logic_1;
        else 
            line_buffer_1_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    line_buffer_2_0_V_1_gep_fu_305_p3 <= zext_ln351_fu_1234_p1(11 - 1 downto 0);

    line_buffer_2_0_V_address0_assign_proc : process(ap_block_pp1_stage0, icmp_ln343_reg_2154, line_buffer_2_0_V_1_gep_fu_305_p3, ap_enable_reg_pp1_iter2, ap_phi_mux_flag_write_2_phi_fu_458_p6, zext_ln351_fu_1234_p1, zext_ln361_fu_1272_p1, ap_condition_333, ap_condition_344)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then
            if (((ap_phi_mux_flag_write_2_phi_fu_458_p6 = ap_const_lv1_1) and (icmp_ln343_reg_2154 = ap_const_lv1_1))) then 
                line_buffer_2_0_V_address0 <= zext_ln361_fu_1272_p1(11 - 1 downto 0);
            elsif ((ap_const_boolean_1 = ap_condition_344)) then 
                line_buffer_2_0_V_address0 <= line_buffer_2_0_V_1_gep_fu_305_p3;
            elsif ((ap_const_boolean_1 = ap_condition_333)) then 
                line_buffer_2_0_V_address0 <= zext_ln351_fu_1234_p1(11 - 1 downto 0);
            else 
                line_buffer_2_0_V_address0 <= "XXXXXXXXXXX";
            end if;
        else 
            line_buffer_2_0_V_address0 <= "XXXXXXXXXXX";
        end if; 
    end process;


    line_buffer_2_0_V_address1_assign_proc : process(icmp_ln879_15_reg_2236, icmp_ln365_reg_2172, zext_ln396_fu_1244_p1, zext_ln374_fu_1255_p1, ap_condition_1924)
    begin
        if ((ap_const_boolean_1 = ap_condition_1924)) then
            if ((icmp_ln365_reg_2172 = ap_const_lv1_1)) then 
                line_buffer_2_0_V_address1 <= zext_ln374_fu_1255_p1(11 - 1 downto 0);
            elsif (((icmp_ln879_15_reg_2236 = ap_const_lv1_0) and (icmp_ln365_reg_2172 = ap_const_lv1_0))) then 
                line_buffer_2_0_V_address1 <= zext_ln396_fu_1244_p1(11 - 1 downto 0);
            else 
                line_buffer_2_0_V_address1 <= "XXXXXXXXXXX";
            end if;
        else 
            line_buffer_2_0_V_address1 <= "XXXXXXXXXXX";
        end if; 
    end process;


    line_buffer_2_0_V_ce0_assign_proc : process(icmp_ln879_15_reg_2236, ap_block_pp1_stage0_11001, icmp_ln343_reg_2154, icmp_ln365_reg_2172, icmp_ln308_reg_2218_pp1_iter1_reg, ap_enable_reg_pp1_iter2, ap_phi_mux_flag_write_2_phi_fu_458_p6)
    begin
        if ((((ap_phi_mux_flag_write_2_phi_fu_458_p6 = ap_const_lv1_1) and (icmp_ln343_reg_2154 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((icmp_ln308_reg_2218_pp1_iter1_reg = ap_const_lv1_1) and (icmp_ln365_reg_2172 = ap_const_lv1_1) and (icmp_ln343_reg_2154 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((icmp_ln308_reg_2218_pp1_iter1_reg = ap_const_lv1_1) and (icmp_ln879_15_reg_2236 = ap_const_lv1_0) and (icmp_ln365_reg_2172 = ap_const_lv1_0) and (icmp_ln343_reg_2154 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            line_buffer_2_0_V_ce0 <= ap_const_logic_1;
        else 
            line_buffer_2_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_2_0_V_ce1_assign_proc : process(icmp_ln879_15_reg_2236, ap_block_pp1_stage0_11001, icmp_ln343_reg_2154, icmp_ln365_reg_2172, icmp_ln308_reg_2218_pp1_iter1_reg, ap_enable_reg_pp1_iter2)
    begin
        if ((((icmp_ln308_reg_2218_pp1_iter1_reg = ap_const_lv1_1) and (icmp_ln365_reg_2172 = ap_const_lv1_1) and (icmp_ln343_reg_2154 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)) or ((icmp_ln308_reg_2218_pp1_iter1_reg = ap_const_lv1_1) and (icmp_ln879_15_reg_2236 = ap_const_lv1_0) and (icmp_ln365_reg_2172 = ap_const_lv1_0) and (icmp_ln343_reg_2154 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001)))) then 
            line_buffer_2_0_V_ce1 <= ap_const_logic_1;
        else 
            line_buffer_2_0_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    line_buffer_2_0_V_we0_assign_proc : process(ap_block_pp1_stage0_11001, icmp_ln343_reg_2154, ap_enable_reg_pp1_iter2, ap_phi_mux_flag_write_2_phi_fu_458_p6)
    begin
        if (((ap_phi_mux_flag_write_2_phi_fu_458_p6 = ap_const_lv1_1) and (icmp_ln343_reg_2154 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001))) then 
            line_buffer_2_0_V_we0 <= ap_const_logic_1;
        else 
            line_buffer_2_0_V_we0 <= ap_const_logic_0;
        end if; 
    end process;

    nextYScale_V_fu_920_p3 <= 
        select_ln851_fu_912_p3 when (p_Result_s_reg_2197(0) = '1') else 
        tmp_3_fu_897_p4;
    or_ln1495_1_fu_1118_p2 <= (tmp_24_fu_1046_p3 or icmp_ln1494_1_fu_1054_p2);
    or_ln1495_fu_850_p2 <= (tmp_17_fu_754_p3 or and_ln1494_fu_774_p2);
    or_ln428_fu_1905_p2 <= (and_ln879_fu_1876_p2 or and_ln428_1_fu_1899_p2);
    or_ln879_fu_1860_p2 <= (icmp_ln879_fu_1849_p2 or icmp_ln409_reg_2184);
    or_ln891_fu_1979_p2 <= (icmp_ln318_reg_2176 or and_ln891_fu_1965_p2);
    output_rows_count_1_fu_1918_p3 <= 
        output_rows_count_0_reg_406 when (or_ln428_fu_1905_p2(0) = '1') else 
        select_ln428_fu_1911_p3;
    output_rows_count_fu_1854_p2 <= std_logic_vector(unsigned(output_rows_count_0_reg_406) + unsigned(ap_const_lv32_1));
    p_Result_i_i_i_i23_2_fu_1321_p4 <= select_ln413_1_fu_1285_p3(15 downto 8);
    p_Result_i_i_i_i23_3_fu_1456_p4 <= select_ln413_fu_1397_p3(15 downto 8);
    p_Result_i_i_i_i23_4_fu_1359_p4 <= select_ln413_1_fu_1285_p3(23 downto 16);
    p_Result_i_i_i_i23_5_fu_1517_p4 <= select_ln413_fu_1397_p3(23 downto 16);
    p_Result_i_i_i_i_0_2_fu_1331_p4 <= ap_phi_mux_P0Buf_0_V_3_phi_fu_472_p6(15 downto 8);
    p_Result_i_i_i_i_0_3_fu_1466_p4 <= ap_phi_reg_pp1_iter4_P0Buf_1_V_3_reg_508(15 downto 8);
    p_Result_i_i_i_i_0_4_fu_1369_p4 <= ap_phi_mux_P0Buf_0_V_3_phi_fu_472_p6(23 downto 16);
    p_Result_i_i_i_i_0_5_fu_1527_p4 <= ap_phi_reg_pp1_iter4_P0Buf_1_V_3_reg_508(23 downto 16);
    p_Val2_12_fu_856_p2 <= grp_scaleCompute_fu_544_ap_return;
    p_Val2_12_fu_856_p3 <= 
        add_ln1495_fu_844_p2 when (or_ln1495_fu_850_p2(0) = '1') else 
        p_Val2_12_fu_856_p2;
    read_rows_count_2_fu_1953_p3 <= 
        ap_const_lv32_2D0 when (icmp_ln318_reg_2176(0) = '1') else 
        read_rows_count_fu_1947_p2;
    read_rows_count_3_fu_1971_p3 <= 
        read_rows_count_1_reg_394 when (and_ln891_fu_1965_p2(0) = '1') else 
        read_rows_count_2_fu_1953_p3;
    read_rows_count_fu_1947_p2 <= std_logic_vector(unsigned(read_rows_count_1_reg_394) + unsigned(ap_const_lv32_1));
    ret_V_9_fu_1031_p2 <= std_logic_vector(unsigned(trunc_ln700_reg_2213) - unsigned(shl_ln_fu_1024_p3));
    ret_V_fu_741_p2 <= std_logic_vector(signed(lhs_V_fu_737_p1) + signed(rhs_V_reg_2140));
    rhs_V_fu_675_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln708_2_fu_665_p4),43));
    scalex_V_fu_598_p2 <= std_logic_vector(shift_left(unsigned(reg_576),to_integer(unsigned('0' & ap_const_lv32_1(31-1 downto 0)))));
    scaley_V_fu_604_p2 <= std_logic_vector(shift_left(unsigned(grp_xfUDivResize_fu_519_ap_return),to_integer(unsigned('0' & ap_const_lv32_1(31-1 downto 0)))));
    select_ln1495_1_fu_804_p3 <= 
        ap_const_lv2_3 when (tmp_20_fu_796_p3(0) = '1') else 
        ap_const_lv2_0;
    select_ln1495_3_fu_1076_p3 <= 
        ap_const_lv2_3 when (tmp_26_fu_1068_p3(0) = '1') else 
        ap_const_lv2_0;
    select_ln1495_fu_1124_p3 <= 
        add_ln1495_1_fu_1112_p2 when (or_ln1495_1_fu_1118_p2(0) = '1') else 
        grp_scaleCompute_fu_544_ap_return;
    select_ln321_1_fu_642_p3 <= 
        ap_phi_mux_read_rows_count_0_phi_fu_376_p4 when (icmp_ln269_fu_610_p2(0) = '1') else 
        i_fu_628_p2;
    select_ln321_fu_634_p3 <= 
        j_0_reg_383 when (icmp_ln269_fu_610_p2(0) = '1') else 
        ap_const_lv11_0;
    select_ln413_1_fu_1285_p3 <= 
        ap_phi_mux_P0Buf_0_V_3_phi_fu_472_p6 when (icmp_ln879_15_reg_2236_pp1_iter2_reg(0) = '1') else 
        ap_phi_mux_P0Buf_V_0_1_phi_fu_486_p6;
    select_ln413_fu_1397_p3 <= 
        ap_phi_reg_pp1_iter4_P0Buf_1_V_3_reg_508 when (icmp_ln879_15_reg_2236_pp1_iter3_reg(0) = '1') else 
        ap_phi_reg_pp1_iter4_P0Buf_V_1_1_reg_497;
    select_ln428_fu_1911_p3 <= 
        output_rows_count_0_reg_406 when (icmp_ln409_reg_2184(0) = '1') else 
        output_rows_count_fu_1854_p2;
    select_ln850_3_fu_1750_p3 <= 
        select_ln851_4_fu_1742_p3 when (tmp_31_fu_1708_p3(0) = '1') else 
        trunc_ln851_1_fu_1726_p4;
    select_ln850_4_fu_1820_p3 <= 
        select_ln851_5_fu_1812_p3 when (tmp_32_fu_1778_p3(0) = '1') else 
        trunc_ln851_2_fu_1796_p4;
    select_ln850_fu_1680_p3 <= 
        select_ln851_3_fu_1672_p3 when (tmp_30_fu_1638_p3(0) = '1') else 
        trunc_ln1_fu_1656_p4;
    select_ln851_1_fu_965_p3 <= 
        tmp_4_fu_950_p4 when (icmp_ln851_4_fu_944_p2(0) = '1') else 
        add_ln851_1_fu_959_p2;
    select_ln851_2_fu_1166_p3 <= 
        tmp_5_fu_1150_p4 when (icmp_ln851_5_fu_1144_p2(0) = '1') else 
        add_ln851_2_fu_1160_p2;
    select_ln851_3_fu_1672_p3 <= 
        trunc_ln1_fu_1656_p4 when (icmp_ln851_fu_1650_p2(0) = '1') else 
        add_ln851_3_fu_1666_p2;
    select_ln851_4_fu_1742_p3 <= 
        trunc_ln851_1_fu_1726_p4 when (icmp_ln851_1_fu_1720_p2(0) = '1') else 
        add_ln851_4_fu_1736_p2;
    select_ln851_5_fu_1812_p3 <= 
        trunc_ln851_2_fu_1796_p4 when (icmp_ln851_2_fu_1790_p2(0) = '1') else 
        add_ln851_5_fu_1806_p2;
    select_ln851_fu_912_p3 <= 
        tmp_3_fu_897_p4 when (icmp_ln851_3_fu_891_p2(0) = '1') else 
        add_ln851_fu_906_p2;
    select_ln891_fu_1984_p3 <= 
        ap_const_lv32_0 when (icmp_ln443_fu_1941_p2(0) = '1') else 
        first_row_index_fu_1935_p2;
        sext_ln1495_1_fu_1108_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_28_fu_1092_p7),42));

        sext_ln1495_fu_840_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_22_fu_820_p9),42));

        sext_ln703_1_fu_1625_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_2055_p3),24));

        sext_ln703_3_fu_1695_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_2064_p3),24));

        sext_ln703_5_fu_1765_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(grp_fu_2073_p3),24));

    shl_ln4_fu_1186_p3 <= (trunc_ln1193_fu_1182_p1 & ap_const_lv22_0);
    shl_ln5_fu_1618_p3 <= (trunc_ln647_reg_2330_pp1_iter7_reg & ap_const_lv10_0);
    shl_ln728_2_fu_1688_p3 <= (p_Result_i_i_i_i23_2_reg_2358_pp1_iter7_reg & ap_const_lv10_0);
    shl_ln728_3_fu_1758_p3 <= (p_Result_i_i_i_i23_4_reg_2379_pp1_iter7_reg & ap_const_lv10_0);
    shl_ln_fu_1024_p3 <= (trunc_ln703_reg_2231 & ap_const_lv22_0);
    sub_ln1193_fu_1198_p2 <= std_logic_vector(unsigned(trunc_ln703_1_fu_1194_p1) - unsigned(shl_ln4_fu_1186_p3));
    sub_ln1354_1_fu_1308_p2 <= std_logic_vector(unsigned(zext_ln215_17_fu_1304_p1) - unsigned(zext_ln215_fu_1300_p1));
    sub_ln1354_2_fu_1444_p2 <= std_logic_vector(unsigned(zext_ln215_18_fu_1421_p1) - unsigned(zext_ln215_reg_2335));
    sub_ln1354_3_fu_1502_p2 <= std_logic_vector(unsigned(zext_ln215_25_fu_1494_p1) - unsigned(zext_ln215_26_fu_1498_p1));
    sub_ln1354_4_fu_1349_p2 <= std_logic_vector(unsigned(zext_ln215_23_fu_1345_p1) - unsigned(zext_ln215_21_fu_1341_p1));
    sub_ln1354_5_fu_1508_p2 <= std_logic_vector(unsigned(zext_ln215_24_fu_1485_p1) - unsigned(zext_ln215_21_reg_2363));
    sub_ln1354_6_fu_1563_p2 <= std_logic_vector(unsigned(zext_ln215_31_fu_1555_p1) - unsigned(zext_ln215_32_fu_1559_p1));
    sub_ln1354_7_fu_1387_p2 <= std_logic_vector(unsigned(zext_ln215_29_fu_1383_p1) - unsigned(zext_ln215_27_fu_1379_p1));
    sub_ln1354_8_fu_1569_p2 <= std_logic_vector(unsigned(zext_ln215_30_fu_1546_p1) - unsigned(zext_ln215_27_reg_2384));
    sub_ln1354_fu_1438_p2 <= std_logic_vector(unsigned(zext_ln215_19_fu_1430_p1) - unsigned(zext_ln215_20_fu_1434_p1));
    tmp_17_fu_754_p1 <= grp_scaleCompute_fu_544_ap_return;
    tmp_17_fu_754_p3 <= tmp_17_fu_754_p1(41 downto 41);
    tmp_18_fu_780_p1 <= grp_scaleCompute_fu_544_ap_return;
    tmp_18_fu_780_p3 <= tmp_18_fu_780_p1(41 downto 41);
    tmp_19_fu_788_p1 <= grp_scaleCompute_fu_544_ap_return;
    tmp_19_fu_788_p3 <= tmp_19_fu_788_p1(41 downto 41);
    tmp_20_fu_796_p1 <= grp_scaleCompute_fu_544_ap_return;
    tmp_20_fu_796_p3 <= tmp_20_fu_796_p1(41 downto 41);
    tmp_21_fu_812_p1 <= grp_scaleCompute_fu_544_ap_return;
    tmp_21_fu_812_p3 <= tmp_21_fu_812_p1(41 downto 41);
    tmp_22_fu_820_p9 <= (((((((tmp_18_fu_780_p3 & ap_const_lv1_0) & tmp_19_fu_788_p3) & ap_const_lv2_0) & select_ln1495_1_fu_804_p3) & ap_const_lv3_0) & tmp_21_fu_812_p3) & ap_const_lv22_0);
    tmp_24_fu_1046_p3 <= grp_scaleCompute_fu_544_ap_return(41 downto 41);
    tmp_25_fu_1060_p3 <= grp_scaleCompute_fu_544_ap_return(41 downto 41);
    tmp_26_fu_1068_p3 <= grp_scaleCompute_fu_544_ap_return(41 downto 41);
    tmp_27_fu_1084_p3 <= grp_scaleCompute_fu_544_ap_return(41 downto 41);
    tmp_28_fu_1092_p7 <= (((((tmp_25_fu_1060_p3 & ap_const_lv1_0) & select_ln1495_3_fu_1076_p3) & ap_const_lv7_0) & tmp_27_fu_1084_p3) & ap_const_lv22_0);
    tmp_29_fu_1132_p3 <= select_ln1495_fu_1124_p3(41 downto 41);
    tmp_30_fu_1638_p3 <= add_ln1192_2_fu_1632_p2(23 downto 23);
    tmp_31_fu_1708_p3 <= add_ln1192_5_fu_1702_p2(23 downto 23);
    tmp_32_fu_1778_p3 <= add_ln1192_8_fu_1772_p2(23 downto 23);
    tmp_3_fu_897_p4 <= ret_V_reg_2191(38 downto 22);
    tmp_4_fu_950_p4 <= p_Val2_12_reg_2202(38 downto 22);
    tmp_5_fu_1150_p4 <= select_ln1495_fu_1124_p3(38 downto 22);
    tmp_V_fu_973_p3 <= 
        select_ln851_1_fu_965_p3 when (p_Result_1_reg_2208(0) = '1') else 
        tmp_4_fu_950_p4;
    trunc_ln1193_fu_1182_p1 <= indexx_0_V_fu_1174_p3(2 - 1 downto 0);
    trunc_ln1_fu_1656_p4 <= add_ln1192_2_fu_1632_p2(17 downto 10);
    trunc_ln321_fu_650_p1 <= select_ln321_1_fu_642_p3(1 - 1 downto 0);
    trunc_ln647_2_fu_1296_p1 <= ap_phi_mux_P0Buf_0_V_3_phi_fu_472_p6(8 - 1 downto 0);
    trunc_ln647_3_fu_1404_p1 <= select_ln413_fu_1397_p3(8 - 1 downto 0);
    trunc_ln647_4_fu_1408_p1 <= ap_phi_reg_pp1_iter4_P0Buf_1_V_3_reg_508(8 - 1 downto 0);
    trunc_ln647_fu_1292_p1 <= select_ln413_1_fu_1285_p3(8 - 1 downto 0);
    trunc_ln700_fu_872_p1 <= p_Val2_12_fu_856_p3(24 - 1 downto 0);
    trunc_ln703_1_fu_1194_p1 <= select_ln1495_fu_1124_p3(24 - 1 downto 0);
    trunc_ln703_fu_980_p1 <= tmp_V_fu_973_p3(2 - 1 downto 0);
    trunc_ln708_2_fu_665_p4 <= reg_576(30 downto 6);
    trunc_ln851_1_fu_1726_p4 <= add_ln1192_5_fu_1702_p2(17 downto 10);
    trunc_ln851_2_fu_1796_p4 <= add_ln1192_8_fu_1772_p2(17 downto 10);
    trunc_ln851_3_fu_941_p1 <= p_Val2_12_reg_2202(22 - 1 downto 0);
    trunc_ln851_4_fu_1140_p1 <= select_ln1495_fu_1124_p3(22 - 1 downto 0);
    trunc_ln851_5_fu_1646_p1 <= add_ln1192_2_fu_1632_p2(10 - 1 downto 0);
    trunc_ln851_6_fu_1716_p1 <= add_ln1192_5_fu_1702_p2(10 - 1 downto 0);
    trunc_ln851_7_fu_1786_p1 <= add_ln1192_8_fu_1772_p2(10 - 1 downto 0);
    trunc_ln851_fu_888_p1 <= ret_V_reg_2191(22 - 1 downto 0);
    trunc_ln_fu_1578_p4 <= grp_fu_2000_p2(21 downto 10);
    xor_ln1495_fu_768_p2 <= (tmp_17_fu_754_p3 xor ap_const_lv1_1);
    xor_ln428_fu_1882_p2 <= (icmp_ln409_reg_2184 xor ap_const_lv1_1);
    xor_ln432_fu_1960_p2 <= (icmp_ln318_reg_2176 xor ap_const_lv1_1);
    xor_ln879_fu_1865_p2 <= (or_ln879_fu_1860_p2 xor ap_const_lv1_1);
    zext_ln1118_2_fu_1590_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln_fu_1578_p4),22));
    zext_ln1118_3_fu_1318_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(WeightY_V_reg_2250),21));
    zext_ln1118_4_fu_1453_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(WeightX_0_V_reg_2255_pp1_iter3_reg),21));
    zext_ln1192_1_fu_1698_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln728_2_fu_1688_p3),24));
    zext_ln1192_2_fu_1768_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln728_3_fu_1758_p3),24));
    zext_ln1192_fu_1628_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln5_fu_1618_p3),24));
    zext_ln215_16_fu_1412_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln647_4_fu_1408_p1),9));
    zext_ln215_17_fu_1304_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln647_2_fu_1296_p1),9));
    zext_ln215_18_fu_1421_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln647_3_fu_1404_p1),9));
    zext_ln215_19_fu_1430_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1353_fu_1416_p2),10));
    zext_ln215_20_fu_1434_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1353_6_fu_1425_p2),10));
    zext_ln215_21_fu_1341_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_i_i_i_i23_2_fu_1321_p4),9));
    zext_ln215_22_fu_1476_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_i_i_i_i_0_3_fu_1466_p4),9));
    zext_ln215_23_fu_1345_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_i_i_i_i_0_2_fu_1331_p4),9));
    zext_ln215_24_fu_1485_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_i_i_i_i23_3_fu_1456_p4),9));
    zext_ln215_25_fu_1494_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1353_7_fu_1480_p2),10));
    zext_ln215_26_fu_1498_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1353_8_fu_1489_p2),10));
    zext_ln215_27_fu_1379_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_i_i_i_i23_4_fu_1359_p4),9));
    zext_ln215_28_fu_1537_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_i_i_i_i_0_5_fu_1527_p4),9));
    zext_ln215_29_fu_1383_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_i_i_i_i_0_4_fu_1369_p4),9));
    zext_ln215_30_fu_1546_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_Result_i_i_i_i23_5_fu_1517_p4),9));
    zext_ln215_31_fu_1555_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1353_9_fu_1541_p2),10));
    zext_ln215_32_fu_1559_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1353_10_fu_1550_p2),10));
    zext_ln215_fu_1300_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln647_fu_1292_p1),9));
    zext_ln275_fu_660_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(select_ln321_reg_2101),64));
    zext_ln308_fu_1019_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j13_0_reg_441_pp1_iter1_reg),32));
    zext_ln349_1_fu_1224_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(icmp_ln349_fu_1218_p2),18));
    zext_ln349_fu_1214_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(indexx_0_V_fu_1174_p3),18));
    zext_ln351_fu_1234_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(indexx_0_V_fu_1174_p3),64));
    zext_ln352_fu_1266_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln349_fu_1228_p2),64));
    zext_ln361_fu_1272_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j13_0_reg_441_pp1_iter1_reg),64));
    zext_ln374_fu_1255_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln349_fu_1228_p2),64));
    zext_ln383_fu_1261_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j13_0_reg_441_pp1_iter1_reg),64));
    zext_ln396_fu_1244_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln349_fu_1228_p2),64));
    zext_ln405_fu_1250_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(j13_0_reg_441_pp1_iter1_reg),64));
    zext_ln879_1_fu_989_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_V_fu_973_p3),32));
    zext_ln879_fu_1845_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(indexy_V_fu_192),32));
    zext_ln891_1_fu_1926_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(nextYScale_V_1_fu_196),32));
    zext_ln891_fu_927_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(nextYScale_V_fu_920_p3),32));
end behav;
