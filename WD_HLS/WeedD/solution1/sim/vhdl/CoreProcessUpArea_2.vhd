-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity CoreProcessUpArea_2 is
port (
    ap_ready : OUT STD_LOGIC;
    A0 : IN STD_LOGIC_VECTOR (7 downto 0);
    B0 : IN STD_LOGIC_VECTOR (7 downto 0);
    A1 : IN STD_LOGIC_VECTOR (7 downto 0);
    B1 : IN STD_LOGIC_VECTOR (7 downto 0);
    Wx : IN STD_LOGIC_VECTOR (31 downto 0);
    Wy : IN STD_LOGIC_VECTOR (31 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of CoreProcessUpArea_2 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";
    constant ap_const_logic_0 : STD_LOGIC := '0';

    signal mul_ln552_fu_90_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln552_fu_90_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_ln552_fu_90_p2 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln553_fu_106_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln553_2_fu_114_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal sub_ln553_fu_126_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal sext_ln553_fu_132_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln553_3_fu_118_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln553_1_fu_110_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sub_ln553_1_fu_136_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln553_4_fu_122_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal val0_fu_142_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal Wxy_fu_96_p4 : STD_LOGIC_VECTOR (31 downto 0);
    signal P1_fu_168_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal P1_fu_168_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal val1_fu_148_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal P2_fu_178_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal P2_fu_178_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal val2_fu_154_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal P3_fu_188_p0 : STD_LOGIC_VECTOR (8 downto 0);
    signal P3_fu_188_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal P4_fu_194_p3 : STD_LOGIC_VECTOR (39 downto 0);
    signal P2_fu_178_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal P1_fu_168_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal P3_fu_188_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal add_ln562_fu_202_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal add_ln562_1_fu_208_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal add_ln562_2_fu_214_p2 : STD_LOGIC_VECTOR (39 downto 0);
    signal P1_fu_168_p10 : STD_LOGIC_VECTOR (39 downto 0);
    signal P2_fu_178_p10 : STD_LOGIC_VECTOR (39 downto 0);
    signal P3_fu_188_p10 : STD_LOGIC_VECTOR (39 downto 0);
    signal mul_ln552_fu_90_p00 : STD_LOGIC_VECTOR (63 downto 0);
    signal mul_ln552_fu_90_p10 : STD_LOGIC_VECTOR (63 downto 0);


begin



    P1_fu_168_p0 <= val0_fu_142_p2;
    P1_fu_168_p1 <= P1_fu_168_p10(32 - 1 downto 0);
    P1_fu_168_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Wxy_fu_96_p4),40));
    P1_fu_168_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(P1_fu_168_p0) * signed('0' &P1_fu_168_p1))), 40));
    P2_fu_178_p0 <= val1_fu_148_p2;
    P2_fu_178_p1 <= P2_fu_178_p10(32 - 1 downto 0);
    P2_fu_178_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Wx),40));
    P2_fu_178_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(P2_fu_178_p0) * signed('0' &P2_fu_178_p1))), 40));
    P3_fu_188_p0 <= val2_fu_154_p2;
    P3_fu_188_p1 <= P3_fu_188_p10(32 - 1 downto 0);
    P3_fu_188_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Wy),40));
    P3_fu_188_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(std_logic_vector(signed(P3_fu_188_p0) * signed('0' &P3_fu_188_p1))), 40));
    P4_fu_194_p3 <= (A0 & ap_const_lv32_0);
    Wxy_fu_96_p4 <= mul_ln552_fu_90_p2(63 downto 32);
    add_ln562_1_fu_208_p2 <= std_logic_vector(unsigned(P1_fu_168_p2) + unsigned(P3_fu_188_p2));
    add_ln562_2_fu_214_p2 <= std_logic_vector(unsigned(add_ln562_fu_202_p2) + unsigned(add_ln562_1_fu_208_p2));
    add_ln562_fu_202_p2 <= std_logic_vector(unsigned(P4_fu_194_p3) + unsigned(P2_fu_178_p2));
    ap_ready <= ap_const_logic_1;
    ap_return <= add_ln562_2_fu_214_p2(39 downto 32);
    mul_ln552_fu_90_p0 <= mul_ln552_fu_90_p00(32 - 1 downto 0);
    mul_ln552_fu_90_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Wx),64));
    mul_ln552_fu_90_p1 <= mul_ln552_fu_90_p10(32 - 1 downto 0);
    mul_ln552_fu_90_p10 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(Wy),64));
    mul_ln552_fu_90_p2 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(mul_ln552_fu_90_p0) * unsigned(mul_ln552_fu_90_p1), 64));
        sext_ln553_fu_132_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sub_ln553_fu_126_p2),10));

    sub_ln553_1_fu_136_p2 <= std_logic_vector(signed(sext_ln553_fu_132_p1) - signed(zext_ln553_3_fu_118_p1));
    sub_ln553_fu_126_p2 <= std_logic_vector(unsigned(zext_ln553_fu_106_p1) - unsigned(zext_ln553_2_fu_114_p1));
    val0_fu_142_p2 <= std_logic_vector(unsigned(zext_ln553_1_fu_110_p1) + unsigned(sub_ln553_1_fu_136_p2));
    val1_fu_148_p2 <= std_logic_vector(unsigned(zext_ln553_2_fu_114_p1) - unsigned(zext_ln553_fu_106_p1));
    val2_fu_154_p2 <= std_logic_vector(unsigned(zext_ln553_4_fu_122_p1) - unsigned(zext_ln553_fu_106_p1));
    zext_ln553_1_fu_110_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(B1),10));
    zext_ln553_2_fu_114_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(B0),9));
    zext_ln553_3_fu_118_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(A1),10));
    zext_ln553_4_fu_122_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(A1),9));
    zext_ln553_fu_106_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(A0),9));
end behav;
