// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module least_squares_line_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        centroids_2_address0,
        centroids_2_ce0,
        centroids_2_q0,
        ap_return_0,
        ap_return_1
);

parameter    ap_ST_fsm_state1 = 73'd1;
parameter    ap_ST_fsm_pp0_stage0 = 73'd2;
parameter    ap_ST_fsm_pp0_stage1 = 73'd4;
parameter    ap_ST_fsm_state7 = 73'd8;
parameter    ap_ST_fsm_state8 = 73'd16;
parameter    ap_ST_fsm_state9 = 73'd32;
parameter    ap_ST_fsm_state10 = 73'd64;
parameter    ap_ST_fsm_state11 = 73'd128;
parameter    ap_ST_fsm_state12 = 73'd256;
parameter    ap_ST_fsm_state13 = 73'd512;
parameter    ap_ST_fsm_state14 = 73'd1024;
parameter    ap_ST_fsm_state15 = 73'd2048;
parameter    ap_ST_fsm_state16 = 73'd4096;
parameter    ap_ST_fsm_state17 = 73'd8192;
parameter    ap_ST_fsm_state18 = 73'd16384;
parameter    ap_ST_fsm_state19 = 73'd32768;
parameter    ap_ST_fsm_state20 = 73'd65536;
parameter    ap_ST_fsm_state21 = 73'd131072;
parameter    ap_ST_fsm_state22 = 73'd262144;
parameter    ap_ST_fsm_state23 = 73'd524288;
parameter    ap_ST_fsm_state24 = 73'd1048576;
parameter    ap_ST_fsm_state25 = 73'd2097152;
parameter    ap_ST_fsm_state26 = 73'd4194304;
parameter    ap_ST_fsm_state27 = 73'd8388608;
parameter    ap_ST_fsm_state28 = 73'd16777216;
parameter    ap_ST_fsm_state29 = 73'd33554432;
parameter    ap_ST_fsm_state30 = 73'd67108864;
parameter    ap_ST_fsm_state31 = 73'd134217728;
parameter    ap_ST_fsm_state32 = 73'd268435456;
parameter    ap_ST_fsm_state33 = 73'd536870912;
parameter    ap_ST_fsm_state34 = 73'd1073741824;
parameter    ap_ST_fsm_state35 = 73'd2147483648;
parameter    ap_ST_fsm_state36 = 73'd4294967296;
parameter    ap_ST_fsm_state37 = 73'd8589934592;
parameter    ap_ST_fsm_state38 = 73'd17179869184;
parameter    ap_ST_fsm_state39 = 73'd34359738368;
parameter    ap_ST_fsm_state40 = 73'd68719476736;
parameter    ap_ST_fsm_state41 = 73'd137438953472;
parameter    ap_ST_fsm_state42 = 73'd274877906944;
parameter    ap_ST_fsm_state43 = 73'd549755813888;
parameter    ap_ST_fsm_state44 = 73'd1099511627776;
parameter    ap_ST_fsm_state45 = 73'd2199023255552;
parameter    ap_ST_fsm_state46 = 73'd4398046511104;
parameter    ap_ST_fsm_state47 = 73'd8796093022208;
parameter    ap_ST_fsm_state48 = 73'd17592186044416;
parameter    ap_ST_fsm_state49 = 73'd35184372088832;
parameter    ap_ST_fsm_state50 = 73'd70368744177664;
parameter    ap_ST_fsm_state51 = 73'd140737488355328;
parameter    ap_ST_fsm_state52 = 73'd281474976710656;
parameter    ap_ST_fsm_state53 = 73'd562949953421312;
parameter    ap_ST_fsm_state54 = 73'd1125899906842624;
parameter    ap_ST_fsm_state55 = 73'd2251799813685248;
parameter    ap_ST_fsm_state56 = 73'd4503599627370496;
parameter    ap_ST_fsm_state57 = 73'd9007199254740992;
parameter    ap_ST_fsm_state58 = 73'd18014398509481984;
parameter    ap_ST_fsm_state59 = 73'd36028797018963968;
parameter    ap_ST_fsm_state60 = 73'd72057594037927936;
parameter    ap_ST_fsm_state61 = 73'd144115188075855872;
parameter    ap_ST_fsm_state62 = 73'd288230376151711744;
parameter    ap_ST_fsm_state63 = 73'd576460752303423488;
parameter    ap_ST_fsm_state64 = 73'd1152921504606846976;
parameter    ap_ST_fsm_state65 = 73'd2305843009213693952;
parameter    ap_ST_fsm_state66 = 73'd4611686018427387904;
parameter    ap_ST_fsm_state67 = 73'd9223372036854775808;
parameter    ap_ST_fsm_state68 = 73'd18446744073709551616;
parameter    ap_ST_fsm_state69 = 73'd36893488147419103232;
parameter    ap_ST_fsm_state70 = 73'd73786976294838206464;
parameter    ap_ST_fsm_state71 = 73'd147573952589676412928;
parameter    ap_ST_fsm_state72 = 73'd295147905179352825856;
parameter    ap_ST_fsm_state73 = 73'd590295810358705651712;
parameter    ap_ST_fsm_state74 = 73'd1180591620717411303424;
parameter    ap_ST_fsm_state75 = 73'd2361183241434822606848;
parameter    ap_ST_fsm_state76 = 73'd4722366482869645213696;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [3:0] centroids_2_address0;
output   centroids_2_ce0;
input  [47:0] centroids_2_q0;
output  [31:0] ap_return_0;
output  [31:0] ap_return_1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg centroids_2_ce0;
reg[31:0] ap_return_0;
reg[31:0] ap_return_1;

(* fsm_encoding = "none" *) reg   [72:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [19:0] sum_x_0_reg_159;
reg   [31:0] sum_y_0_reg_171;
reg   [31:0] sum_xy_0_reg_183;
reg   [31:0] sum_xx_0_reg_195;
reg   [3:0] i_0_reg_207;
wire   [0:0] icmp_ln185_fu_226_p2;
reg   [0:0] icmp_ln185_reg_988;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state2_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_state6_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln185_reg_988_pp0_iter1_reg;
wire   [3:0] i_fu_232_p2;
reg   [3:0] i_reg_992;
reg    ap_enable_reg_pp0_iter0;
wire   [31:0] zext_ln187_1_fu_247_p1;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state3_pp0_stage1_iter0;
wire    ap_block_state5_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_11001;
wire   [19:0] sum_x_fu_255_p2;
reg   [19:0] sum_x_reg_1008;
wire   [31:0] sum_y_fu_271_p2;
reg   [31:0] sum_y_reg_1013;
wire   [31:0] sum_xy_fu_283_p2;
reg   [31:0] sum_xy_reg_1018;
wire   [31:0] grp_fu_980_p3;
reg    ap_enable_reg_pp0_iter2;
wire    ap_CS_fsm_state7;
reg   [17:0] tmp_38_reg_1038;
wire   [31:0] select_ln935_fu_779_p3;
reg   [31:0] select_ln935_reg_1043;
wire    ap_CS_fsm_state74;
wire   [31:0] grp_fu_222_p1;
wire    ap_CS_fsm_state75;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state2;
reg    ap_enable_reg_pp0_iter1;
wire    ap_block_pp0_stage1_subdone;
reg   [19:0] ap_phi_mux_sum_x_0_phi_fu_163_p4;
wire    ap_block_pp0_stage1;
reg   [31:0] ap_phi_mux_sum_y_0_phi_fu_175_p4;
reg   [31:0] ap_phi_mux_sum_xy_0_phi_fu_187_p4;
reg   [3:0] ap_phi_mux_i_0_phi_fu_211_p4;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln187_fu_238_p1;
wire   [31:0] grp_fu_222_p0;
wire   [15:0] trunc_ln187_fu_243_p1;
wire   [19:0] zext_ln187_2_fu_251_p1;
wire  signed [31:0] centroids_y_1_load_n_fu_261_p4;
wire   [15:0] mul_ln189_fu_277_p0;
wire   [31:0] mul_ln189_fu_277_p2;
wire   [35:0] shl_ln_fu_289_p3;
wire   [33:0] shl_ln731_2_fu_301_p3;
wire   [36:0] zext_ln731_fu_297_p1;
wire   [36:0] zext_ln731_1_fu_309_p1;
wire   [36:0] sub_ln731_2_fu_313_p2;
wire   [31:0] mul_ln731_fu_335_p0;
wire   [19:0] mul_ln731_fu_335_p1;
wire  signed [47:0] sext_ln731_fu_319_p1;
wire   [47:0] mul_ln731_fu_335_p2;
wire   [35:0] shl_ln731_3_fu_347_p3;
wire   [33:0] shl_ln731_4_fu_359_p3;
wire   [36:0] zext_ln731_5_fu_355_p1;
wire   [36:0] zext_ln731_6_fu_367_p1;
wire   [36:0] sub_ln731_3_fu_371_p2;
wire   [19:0] mul_ln731_1_fu_381_p0;
wire   [39:0] zext_ln731_3_fu_327_p1;
wire   [19:0] mul_ln731_1_fu_381_p1;
wire   [39:0] mul_ln731_1_fu_381_p2;
wire  signed [40:0] sext_ln731_1_fu_377_p1;
wire   [40:0] zext_ln731_7_fu_387_p1;
wire   [40:0] sub_ln731_1_fu_391_p2;
wire   [47:0] sub_ln731_fu_341_p2;
wire  signed [48:0] tmp_2_fu_397_p3;
wire   [63:0] grp_fu_417_p0;
wire   [19:0] mul_ln195_1_fu_427_p1;
wire   [41:0] mul_ln195_1_fu_427_p2;
wire  signed [63:0] grp_fu_417_p2;
wire  signed [64:0] tmp_V_11_fu_443_p1;
wire   [0:0] p_Result_12_fu_453_p3;
wire   [64:0] tmp_V_fu_461_p2;
wire   [64:0] tmp_V_12_fu_467_p3;
wire   [63:0] p_Result_s_fu_475_p4;
reg   [63:0] tmp_s_fu_485_p3;
wire   [0:0] trunc_ln1081_fu_503_p1;
wire   [63:0] p_Result_13_fu_507_p3;
reg   [63:0] tmp_fu_515_p3;
wire   [31:0] trunc_ln1074_fu_493_p1;
wire   [31:0] trunc_ln1083_fu_523_p1;
wire   [0:0] icmp_ln1075_fu_497_p2;
wire   [31:0] NZeros_fu_527_p2;
wire   [31:0] l_fu_533_p3;
wire   [31:0] sub_ln944_fu_541_p2;
wire   [31:0] lsb_index_fu_547_p2;
wire   [30:0] tmp_34_fu_553_p4;
wire   [6:0] trunc_ln947_fu_569_p1;
wire   [6:0] sub_ln947_fu_573_p2;
wire   [64:0] zext_ln947_fu_579_p1;
wire   [64:0] lshr_ln947_fu_583_p2;
wire   [64:0] p_Result_5_fu_589_p2;
wire   [0:0] icmp_ln947_fu_563_p2;
wire   [0:0] icmp_ln947_1_fu_595_p2;
wire   [0:0] tmp_35_fu_607_p3;
wire   [0:0] p_Result_3_fu_621_p3;
wire   [0:0] xor_ln949_fu_615_p2;
wire   [0:0] and_ln949_fu_629_p2;
wire   [0:0] a_fu_601_p2;
wire   [0:0] or_ln949_fu_635_p2;
wire   [31:0] add_ln954_fu_655_p2;
wire   [64:0] zext_ln954_fu_661_p1;
wire   [31:0] sub_ln954_fu_671_p2;
wire   [64:0] zext_ln954_1_fu_677_p1;
wire   [64:0] lshr_ln954_fu_665_p2;
wire   [64:0] shl_ln954_fu_681_p2;
wire   [0:0] icmp_ln954_fu_649_p2;
wire   [31:0] trunc_ln954_fu_687_p1;
wire   [31:0] trunc_ln954_1_fu_691_p1;
wire   [31:0] m_fu_695_p3;
wire   [31:0] or_ln_fu_641_p3;
wire   [31:0] m_1_fu_703_p2;
wire   [30:0] m_4_fu_709_p4;
wire   [0:0] tmp_36_fu_723_p3;
wire   [7:0] trunc_ln943_fu_739_p1;
wire   [7:0] select_ln964_fu_731_p3;
wire   [7:0] sub_ln964_fu_743_p2;
wire   [7:0] add_ln964_fu_749_p2;
wire   [31:0] m_5_fu_719_p1;
wire   [8:0] tmp_6_fu_755_p3;
wire   [31:0] p_Result_14_fu_763_p5;
wire   [0:0] icmp_ln935_fu_447_p2;
wire   [31:0] bitcast_ln739_fu_775_p1;
wire  signed [19:0] sext_ln195_fu_787_p1;
wire    ap_CS_fsm_state76;
wire   [31:0] mul_ln195_fu_799_p1;
wire   [64:0] mul_ln195_fu_799_p2;
wire   [28:0] tmp_37_fu_805_p4;
wire   [31:0] grp_fu_218_p2;
wire   [31:0] p_Val2_19_fu_819_p1;
wire   [22:0] tmp_V_14_fu_841_p1;
wire   [24:0] mantissa_V_fu_845_p4;
wire   [7:0] tmp_V_13_fu_831_p4;
wire   [8:0] zext_ln339_fu_859_p1;
wire   [8:0] add_ln339_fu_863_p2;
wire   [7:0] sub_ln1311_fu_877_p2;
wire   [0:0] isNeg_fu_869_p3;
wire  signed [8:0] sext_ln1311_fu_883_p1;
wire  signed [8:0] ush_fu_887_p3;
wire  signed [31:0] sext_ln1311_1_fu_895_p1;
wire  signed [24:0] sext_ln1311_2_fu_899_p1;
wire   [78:0] zext_ln682_fu_855_p1;
wire   [78:0] zext_ln1287_fu_903_p1;
wire   [24:0] r_V_fu_907_p2;
wire   [0:0] tmp_41_fu_919_p3;
wire   [78:0] r_V_2_fu_913_p2;
wire   [31:0] zext_ln662_fu_927_p1;
wire   [31:0] tmp_3_fu_931_p4;
wire   [31:0] p_Val2_s_fu_941_p3;
wire   [0:0] p_Result_15_fu_823_p3;
wire   [31:0] result_V_1_fu_949_p2;
wire   [31:0] zext_ln195_1_fu_815_p1;
wire   [31:0] p_Val2_21_fu_955_p3;
wire   [31:0] sub_ln195_fu_963_p2;
wire   [15:0] grp_fu_980_p0;
wire   [15:0] grp_fu_980_p1;
reg    grp_fu_417_ap_start;
wire    grp_fu_417_ap_done;
reg   [31:0] ap_return_0_preg;
reg   [31:0] ap_return_1_preg;
reg   [72:0] ap_NS_fsm;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
wire   [41:0] mul_ln195_1_fu_427_p10;
wire   [64:0] mul_ln195_fu_799_p10;
wire   [47:0] mul_ln731_fu_335_p00;
wire   [47:0] mul_ln731_fu_335_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 73'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_return_0_preg = 32'd0;
#0 ap_return_1_preg = 32'd0;
end

ip_accel_app_fmulKfY #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
ip_accel_app_fmulKfY_U479(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_222_p1),
    .din1(select_ln935_reg_1043),
    .ce(1'b1),
    .dout(grp_fu_218_p2)
);

ip_accel_app_uitoLf8 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
ip_accel_app_uitoLf8_U480(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_222_p0),
    .ce(1'b1),
    .dout(grp_fu_222_p1)
);

ip_accel_app_sdivZio #(
    .ID( 1 ),
    .NUM_STAGE( 68 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 49 ),
    .dout_WIDTH( 64 ))
ip_accel_app_sdivZio_U481(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_417_ap_start),
    .done(grp_fu_417_ap_done),
    .din0(grp_fu_417_p0),
    .din1(tmp_2_fu_397_p3),
    .ce(1'b1),
    .dout(grp_fu_417_p2)
);

ip_accel_app_mac_OgC #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
ip_accel_app_mac_OgC_U482(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_980_p0),
    .din1(grp_fu_980_p1),
    .din2(sum_xx_0_reg_195),
    .ce(1'b1),
    .dout(grp_fu_980_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state2) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if ((((1'b0 == ap_block_pp0_stage1_subdone) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_0_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state76)) begin
            ap_return_0_preg <= select_ln935_reg_1043;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_return_1_preg <= 32'd0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state76)) begin
            ap_return_1_preg <= sub_ln195_fu_963_p2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln185_reg_988 == 1'd0))) begin
        i_0_reg_207 <= i_reg_992;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        i_0_reg_207 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln185_reg_988_pp0_iter1_reg == 1'd0))) begin
        sum_x_0_reg_159 <= sum_x_reg_1008;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        sum_x_0_reg_159 <= 20'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln185_reg_988_pp0_iter1_reg == 1'd0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        sum_xx_0_reg_195 <= grp_fu_980_p3;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        sum_xx_0_reg_195 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln185_reg_988_pp0_iter1_reg == 1'd0))) begin
        sum_xy_0_reg_183 <= sum_xy_reg_1018;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        sum_xy_0_reg_183 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln185_reg_988_pp0_iter1_reg == 1'd0))) begin
        sum_y_0_reg_171 <= sum_y_reg_1013;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        sum_y_0_reg_171 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        i_reg_992 <= i_fu_232_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        icmp_ln185_reg_988 <= icmp_ln185_fu_226_p2;
        icmp_ln185_reg_988_pp0_iter1_reg <= icmp_ln185_reg_988;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state74)) begin
        select_ln935_reg_1043 <= select_ln935_fu_779_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp0_stage1) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln185_reg_988 == 1'd0))) begin
        sum_x_reg_1008 <= sum_x_fu_255_p2;
        sum_xy_reg_1018 <= sum_xy_fu_283_p2;
        sum_y_reg_1013 <= sum_y_fu_271_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        tmp_38_reg_1038 <= {{mul_ln195_1_fu_427_p2[41:24]}};
    end
end

always @ (*) begin
    if ((icmp_ln185_fu_226_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state2 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state76) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln185_reg_988 == 1'd0))) begin
        ap_phi_mux_i_0_phi_fu_211_p4 = i_reg_992;
    end else begin
        ap_phi_mux_i_0_phi_fu_211_p4 = i_0_reg_207;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln185_reg_988_pp0_iter1_reg == 1'd0))) begin
        ap_phi_mux_sum_x_0_phi_fu_163_p4 = sum_x_reg_1008;
    end else begin
        ap_phi_mux_sum_x_0_phi_fu_163_p4 = sum_x_0_reg_159;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln185_reg_988_pp0_iter1_reg == 1'd0))) begin
        ap_phi_mux_sum_xy_0_phi_fu_187_p4 = sum_xy_reg_1018;
    end else begin
        ap_phi_mux_sum_xy_0_phi_fu_187_p4 = sum_xy_0_reg_183;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln185_reg_988_pp0_iter1_reg == 1'd0))) begin
        ap_phi_mux_sum_y_0_phi_fu_175_p4 = sum_y_reg_1013;
    end else begin
        ap_phi_mux_sum_y_0_phi_fu_175_p4 = sum_y_0_reg_171;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        ap_return_0 = select_ln935_reg_1043;
    end else begin
        ap_return_0 = ap_return_0_preg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state76)) begin
        ap_return_1 = sub_ln195_fu_963_p2;
    end else begin
        ap_return_1 = ap_return_1_preg;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b0 == ap_block_pp0_stage0_11001))) begin
        centroids_2_ce0 = 1'b1;
    end else begin
        centroids_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_417_ap_start = 1'b1;
    end else begin
        grp_fu_417_ap_start = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln185_fu_226_p2 == 1'd1)) & ~((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if ((((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (icmp_ln185_fu_226_p2 == 1'd1)) | ((ap_enable_reg_pp0_iter1 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign NZeros_fu_527_p2 = (trunc_ln1074_fu_493_p1 + trunc_ln1083_fu_523_p1);

assign a_fu_601_p2 = (icmp_ln947_fu_563_p2 & icmp_ln947_1_fu_595_p2);

assign add_ln339_fu_863_p2 = ($signed(9'd385) + $signed(zext_ln339_fu_859_p1));

assign add_ln954_fu_655_p2 = ($signed(32'd4294967271) + $signed(sub_ln944_fu_541_p2));

assign add_ln964_fu_749_p2 = (select_ln964_fu_731_p3 + sub_ln964_fu_743_p2);

assign and_ln949_fu_629_p2 = (xor_ln949_fu_615_p2 & p_Result_3_fu_621_p3);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state74 = ap_CS_fsm[32'd70];

assign ap_CS_fsm_state75 = ap_CS_fsm[32'd71];

assign ap_CS_fsm_state76 = ap_CS_fsm[32'd72];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign bitcast_ln739_fu_775_p1 = p_Result_14_fu_763_p5;

assign centroids_2_address0 = zext_ln187_fu_238_p1;

assign centroids_y_1_load_n_fu_261_p4 = {{centroids_2_q0[47:16]}};

assign grp_fu_222_p0 = $unsigned(sext_ln195_fu_787_p1);

assign grp_fu_417_p0 = {{sub_ln731_fu_341_p2}, {16'd0}};

assign grp_fu_980_p0 = zext_ln187_1_fu_247_p1;

assign grp_fu_980_p1 = zext_ln187_1_fu_247_p1;

assign i_fu_232_p2 = (ap_phi_mux_i_0_phi_fu_211_p4 + 4'd1);

assign icmp_ln1075_fu_497_p2 = ((p_Result_s_fu_475_p4 == 64'd0) ? 1'b1 : 1'b0);

assign icmp_ln185_fu_226_p2 = ((ap_phi_mux_i_0_phi_fu_211_p4 == 4'd12) ? 1'b1 : 1'b0);

assign icmp_ln935_fu_447_p2 = ((grp_fu_417_p2 == 64'd0) ? 1'b1 : 1'b0);

assign icmp_ln947_1_fu_595_p2 = ((p_Result_5_fu_589_p2 != 65'd0) ? 1'b1 : 1'b0);

assign icmp_ln947_fu_563_p2 = (($signed(tmp_34_fu_553_p4) > $signed(31'd0)) ? 1'b1 : 1'b0);

assign icmp_ln954_fu_649_p2 = (($signed(lsb_index_fu_547_p2) > $signed(32'd0)) ? 1'b1 : 1'b0);

assign isNeg_fu_869_p3 = add_ln339_fu_863_p2[32'd8];

assign l_fu_533_p3 = ((icmp_ln1075_fu_497_p2[0:0] === 1'b1) ? NZeros_fu_527_p2 : trunc_ln1074_fu_493_p1);

assign lsb_index_fu_547_p2 = ($signed(32'd4294967272) + $signed(sub_ln944_fu_541_p2));

assign lshr_ln947_fu_583_p2 = 65'd36893488147419103231 >> zext_ln947_fu_579_p1;

assign lshr_ln954_fu_665_p2 = tmp_V_12_fu_467_p3 >> zext_ln954_fu_661_p1;

assign m_1_fu_703_p2 = (m_fu_695_p3 + or_ln_fu_641_p3);

assign m_4_fu_709_p4 = {{m_1_fu_703_p2[31:1]}};

assign m_5_fu_719_p1 = m_4_fu_709_p4;

assign m_fu_695_p3 = ((icmp_ln954_fu_649_p2[0:0] === 1'b1) ? trunc_ln954_fu_687_p1 : trunc_ln954_1_fu_691_p1);

assign mantissa_V_fu_845_p4 = {{{{1'd1}, {tmp_V_14_fu_841_p1}}}, {1'd0}};

assign mul_ln189_fu_277_p0 = zext_ln187_1_fu_247_p1;

assign mul_ln189_fu_277_p2 = ($signed({{1'b0}, {mul_ln189_fu_277_p0}}) * $signed(centroids_y_1_load_n_fu_261_p4));

assign mul_ln195_1_fu_427_p1 = mul_ln195_1_fu_427_p10;

assign mul_ln195_1_fu_427_p10 = sum_x_0_reg_159;

assign mul_ln195_1_fu_427_p2 = (42'd1398102 * mul_ln195_1_fu_427_p1);

assign mul_ln195_fu_799_p1 = mul_ln195_fu_799_p10;

assign mul_ln195_fu_799_p10 = sum_y_0_reg_171;

assign mul_ln195_fu_799_p2 = (65'd5726623062 * mul_ln195_fu_799_p1);

assign mul_ln731_1_fu_381_p0 = zext_ln731_3_fu_327_p1;

assign mul_ln731_1_fu_381_p1 = zext_ln731_3_fu_327_p1;

assign mul_ln731_1_fu_381_p2 = (mul_ln731_1_fu_381_p0 * mul_ln731_1_fu_381_p1);

assign mul_ln731_fu_335_p0 = mul_ln731_fu_335_p00;

assign mul_ln731_fu_335_p00 = sum_y_0_reg_171;

assign mul_ln731_fu_335_p1 = mul_ln731_fu_335_p10;

assign mul_ln731_fu_335_p10 = sum_x_0_reg_159;

assign mul_ln731_fu_335_p2 = (mul_ln731_fu_335_p0 * mul_ln731_fu_335_p1);

assign or_ln949_fu_635_p2 = (and_ln949_fu_629_p2 | a_fu_601_p2);

assign or_ln_fu_641_p3 = {{31'd0}, {or_ln949_fu_635_p2}};

assign p_Result_12_fu_453_p3 = grp_fu_417_p2[32'd63];

assign p_Result_13_fu_507_p3 = {{trunc_ln1081_fu_503_p1}, {63'd9223372036854775807}};

assign p_Result_14_fu_763_p5 = {{tmp_6_fu_755_p3}, {m_5_fu_719_p1[22:0]}};

assign p_Result_15_fu_823_p3 = p_Val2_19_fu_819_p1[32'd31];

assign p_Result_3_fu_621_p3 = tmp_V_12_fu_467_p3[lsb_index_fu_547_p2];

assign p_Result_5_fu_589_p2 = (tmp_V_12_fu_467_p3 & lshr_ln947_fu_583_p2);

assign p_Result_s_fu_475_p4 = {{tmp_V_12_fu_467_p3[64:1]}};

assign p_Val2_19_fu_819_p1 = grp_fu_218_p2;

assign p_Val2_21_fu_955_p3 = ((p_Result_15_fu_823_p3[0:0] === 1'b1) ? result_V_1_fu_949_p2 : p_Val2_s_fu_941_p3);

assign p_Val2_s_fu_941_p3 = ((isNeg_fu_869_p3[0:0] === 1'b1) ? zext_ln662_fu_927_p1 : tmp_3_fu_931_p4);

assign r_V_2_fu_913_p2 = zext_ln682_fu_855_p1 << zext_ln1287_fu_903_p1;

assign r_V_fu_907_p2 = mantissa_V_fu_845_p4 >> sext_ln1311_2_fu_899_p1;

assign result_V_1_fu_949_p2 = (32'd0 - p_Val2_s_fu_941_p3);

assign select_ln935_fu_779_p3 = ((icmp_ln935_fu_447_p2[0:0] === 1'b1) ? 32'd0 : bitcast_ln739_fu_775_p1);

assign select_ln964_fu_731_p3 = ((tmp_36_fu_723_p3[0:0] === 1'b1) ? 8'd127 : 8'd126);

assign sext_ln1311_1_fu_895_p1 = ush_fu_887_p3;

assign sext_ln1311_2_fu_899_p1 = ush_fu_887_p3;

assign sext_ln1311_fu_883_p1 = $signed(sub_ln1311_fu_877_p2);

assign sext_ln195_fu_787_p1 = $signed(tmp_38_reg_1038);

assign sext_ln731_1_fu_377_p1 = $signed(sub_ln731_3_fu_371_p2);

assign sext_ln731_fu_319_p1 = $signed(sub_ln731_2_fu_313_p2);

assign shl_ln731_2_fu_301_p3 = {{sum_xy_0_reg_183}, {2'd0}};

assign shl_ln731_3_fu_347_p3 = {{sum_xx_0_reg_195}, {4'd0}};

assign shl_ln731_4_fu_359_p3 = {{sum_xx_0_reg_195}, {2'd0}};

assign shl_ln954_fu_681_p2 = tmp_V_12_fu_467_p3 << zext_ln954_1_fu_677_p1;

assign shl_ln_fu_289_p3 = {{sum_xy_0_reg_183}, {4'd0}};

assign sub_ln1311_fu_877_p2 = (8'd127 - tmp_V_13_fu_831_p4);

assign sub_ln195_fu_963_p2 = (zext_ln195_1_fu_815_p1 - p_Val2_21_fu_955_p3);

assign sub_ln731_1_fu_391_p2 = ($signed(sext_ln731_1_fu_377_p1) - $signed(zext_ln731_7_fu_387_p1));

assign sub_ln731_2_fu_313_p2 = (zext_ln731_fu_297_p1 - zext_ln731_1_fu_309_p1);

assign sub_ln731_3_fu_371_p2 = (zext_ln731_5_fu_355_p1 - zext_ln731_6_fu_367_p1);

assign sub_ln731_fu_341_p2 = ($signed(sext_ln731_fu_319_p1) - $signed(mul_ln731_fu_335_p2));

assign sub_ln944_fu_541_p2 = (32'd65 - l_fu_533_p3);

assign sub_ln947_fu_573_p2 = ($signed(7'd90) - $signed(trunc_ln947_fu_569_p1));

assign sub_ln954_fu_671_p2 = (32'd25 - sub_ln944_fu_541_p2);

assign sub_ln964_fu_743_p2 = (8'd57 - trunc_ln943_fu_739_p1);

assign sum_x_fu_255_p2 = (ap_phi_mux_sum_x_0_phi_fu_163_p4 + zext_ln187_2_fu_251_p1);

assign sum_xy_fu_283_p2 = (ap_phi_mux_sum_xy_0_phi_fu_187_p4 + mul_ln189_fu_277_p2);

assign sum_y_fu_271_p2 = ($signed(ap_phi_mux_sum_y_0_phi_fu_175_p4) + $signed(centroids_y_1_load_n_fu_261_p4));

assign tmp_2_fu_397_p3 = {{sub_ln731_1_fu_391_p2}, {8'd0}};

assign tmp_34_fu_553_p4 = {{lsb_index_fu_547_p2[31:1]}};

assign tmp_35_fu_607_p3 = lsb_index_fu_547_p2[32'd31];

assign tmp_36_fu_723_p3 = m_1_fu_703_p2[32'd25];

assign tmp_37_fu_805_p4 = {{mul_ln195_fu_799_p2[64:36]}};

assign tmp_3_fu_931_p4 = {{r_V_2_fu_913_p2[55:24]}};

assign tmp_41_fu_919_p3 = r_V_fu_907_p2[32'd24];

assign tmp_6_fu_755_p3 = {{p_Result_12_fu_453_p3}, {add_ln964_fu_749_p2}};

assign tmp_V_11_fu_443_p1 = grp_fu_417_p2;

assign tmp_V_12_fu_467_p3 = ((p_Result_12_fu_453_p3[0:0] === 1'b1) ? tmp_V_fu_461_p2 : tmp_V_11_fu_443_p1);

assign tmp_V_13_fu_831_p4 = {{p_Val2_19_fu_819_p1[30:23]}};

assign tmp_V_14_fu_841_p1 = p_Val2_19_fu_819_p1[22:0];

assign tmp_V_fu_461_p2 = ($signed(65'd0) - $signed(tmp_V_11_fu_443_p1));

always @ (p_Result_13_fu_507_p3) begin
    if (p_Result_13_fu_507_p3[63] == 1'b1) begin
        tmp_fu_515_p3 = 64'd0;
    end else if (p_Result_13_fu_507_p3[62] == 1'b1) begin
        tmp_fu_515_p3 = 64'd1;
    end else if (p_Result_13_fu_507_p3[61] == 1'b1) begin
        tmp_fu_515_p3 = 64'd2;
    end else if (p_Result_13_fu_507_p3[60] == 1'b1) begin
        tmp_fu_515_p3 = 64'd3;
    end else if (p_Result_13_fu_507_p3[59] == 1'b1) begin
        tmp_fu_515_p3 = 64'd4;
    end else if (p_Result_13_fu_507_p3[58] == 1'b1) begin
        tmp_fu_515_p3 = 64'd5;
    end else if (p_Result_13_fu_507_p3[57] == 1'b1) begin
        tmp_fu_515_p3 = 64'd6;
    end else if (p_Result_13_fu_507_p3[56] == 1'b1) begin
        tmp_fu_515_p3 = 64'd7;
    end else if (p_Result_13_fu_507_p3[55] == 1'b1) begin
        tmp_fu_515_p3 = 64'd8;
    end else if (p_Result_13_fu_507_p3[54] == 1'b1) begin
        tmp_fu_515_p3 = 64'd9;
    end else if (p_Result_13_fu_507_p3[53] == 1'b1) begin
        tmp_fu_515_p3 = 64'd10;
    end else if (p_Result_13_fu_507_p3[52] == 1'b1) begin
        tmp_fu_515_p3 = 64'd11;
    end else if (p_Result_13_fu_507_p3[51] == 1'b1) begin
        tmp_fu_515_p3 = 64'd12;
    end else if (p_Result_13_fu_507_p3[50] == 1'b1) begin
        tmp_fu_515_p3 = 64'd13;
    end else if (p_Result_13_fu_507_p3[49] == 1'b1) begin
        tmp_fu_515_p3 = 64'd14;
    end else if (p_Result_13_fu_507_p3[48] == 1'b1) begin
        tmp_fu_515_p3 = 64'd15;
    end else if (p_Result_13_fu_507_p3[47] == 1'b1) begin
        tmp_fu_515_p3 = 64'd16;
    end else if (p_Result_13_fu_507_p3[46] == 1'b1) begin
        tmp_fu_515_p3 = 64'd17;
    end else if (p_Result_13_fu_507_p3[45] == 1'b1) begin
        tmp_fu_515_p3 = 64'd18;
    end else if (p_Result_13_fu_507_p3[44] == 1'b1) begin
        tmp_fu_515_p3 = 64'd19;
    end else if (p_Result_13_fu_507_p3[43] == 1'b1) begin
        tmp_fu_515_p3 = 64'd20;
    end else if (p_Result_13_fu_507_p3[42] == 1'b1) begin
        tmp_fu_515_p3 = 64'd21;
    end else if (p_Result_13_fu_507_p3[41] == 1'b1) begin
        tmp_fu_515_p3 = 64'd22;
    end else if (p_Result_13_fu_507_p3[40] == 1'b1) begin
        tmp_fu_515_p3 = 64'd23;
    end else if (p_Result_13_fu_507_p3[39] == 1'b1) begin
        tmp_fu_515_p3 = 64'd24;
    end else if (p_Result_13_fu_507_p3[38] == 1'b1) begin
        tmp_fu_515_p3 = 64'd25;
    end else if (p_Result_13_fu_507_p3[37] == 1'b1) begin
        tmp_fu_515_p3 = 64'd26;
    end else if (p_Result_13_fu_507_p3[36] == 1'b1) begin
        tmp_fu_515_p3 = 64'd27;
    end else if (p_Result_13_fu_507_p3[35] == 1'b1) begin
        tmp_fu_515_p3 = 64'd28;
    end else if (p_Result_13_fu_507_p3[34] == 1'b1) begin
        tmp_fu_515_p3 = 64'd29;
    end else if (p_Result_13_fu_507_p3[33] == 1'b1) begin
        tmp_fu_515_p3 = 64'd30;
    end else if (p_Result_13_fu_507_p3[32] == 1'b1) begin
        tmp_fu_515_p3 = 64'd31;
    end else if (p_Result_13_fu_507_p3[31] == 1'b1) begin
        tmp_fu_515_p3 = 64'd32;
    end else if (p_Result_13_fu_507_p3[30] == 1'b1) begin
        tmp_fu_515_p3 = 64'd33;
    end else if (p_Result_13_fu_507_p3[29] == 1'b1) begin
        tmp_fu_515_p3 = 64'd34;
    end else if (p_Result_13_fu_507_p3[28] == 1'b1) begin
        tmp_fu_515_p3 = 64'd35;
    end else if (p_Result_13_fu_507_p3[27] == 1'b1) begin
        tmp_fu_515_p3 = 64'd36;
    end else if (p_Result_13_fu_507_p3[26] == 1'b1) begin
        tmp_fu_515_p3 = 64'd37;
    end else if (p_Result_13_fu_507_p3[25] == 1'b1) begin
        tmp_fu_515_p3 = 64'd38;
    end else if (p_Result_13_fu_507_p3[24] == 1'b1) begin
        tmp_fu_515_p3 = 64'd39;
    end else if (p_Result_13_fu_507_p3[23] == 1'b1) begin
        tmp_fu_515_p3 = 64'd40;
    end else if (p_Result_13_fu_507_p3[22] == 1'b1) begin
        tmp_fu_515_p3 = 64'd41;
    end else if (p_Result_13_fu_507_p3[21] == 1'b1) begin
        tmp_fu_515_p3 = 64'd42;
    end else if (p_Result_13_fu_507_p3[20] == 1'b1) begin
        tmp_fu_515_p3 = 64'd43;
    end else if (p_Result_13_fu_507_p3[19] == 1'b1) begin
        tmp_fu_515_p3 = 64'd44;
    end else if (p_Result_13_fu_507_p3[18] == 1'b1) begin
        tmp_fu_515_p3 = 64'd45;
    end else if (p_Result_13_fu_507_p3[17] == 1'b1) begin
        tmp_fu_515_p3 = 64'd46;
    end else if (p_Result_13_fu_507_p3[16] == 1'b1) begin
        tmp_fu_515_p3 = 64'd47;
    end else if (p_Result_13_fu_507_p3[15] == 1'b1) begin
        tmp_fu_515_p3 = 64'd48;
    end else if (p_Result_13_fu_507_p3[14] == 1'b1) begin
        tmp_fu_515_p3 = 64'd49;
    end else if (p_Result_13_fu_507_p3[13] == 1'b1) begin
        tmp_fu_515_p3 = 64'd50;
    end else if (p_Result_13_fu_507_p3[12] == 1'b1) begin
        tmp_fu_515_p3 = 64'd51;
    end else if (p_Result_13_fu_507_p3[11] == 1'b1) begin
        tmp_fu_515_p3 = 64'd52;
    end else if (p_Result_13_fu_507_p3[10] == 1'b1) begin
        tmp_fu_515_p3 = 64'd53;
    end else if (p_Result_13_fu_507_p3[9] == 1'b1) begin
        tmp_fu_515_p3 = 64'd54;
    end else if (p_Result_13_fu_507_p3[8] == 1'b1) begin
        tmp_fu_515_p3 = 64'd55;
    end else if (p_Result_13_fu_507_p3[7] == 1'b1) begin
        tmp_fu_515_p3 = 64'd56;
    end else if (p_Result_13_fu_507_p3[6] == 1'b1) begin
        tmp_fu_515_p3 = 64'd57;
    end else if (p_Result_13_fu_507_p3[5] == 1'b1) begin
        tmp_fu_515_p3 = 64'd58;
    end else if (p_Result_13_fu_507_p3[4] == 1'b1) begin
        tmp_fu_515_p3 = 64'd59;
    end else if (p_Result_13_fu_507_p3[3] == 1'b1) begin
        tmp_fu_515_p3 = 64'd60;
    end else if (p_Result_13_fu_507_p3[2] == 1'b1) begin
        tmp_fu_515_p3 = 64'd61;
    end else if (p_Result_13_fu_507_p3[1] == 1'b1) begin
        tmp_fu_515_p3 = 64'd62;
    end else if (p_Result_13_fu_507_p3[0] == 1'b1) begin
        tmp_fu_515_p3 = 64'd63;
    end else begin
        tmp_fu_515_p3 = 64'd64;
    end
end

always @ (p_Result_s_fu_475_p4) begin
    if (p_Result_s_fu_475_p4[63] == 1'b1) begin
        tmp_s_fu_485_p3 = 64'd0;
    end else if (p_Result_s_fu_475_p4[62] == 1'b1) begin
        tmp_s_fu_485_p3 = 64'd1;
    end else if (p_Result_s_fu_475_p4[61] == 1'b1) begin
        tmp_s_fu_485_p3 = 64'd2;
    end else if (p_Result_s_fu_475_p4[60] == 1'b1) begin
        tmp_s_fu_485_p3 = 64'd3;
    end else if (p_Result_s_fu_475_p4[59] == 1'b1) begin
        tmp_s_fu_485_p3 = 64'd4;
    end else if (p_Result_s_fu_475_p4[58] == 1'b1) begin
        tmp_s_fu_485_p3 = 64'd5;
    end else if (p_Result_s_fu_475_p4[57] == 1'b1) begin
        tmp_s_fu_485_p3 = 64'd6;
    end else if (p_Result_s_fu_475_p4[56] == 1'b1) begin
        tmp_s_fu_485_p3 = 64'd7;
    end else if (p_Result_s_fu_475_p4[55] == 1'b1) begin
        tmp_s_fu_485_p3 = 64'd8;
    end else if (p_Result_s_fu_475_p4[54] == 1'b1) begin
        tmp_s_fu_485_p3 = 64'd9;
    end else if (p_Result_s_fu_475_p4[53] == 1'b1) begin
        tmp_s_fu_485_p3 = 64'd10;
    end else if (p_Result_s_fu_475_p4[52] == 1'b1) begin
        tmp_s_fu_485_p3 = 64'd11;
    end else if (p_Result_s_fu_475_p4[51] == 1'b1) begin
        tmp_s_fu_485_p3 = 64'd12;
    end else if (p_Result_s_fu_475_p4[50] == 1'b1) begin
        tmp_s_fu_485_p3 = 64'd13;
    end else if (p_Result_s_fu_475_p4[49] == 1'b1) begin
        tmp_s_fu_485_p3 = 64'd14;
    end else if (p_Result_s_fu_475_p4[48] == 1'b1) begin
        tmp_s_fu_485_p3 = 64'd15;
    end else if (p_Result_s_fu_475_p4[47] == 1'b1) begin
        tmp_s_fu_485_p3 = 64'd16;
    end else if (p_Result_s_fu_475_p4[46] == 1'b1) begin
        tmp_s_fu_485_p3 = 64'd17;
    end else if (p_Result_s_fu_475_p4[45] == 1'b1) begin
        tmp_s_fu_485_p3 = 64'd18;
    end else if (p_Result_s_fu_475_p4[44] == 1'b1) begin
        tmp_s_fu_485_p3 = 64'd19;
    end else if (p_Result_s_fu_475_p4[43] == 1'b1) begin
        tmp_s_fu_485_p3 = 64'd20;
    end else if (p_Result_s_fu_475_p4[42] == 1'b1) begin
        tmp_s_fu_485_p3 = 64'd21;
    end else if (p_Result_s_fu_475_p4[41] == 1'b1) begin
        tmp_s_fu_485_p3 = 64'd22;
    end else if (p_Result_s_fu_475_p4[40] == 1'b1) begin
        tmp_s_fu_485_p3 = 64'd23;
    end else if (p_Result_s_fu_475_p4[39] == 1'b1) begin
        tmp_s_fu_485_p3 = 64'd24;
    end else if (p_Result_s_fu_475_p4[38] == 1'b1) begin
        tmp_s_fu_485_p3 = 64'd25;
    end else if (p_Result_s_fu_475_p4[37] == 1'b1) begin
        tmp_s_fu_485_p3 = 64'd26;
    end else if (p_Result_s_fu_475_p4[36] == 1'b1) begin
        tmp_s_fu_485_p3 = 64'd27;
    end else if (p_Result_s_fu_475_p4[35] == 1'b1) begin
        tmp_s_fu_485_p3 = 64'd28;
    end else if (p_Result_s_fu_475_p4[34] == 1'b1) begin
        tmp_s_fu_485_p3 = 64'd29;
    end else if (p_Result_s_fu_475_p4[33] == 1'b1) begin
        tmp_s_fu_485_p3 = 64'd30;
    end else if (p_Result_s_fu_475_p4[32] == 1'b1) begin
        tmp_s_fu_485_p3 = 64'd31;
    end else if (p_Result_s_fu_475_p4[31] == 1'b1) begin
        tmp_s_fu_485_p3 = 64'd32;
    end else if (p_Result_s_fu_475_p4[30] == 1'b1) begin
        tmp_s_fu_485_p3 = 64'd33;
    end else if (p_Result_s_fu_475_p4[29] == 1'b1) begin
        tmp_s_fu_485_p3 = 64'd34;
    end else if (p_Result_s_fu_475_p4[28] == 1'b1) begin
        tmp_s_fu_485_p3 = 64'd35;
    end else if (p_Result_s_fu_475_p4[27] == 1'b1) begin
        tmp_s_fu_485_p3 = 64'd36;
    end else if (p_Result_s_fu_475_p4[26] == 1'b1) begin
        tmp_s_fu_485_p3 = 64'd37;
    end else if (p_Result_s_fu_475_p4[25] == 1'b1) begin
        tmp_s_fu_485_p3 = 64'd38;
    end else if (p_Result_s_fu_475_p4[24] == 1'b1) begin
        tmp_s_fu_485_p3 = 64'd39;
    end else if (p_Result_s_fu_475_p4[23] == 1'b1) begin
        tmp_s_fu_485_p3 = 64'd40;
    end else if (p_Result_s_fu_475_p4[22] == 1'b1) begin
        tmp_s_fu_485_p3 = 64'd41;
    end else if (p_Result_s_fu_475_p4[21] == 1'b1) begin
        tmp_s_fu_485_p3 = 64'd42;
    end else if (p_Result_s_fu_475_p4[20] == 1'b1) begin
        tmp_s_fu_485_p3 = 64'd43;
    end else if (p_Result_s_fu_475_p4[19] == 1'b1) begin
        tmp_s_fu_485_p3 = 64'd44;
    end else if (p_Result_s_fu_475_p4[18] == 1'b1) begin
        tmp_s_fu_485_p3 = 64'd45;
    end else if (p_Result_s_fu_475_p4[17] == 1'b1) begin
        tmp_s_fu_485_p3 = 64'd46;
    end else if (p_Result_s_fu_475_p4[16] == 1'b1) begin
        tmp_s_fu_485_p3 = 64'd47;
    end else if (p_Result_s_fu_475_p4[15] == 1'b1) begin
        tmp_s_fu_485_p3 = 64'd48;
    end else if (p_Result_s_fu_475_p4[14] == 1'b1) begin
        tmp_s_fu_485_p3 = 64'd49;
    end else if (p_Result_s_fu_475_p4[13] == 1'b1) begin
        tmp_s_fu_485_p3 = 64'd50;
    end else if (p_Result_s_fu_475_p4[12] == 1'b1) begin
        tmp_s_fu_485_p3 = 64'd51;
    end else if (p_Result_s_fu_475_p4[11] == 1'b1) begin
        tmp_s_fu_485_p3 = 64'd52;
    end else if (p_Result_s_fu_475_p4[10] == 1'b1) begin
        tmp_s_fu_485_p3 = 64'd53;
    end else if (p_Result_s_fu_475_p4[9] == 1'b1) begin
        tmp_s_fu_485_p3 = 64'd54;
    end else if (p_Result_s_fu_475_p4[8] == 1'b1) begin
        tmp_s_fu_485_p3 = 64'd55;
    end else if (p_Result_s_fu_475_p4[7] == 1'b1) begin
        tmp_s_fu_485_p3 = 64'd56;
    end else if (p_Result_s_fu_475_p4[6] == 1'b1) begin
        tmp_s_fu_485_p3 = 64'd57;
    end else if (p_Result_s_fu_475_p4[5] == 1'b1) begin
        tmp_s_fu_485_p3 = 64'd58;
    end else if (p_Result_s_fu_475_p4[4] == 1'b1) begin
        tmp_s_fu_485_p3 = 64'd59;
    end else if (p_Result_s_fu_475_p4[3] == 1'b1) begin
        tmp_s_fu_485_p3 = 64'd60;
    end else if (p_Result_s_fu_475_p4[2] == 1'b1) begin
        tmp_s_fu_485_p3 = 64'd61;
    end else if (p_Result_s_fu_475_p4[1] == 1'b1) begin
        tmp_s_fu_485_p3 = 64'd62;
    end else if (p_Result_s_fu_475_p4[0] == 1'b1) begin
        tmp_s_fu_485_p3 = 64'd63;
    end else begin
        tmp_s_fu_485_p3 = 64'd64;
    end
end

assign trunc_ln1074_fu_493_p1 = tmp_s_fu_485_p3[31:0];

assign trunc_ln1081_fu_503_p1 = tmp_V_12_fu_467_p3[0:0];

assign trunc_ln1083_fu_523_p1 = tmp_fu_515_p3[31:0];

assign trunc_ln187_fu_243_p1 = centroids_2_q0[15:0];

assign trunc_ln943_fu_739_p1 = l_fu_533_p3[7:0];

assign trunc_ln947_fu_569_p1 = sub_ln944_fu_541_p2[6:0];

assign trunc_ln954_1_fu_691_p1 = shl_ln954_fu_681_p2[31:0];

assign trunc_ln954_fu_687_p1 = lshr_ln954_fu_665_p2[31:0];

assign ush_fu_887_p3 = ((isNeg_fu_869_p3[0:0] === 1'b1) ? sext_ln1311_fu_883_p1 : add_ln339_fu_863_p2);

assign xor_ln949_fu_615_p2 = (tmp_35_fu_607_p3 ^ 1'd1);

assign zext_ln1287_fu_903_p1 = $unsigned(sext_ln1311_1_fu_895_p1);

assign zext_ln187_1_fu_247_p1 = trunc_ln187_fu_243_p1;

assign zext_ln187_2_fu_251_p1 = trunc_ln187_fu_243_p1;

assign zext_ln187_fu_238_p1 = ap_phi_mux_i_0_phi_fu_211_p4;

assign zext_ln195_1_fu_815_p1 = tmp_37_fu_805_p4;

assign zext_ln339_fu_859_p1 = tmp_V_13_fu_831_p4;

assign zext_ln662_fu_927_p1 = tmp_41_fu_919_p3;

assign zext_ln682_fu_855_p1 = mantissa_V_fu_845_p4;

assign zext_ln731_1_fu_309_p1 = shl_ln731_2_fu_301_p3;

assign zext_ln731_3_fu_327_p1 = sum_x_0_reg_159;

assign zext_ln731_5_fu_355_p1 = shl_ln731_3_fu_347_p3;

assign zext_ln731_6_fu_367_p1 = shl_ln731_4_fu_359_p3;

assign zext_ln731_7_fu_387_p1 = mul_ln731_1_fu_381_p2;

assign zext_ln731_fu_297_p1 = shl_ln_fu_289_p3;

assign zext_ln947_fu_579_p1 = sub_ln947_fu_573_p2;

assign zext_ln954_1_fu_677_p1 = sub_ln954_fu_671_p2;

assign zext_ln954_fu_661_p1 = add_ln954_fu_655_p2;

endmodule //least_squares_line_1
