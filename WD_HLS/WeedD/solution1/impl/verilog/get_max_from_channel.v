// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module get_max_from_channel (
        r_channel_data_V_dout,
        r_channel_data_V_empty_n,
        r_channel_data_V_read,
        g_channel_data_V_dout,
        g_channel_data_V_empty_n,
        g_channel_data_V_read,
        b_channel_data_V_dout,
        b_channel_data_V_empty_n,
        b_channel_data_V_read,
        max_r_out_din,
        max_r_out_full_n,
        max_r_out_write,
        max_g_out_din,
        max_g_out_full_n,
        max_g_out_write,
        max_b_out_din,
        max_b_out_full_n,
        max_b_out_write,
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_ready,
        ap_idle,
        ap_continue
);


input  [7:0] r_channel_data_V_dout;
input   r_channel_data_V_empty_n;
output   r_channel_data_V_read;
input  [7:0] g_channel_data_V_dout;
input   g_channel_data_V_empty_n;
output   g_channel_data_V_read;
input  [7:0] b_channel_data_V_dout;
input   b_channel_data_V_empty_n;
output   b_channel_data_V_read;
output  [31:0] max_r_out_din;
input   max_r_out_full_n;
output   max_r_out_write;
output  [31:0] max_g_out_din;
input   max_g_out_full_n;
output   max_g_out_write;
output  [31:0] max_b_out_din;
input   max_b_out_full_n;
output   max_b_out_write;
input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_ready;
output   ap_idle;
input   ap_continue;

wire    minMaxLoc436_U0_ap_start;
wire    minMaxLoc436_U0_ap_done;
wire    minMaxLoc436_U0_ap_continue;
wire    minMaxLoc436_U0_ap_idle;
wire    minMaxLoc436_U0_ap_ready;
wire    minMaxLoc436_U0_p_src_data_V_read;
wire   [31:0] minMaxLoc436_U0_ap_return;
wire    ap_channel_done_max_r_dc_channel;
wire    max_r_dc_channel_full_n;
wire    minMaxLoc437_U0_ap_start;
wire    minMaxLoc437_U0_ap_done;
wire    minMaxLoc437_U0_ap_continue;
wire    minMaxLoc437_U0_ap_idle;
wire    minMaxLoc437_U0_ap_ready;
wire    minMaxLoc437_U0_p_src_data_V_read;
wire   [31:0] minMaxLoc437_U0_ap_return;
wire    ap_channel_done_max_g_dc_channel;
wire    max_g_dc_channel_full_n;
wire    minMaxLoc_U0_ap_start;
wire    minMaxLoc_U0_ap_done;
wire    minMaxLoc_U0_ap_continue;
wire    minMaxLoc_U0_ap_idle;
wire    minMaxLoc_U0_ap_ready;
wire    minMaxLoc_U0_p_src_data_V_read;
wire   [31:0] minMaxLoc_U0_ap_return;
wire    ap_channel_done_max_b_dc_channel;
wire    max_b_dc_channel_full_n;
wire    p_prop_ret_max_b_dc_U0_ap_start;
wire    p_prop_ret_max_b_dc_U0_ap_done;
wire    p_prop_ret_max_b_dc_U0_ap_continue;
wire    p_prop_ret_max_b_dc_U0_ap_idle;
wire    p_prop_ret_max_b_dc_U0_ap_ready;
wire   [31:0] p_prop_ret_max_b_dc_U0_max_b_out_din;
wire    p_prop_ret_max_b_dc_U0_max_b_out_write;
wire    ap_sync_continue;
wire    p_prop_ret_max_g_dc_U0_ap_start;
wire    p_prop_ret_max_g_dc_U0_ap_done;
wire    p_prop_ret_max_g_dc_U0_ap_continue;
wire    p_prop_ret_max_g_dc_U0_ap_idle;
wire    p_prop_ret_max_g_dc_U0_ap_ready;
wire   [31:0] p_prop_ret_max_g_dc_U0_max_g_out_din;
wire    p_prop_ret_max_g_dc_U0_max_g_out_write;
wire    p_prop_ret_max_r_dc_U0_ap_start;
wire    p_prop_ret_max_r_dc_U0_ap_done;
wire    p_prop_ret_max_r_dc_U0_ap_continue;
wire    p_prop_ret_max_r_dc_U0_ap_idle;
wire    p_prop_ret_max_r_dc_U0_ap_ready;
wire   [31:0] p_prop_ret_max_r_dc_U0_max_r_out_din;
wire    p_prop_ret_max_r_dc_U0_max_r_out_write;
wire   [31:0] max_r_dc_channel_dout;
wire    max_r_dc_channel_empty_n;
wire   [31:0] max_g_dc_channel_dout;
wire    max_g_dc_channel_empty_n;
wire   [31:0] max_b_dc_channel_dout;
wire    max_b_dc_channel_empty_n;
wire    ap_sync_done;
wire    ap_sync_ready;
reg    ap_sync_reg_minMaxLoc436_U0_ap_ready;
wire    ap_sync_minMaxLoc436_U0_ap_ready;
reg   [1:0] minMaxLoc436_U0_ap_ready_count;
reg    ap_sync_reg_minMaxLoc437_U0_ap_ready;
wire    ap_sync_minMaxLoc437_U0_ap_ready;
reg   [1:0] minMaxLoc437_U0_ap_ready_count;
reg    ap_sync_reg_minMaxLoc_U0_ap_ready;
wire    ap_sync_minMaxLoc_U0_ap_ready;
reg   [1:0] minMaxLoc_U0_ap_ready_count;
wire    minMaxLoc436_U0_start_full_n;
wire    minMaxLoc436_U0_start_write;
wire    minMaxLoc437_U0_start_full_n;
wire    minMaxLoc437_U0_start_write;
wire    minMaxLoc_U0_start_full_n;
wire    minMaxLoc_U0_start_write;
wire    p_prop_ret_max_b_dc_U0_start_full_n;
wire    p_prop_ret_max_b_dc_U0_start_write;
wire    p_prop_ret_max_g_dc_U0_start_full_n;
wire    p_prop_ret_max_g_dc_U0_start_write;
wire    p_prop_ret_max_r_dc_U0_start_full_n;
wire    p_prop_ret_max_r_dc_U0_start_write;

// power-on initialization
initial begin
#0 ap_sync_reg_minMaxLoc436_U0_ap_ready = 1'b0;
#0 minMaxLoc436_U0_ap_ready_count = 2'd0;
#0 ap_sync_reg_minMaxLoc437_U0_ap_ready = 1'b0;
#0 minMaxLoc437_U0_ap_ready_count = 2'd0;
#0 ap_sync_reg_minMaxLoc_U0_ap_ready = 1'b0;
#0 minMaxLoc_U0_ap_ready_count = 2'd0;
end

minMaxLoc436 minMaxLoc436_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(minMaxLoc436_U0_ap_start),
    .ap_done(minMaxLoc436_U0_ap_done),
    .ap_continue(minMaxLoc436_U0_ap_continue),
    .ap_idle(minMaxLoc436_U0_ap_idle),
    .ap_ready(minMaxLoc436_U0_ap_ready),
    .p_src_data_V_dout(r_channel_data_V_dout),
    .p_src_data_V_empty_n(r_channel_data_V_empty_n),
    .p_src_data_V_read(minMaxLoc436_U0_p_src_data_V_read),
    .ap_return(minMaxLoc436_U0_ap_return)
);

minMaxLoc437 minMaxLoc437_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(minMaxLoc437_U0_ap_start),
    .ap_done(minMaxLoc437_U0_ap_done),
    .ap_continue(minMaxLoc437_U0_ap_continue),
    .ap_idle(minMaxLoc437_U0_ap_idle),
    .ap_ready(minMaxLoc437_U0_ap_ready),
    .p_src_data_V_dout(g_channel_data_V_dout),
    .p_src_data_V_empty_n(g_channel_data_V_empty_n),
    .p_src_data_V_read(minMaxLoc437_U0_p_src_data_V_read),
    .ap_return(minMaxLoc437_U0_ap_return)
);

minMaxLoc minMaxLoc_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(minMaxLoc_U0_ap_start),
    .ap_done(minMaxLoc_U0_ap_done),
    .ap_continue(minMaxLoc_U0_ap_continue),
    .ap_idle(minMaxLoc_U0_ap_idle),
    .ap_ready(minMaxLoc_U0_ap_ready),
    .p_src_data_V_dout(b_channel_data_V_dout),
    .p_src_data_V_empty_n(b_channel_data_V_empty_n),
    .p_src_data_V_read(minMaxLoc_U0_p_src_data_V_read),
    .ap_return(minMaxLoc_U0_ap_return)
);

p_prop_ret_max_b_dc_s p_prop_ret_max_b_dc_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(p_prop_ret_max_b_dc_U0_ap_start),
    .ap_done(p_prop_ret_max_b_dc_U0_ap_done),
    .ap_continue(p_prop_ret_max_b_dc_U0_ap_continue),
    .ap_idle(p_prop_ret_max_b_dc_U0_ap_idle),
    .ap_ready(p_prop_ret_max_b_dc_U0_ap_ready),
    .p_read(max_b_dc_channel_dout),
    .max_b_out_din(p_prop_ret_max_b_dc_U0_max_b_out_din),
    .max_b_out_full_n(max_b_out_full_n),
    .max_b_out_write(p_prop_ret_max_b_dc_U0_max_b_out_write)
);

p_prop_ret_max_g_dc_s p_prop_ret_max_g_dc_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(p_prop_ret_max_g_dc_U0_ap_start),
    .ap_done(p_prop_ret_max_g_dc_U0_ap_done),
    .ap_continue(p_prop_ret_max_g_dc_U0_ap_continue),
    .ap_idle(p_prop_ret_max_g_dc_U0_ap_idle),
    .ap_ready(p_prop_ret_max_g_dc_U0_ap_ready),
    .p_read(max_g_dc_channel_dout),
    .max_g_out_din(p_prop_ret_max_g_dc_U0_max_g_out_din),
    .max_g_out_full_n(max_g_out_full_n),
    .max_g_out_write(p_prop_ret_max_g_dc_U0_max_g_out_write)
);

p_prop_ret_max_r_dc_s p_prop_ret_max_r_dc_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(p_prop_ret_max_r_dc_U0_ap_start),
    .ap_done(p_prop_ret_max_r_dc_U0_ap_done),
    .ap_continue(p_prop_ret_max_r_dc_U0_ap_continue),
    .ap_idle(p_prop_ret_max_r_dc_U0_ap_idle),
    .ap_ready(p_prop_ret_max_r_dc_U0_ap_ready),
    .p_read(max_r_dc_channel_dout),
    .max_r_out_din(p_prop_ret_max_r_dc_U0_max_r_out_din),
    .max_r_out_full_n(max_r_out_full_n),
    .max_r_out_write(p_prop_ret_max_r_dc_U0_max_r_out_write)
);

fifo_w32_d2_A max_r_dc_channel_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(minMaxLoc436_U0_ap_return),
    .if_full_n(max_r_dc_channel_full_n),
    .if_write(minMaxLoc436_U0_ap_done),
    .if_dout(max_r_dc_channel_dout),
    .if_empty_n(max_r_dc_channel_empty_n),
    .if_read(p_prop_ret_max_r_dc_U0_ap_ready)
);

fifo_w32_d2_A max_g_dc_channel_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(minMaxLoc437_U0_ap_return),
    .if_full_n(max_g_dc_channel_full_n),
    .if_write(minMaxLoc437_U0_ap_done),
    .if_dout(max_g_dc_channel_dout),
    .if_empty_n(max_g_dc_channel_empty_n),
    .if_read(p_prop_ret_max_g_dc_U0_ap_ready)
);

fifo_w32_d2_A max_b_dc_channel_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(minMaxLoc_U0_ap_return),
    .if_full_n(max_b_dc_channel_full_n),
    .if_write(minMaxLoc_U0_ap_done),
    .if_dout(max_b_dc_channel_dout),
    .if_empty_n(max_b_dc_channel_empty_n),
    .if_read(p_prop_ret_max_b_dc_U0_ap_ready)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_minMaxLoc436_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_minMaxLoc436_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_minMaxLoc436_U0_ap_ready <= ap_sync_minMaxLoc436_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_minMaxLoc437_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_minMaxLoc437_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_minMaxLoc437_U0_ap_ready <= ap_sync_minMaxLoc437_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_minMaxLoc_U0_ap_ready <= 1'b0;
    end else begin
        if (((ap_sync_ready & ap_start) == 1'b1)) begin
            ap_sync_reg_minMaxLoc_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_minMaxLoc_U0_ap_ready <= ap_sync_minMaxLoc_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((minMaxLoc436_U0_ap_ready == 1'b0) & (ap_sync_ready == 1'b1))) begin
        minMaxLoc436_U0_ap_ready_count <= (minMaxLoc436_U0_ap_ready_count - 2'd1);
    end else if (((ap_sync_ready == 1'b0) & (minMaxLoc436_U0_ap_ready == 1'b1))) begin
        minMaxLoc436_U0_ap_ready_count <= (minMaxLoc436_U0_ap_ready_count + 2'd1);
    end
end

always @ (posedge ap_clk) begin
    if (((minMaxLoc437_U0_ap_ready == 1'b0) & (ap_sync_ready == 1'b1))) begin
        minMaxLoc437_U0_ap_ready_count <= (minMaxLoc437_U0_ap_ready_count - 2'd1);
    end else if (((ap_sync_ready == 1'b0) & (minMaxLoc437_U0_ap_ready == 1'b1))) begin
        minMaxLoc437_U0_ap_ready_count <= (minMaxLoc437_U0_ap_ready_count + 2'd1);
    end
end

always @ (posedge ap_clk) begin
    if (((minMaxLoc_U0_ap_ready == 1'b0) & (ap_sync_ready == 1'b1))) begin
        minMaxLoc_U0_ap_ready_count <= (minMaxLoc_U0_ap_ready_count - 2'd1);
    end else if (((ap_sync_ready == 1'b0) & (minMaxLoc_U0_ap_ready == 1'b1))) begin
        minMaxLoc_U0_ap_ready_count <= (minMaxLoc_U0_ap_ready_count + 2'd1);
    end
end

assign ap_channel_done_max_b_dc_channel = minMaxLoc_U0_ap_done;

assign ap_channel_done_max_g_dc_channel = minMaxLoc437_U0_ap_done;

assign ap_channel_done_max_r_dc_channel = minMaxLoc436_U0_ap_done;

assign ap_done = ap_sync_done;

assign ap_idle = (p_prop_ret_max_r_dc_U0_ap_idle & p_prop_ret_max_g_dc_U0_ap_idle & p_prop_ret_max_b_dc_U0_ap_idle & minMaxLoc_U0_ap_idle & minMaxLoc437_U0_ap_idle & minMaxLoc436_U0_ap_idle & (max_b_dc_channel_empty_n ^ 1'b1) & (max_g_dc_channel_empty_n ^ 1'b1) & (max_r_dc_channel_empty_n ^ 1'b1));

assign ap_ready = ap_sync_ready;

assign ap_sync_continue = (ap_sync_done & ap_continue);

assign ap_sync_done = (p_prop_ret_max_r_dc_U0_ap_done & p_prop_ret_max_g_dc_U0_ap_done & p_prop_ret_max_b_dc_U0_ap_done);

assign ap_sync_minMaxLoc436_U0_ap_ready = (minMaxLoc436_U0_ap_ready | ap_sync_reg_minMaxLoc436_U0_ap_ready);

assign ap_sync_minMaxLoc437_U0_ap_ready = (minMaxLoc437_U0_ap_ready | ap_sync_reg_minMaxLoc437_U0_ap_ready);

assign ap_sync_minMaxLoc_U0_ap_ready = (minMaxLoc_U0_ap_ready | ap_sync_reg_minMaxLoc_U0_ap_ready);

assign ap_sync_ready = (ap_sync_minMaxLoc_U0_ap_ready & ap_sync_minMaxLoc437_U0_ap_ready & ap_sync_minMaxLoc436_U0_ap_ready);

assign b_channel_data_V_read = minMaxLoc_U0_p_src_data_V_read;

assign g_channel_data_V_read = minMaxLoc437_U0_p_src_data_V_read;

assign max_b_out_din = p_prop_ret_max_b_dc_U0_max_b_out_din;

assign max_b_out_write = p_prop_ret_max_b_dc_U0_max_b_out_write;

assign max_g_out_din = p_prop_ret_max_g_dc_U0_max_g_out_din;

assign max_g_out_write = p_prop_ret_max_g_dc_U0_max_g_out_write;

assign max_r_out_din = p_prop_ret_max_r_dc_U0_max_r_out_din;

assign max_r_out_write = p_prop_ret_max_r_dc_U0_max_r_out_write;

assign minMaxLoc436_U0_ap_continue = max_r_dc_channel_full_n;

assign minMaxLoc436_U0_ap_start = ((ap_sync_reg_minMaxLoc436_U0_ap_ready ^ 1'b1) & ap_start);

assign minMaxLoc436_U0_start_full_n = 1'b1;

assign minMaxLoc436_U0_start_write = 1'b0;

assign minMaxLoc437_U0_ap_continue = max_g_dc_channel_full_n;

assign minMaxLoc437_U0_ap_start = ((ap_sync_reg_minMaxLoc437_U0_ap_ready ^ 1'b1) & ap_start);

assign minMaxLoc437_U0_start_full_n = 1'b1;

assign minMaxLoc437_U0_start_write = 1'b0;

assign minMaxLoc_U0_ap_continue = max_b_dc_channel_full_n;

assign minMaxLoc_U0_ap_start = ((ap_sync_reg_minMaxLoc_U0_ap_ready ^ 1'b1) & ap_start);

assign minMaxLoc_U0_start_full_n = 1'b1;

assign minMaxLoc_U0_start_write = 1'b0;

assign p_prop_ret_max_b_dc_U0_ap_continue = ap_sync_continue;

assign p_prop_ret_max_b_dc_U0_ap_start = max_b_dc_channel_empty_n;

assign p_prop_ret_max_b_dc_U0_start_full_n = 1'b1;

assign p_prop_ret_max_b_dc_U0_start_write = 1'b0;

assign p_prop_ret_max_g_dc_U0_ap_continue = ap_sync_continue;

assign p_prop_ret_max_g_dc_U0_ap_start = max_g_dc_channel_empty_n;

assign p_prop_ret_max_g_dc_U0_start_full_n = 1'b1;

assign p_prop_ret_max_g_dc_U0_start_write = 1'b0;

assign p_prop_ret_max_r_dc_U0_ap_continue = ap_sync_continue;

assign p_prop_ret_max_r_dc_U0_ap_start = max_r_dc_channel_empty_n;

assign p_prop_ret_max_r_dc_U0_start_full_n = 1'b1;

assign p_prop_ret_max_r_dc_U0_start_write = 1'b0;

assign r_channel_data_V_read = minMaxLoc436_U0_p_src_data_V_read;

endmodule //get_max_from_channel
