// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module extr_half_2_cent (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        line_bases_active_address0,
        line_bases_active_ce0,
        line_bases_active_q0,
        eroded_data_V_dout,
        eroded_data_V_empty_n,
        eroded_data_V_read,
        centroids_address0,
        centroids_ce0,
        centroids_we0,
        centroids_d0,
        centroids_q0
);

parameter    ap_ST_fsm_state1 = 84'd1;
parameter    ap_ST_fsm_state2 = 84'd2;
parameter    ap_ST_fsm_state3 = 84'd4;
parameter    ap_ST_fsm_state4 = 84'd8;
parameter    ap_ST_fsm_state5 = 84'd16;
parameter    ap_ST_fsm_state6 = 84'd32;
parameter    ap_ST_fsm_state7 = 84'd64;
parameter    ap_ST_fsm_state8 = 84'd128;
parameter    ap_ST_fsm_state9 = 84'd256;
parameter    ap_ST_fsm_state10 = 84'd512;
parameter    ap_ST_fsm_state11 = 84'd1024;
parameter    ap_ST_fsm_state12 = 84'd2048;
parameter    ap_ST_fsm_state13 = 84'd4096;
parameter    ap_ST_fsm_state14 = 84'd8192;
parameter    ap_ST_fsm_state15 = 84'd16384;
parameter    ap_ST_fsm_state16 = 84'd32768;
parameter    ap_ST_fsm_state17 = 84'd65536;
parameter    ap_ST_fsm_state18 = 84'd131072;
parameter    ap_ST_fsm_state19 = 84'd262144;
parameter    ap_ST_fsm_state20 = 84'd524288;
parameter    ap_ST_fsm_state21 = 84'd1048576;
parameter    ap_ST_fsm_state22 = 84'd2097152;
parameter    ap_ST_fsm_state23 = 84'd4194304;
parameter    ap_ST_fsm_state24 = 84'd8388608;
parameter    ap_ST_fsm_state25 = 84'd16777216;
parameter    ap_ST_fsm_state26 = 84'd33554432;
parameter    ap_ST_fsm_state27 = 84'd67108864;
parameter    ap_ST_fsm_state28 = 84'd134217728;
parameter    ap_ST_fsm_state29 = 84'd268435456;
parameter    ap_ST_fsm_state30 = 84'd536870912;
parameter    ap_ST_fsm_state31 = 84'd1073741824;
parameter    ap_ST_fsm_state32 = 84'd2147483648;
parameter    ap_ST_fsm_state33 = 84'd4294967296;
parameter    ap_ST_fsm_state34 = 84'd8589934592;
parameter    ap_ST_fsm_state35 = 84'd17179869184;
parameter    ap_ST_fsm_state36 = 84'd34359738368;
parameter    ap_ST_fsm_state37 = 84'd68719476736;
parameter    ap_ST_fsm_state38 = 84'd137438953472;
parameter    ap_ST_fsm_state39 = 84'd274877906944;
parameter    ap_ST_fsm_state40 = 84'd549755813888;
parameter    ap_ST_fsm_state41 = 84'd1099511627776;
parameter    ap_ST_fsm_state42 = 84'd2199023255552;
parameter    ap_ST_fsm_state43 = 84'd4398046511104;
parameter    ap_ST_fsm_state44 = 84'd8796093022208;
parameter    ap_ST_fsm_state45 = 84'd17592186044416;
parameter    ap_ST_fsm_state46 = 84'd35184372088832;
parameter    ap_ST_fsm_state47 = 84'd70368744177664;
parameter    ap_ST_fsm_state48 = 84'd140737488355328;
parameter    ap_ST_fsm_state49 = 84'd281474976710656;
parameter    ap_ST_fsm_state50 = 84'd562949953421312;
parameter    ap_ST_fsm_state51 = 84'd1125899906842624;
parameter    ap_ST_fsm_state52 = 84'd2251799813685248;
parameter    ap_ST_fsm_state53 = 84'd4503599627370496;
parameter    ap_ST_fsm_state54 = 84'd9007199254740992;
parameter    ap_ST_fsm_state55 = 84'd18014398509481984;
parameter    ap_ST_fsm_state56 = 84'd36028797018963968;
parameter    ap_ST_fsm_state57 = 84'd72057594037927936;
parameter    ap_ST_fsm_state58 = 84'd144115188075855872;
parameter    ap_ST_fsm_state59 = 84'd288230376151711744;
parameter    ap_ST_fsm_state60 = 84'd576460752303423488;
parameter    ap_ST_fsm_state61 = 84'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 84'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 84'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 84'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 84'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 84'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 84'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 84'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 84'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 84'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 84'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 84'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 84'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 84'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 84'd18889465931478580854784;
parameter    ap_ST_fsm_state76 = 84'd37778931862957161709568;
parameter    ap_ST_fsm_state77 = 84'd75557863725914323419136;
parameter    ap_ST_fsm_state78 = 84'd151115727451828646838272;
parameter    ap_ST_fsm_state79 = 84'd302231454903657293676544;
parameter    ap_ST_fsm_state80 = 84'd604462909807314587353088;
parameter    ap_ST_fsm_state81 = 84'd1208925819614629174706176;
parameter    ap_ST_fsm_state82 = 84'd2417851639229258349412352;
parameter    ap_ST_fsm_state83 = 84'd4835703278458516698824704;
parameter    ap_ST_fsm_state84 = 84'd9671406556917033397649408;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [2:0] line_bases_active_address0;
output   line_bases_active_ce0;
input  [16:0] line_bases_active_q0;
input  [7:0] eroded_data_V_dout;
input   eroded_data_V_empty_n;
output   eroded_data_V_read;
output  [6:0] centroids_address0;
output   centroids_ce0;
output   centroids_we0;
output  [47:0] centroids_d0;
input  [47:0] centroids_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg line_bases_active_ce0;
reg eroded_data_V_read;
reg[6:0] centroids_address0;
reg centroids_ce0;
reg centroids_we0;

(* fsm_encoding = "none" *) reg   [83:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [3:0] segments648_address0;
reg    segments648_ce0;
wire   [7:0] segments648_q0;
reg   [3:0] segments648_address1;
reg    segments648_ce1;
wire   [7:0] segments648_q1;
wire   [3:0] segments648_address2;
reg    segments648_ce2;
wire   [7:0] segments648_q2;
wire   [3:0] segments648_address3;
reg    segments648_ce3;
wire   [7:0] segments648_q3;
wire   [3:0] segments648_address4;
reg    segments648_ce4;
wire   [7:0] segments648_q4;
reg   [1:0] last_centroids_address0;
reg    last_centroids_ce0;
reg    last_centroids_we0;
wire   [47:0] last_centroids_q0;
reg   [7:0] reg_422;
wire    ap_CS_fsm_state3;
wire    ap_CS_fsm_state4;
wire   [3:0] add_ln303_fu_428_p2;
reg   [3:0] add_ln303_reg_1150;
wire    ap_CS_fsm_state2;
wire   [63:0] zext_ln303_fu_434_p1;
reg   [63:0] zext_ln303_reg_1155;
wire   [63:0] zext_ln303_1_fu_439_p1;
reg   [63:0] zext_ln303_1_reg_1165;
wire   [7:0] sub_ln327_fu_470_p2;
reg   [7:0] sub_ln327_reg_1176;
wire   [5:0] add_ln301_fu_482_p2;
reg   [5:0] add_ln301_reg_1184;
wire   [0:0] icmp_ln307_fu_500_p2;
reg   [0:0] icmp_ln307_reg_1189;
wire   [0:0] icmp_ln301_fu_476_p2;
wire   [2:0] select_ln303_fu_506_p3;
reg   [2:0] select_ln303_reg_1195;
wire   [3:0] select_ln303_2_fu_531_p3;
reg   [3:0] select_ln303_2_reg_1212;
wire   [6:0] select_ln303_3_fu_570_p3;
reg   [6:0] select_ln303_3_reg_1222;
wire   [3:0] select_ln303_4_fu_598_p3;
reg   [3:0] select_ln303_4_reg_1227;
wire   [12:0] select_ln301_fu_621_p3;
reg   [12:0] select_ln301_reg_1243;
reg   [7:0] segments648_load_2_reg_1253;
wire   [31:0] zext_ln303_3_fu_640_p1;
reg   [31:0] zext_ln303_3_reg_1258;
wire   [31:0] zext_ln303_4_fu_643_p1;
reg   [31:0] zext_ln303_4_reg_1264;
wire   [15:0] zext_ln303_5_fu_647_p1;
reg   [15:0] zext_ln303_5_reg_1269;
wire   [9:0] zext_ln303_8_fu_650_p1;
reg   [9:0] zext_ln303_8_reg_1274;
wire   [9:0] zext_ln303_9_fu_654_p1;
reg   [9:0] zext_ln303_9_reg_1279;
wire   [7:0] select_ln303_7_fu_664_p3;
reg   [7:0] select_ln303_7_reg_1284;
wire   [3:0] select_ln301_1_fu_670_p3;
reg   [3:0] select_ln301_1_reg_1289;
wire   [0:0] tmp_53_fu_678_p3;
reg   [0:0] tmp_53_reg_1295;
wire   [3:0] i_fu_692_p2;
reg   [3:0] i_reg_1302;
wire    ap_CS_fsm_state6;
wire   [0:0] icmp_ln187_fu_708_p2;
reg   [0:0] icmp_ln187_reg_1307;
wire   [0:0] icmp_ln186_fu_686_p2;
wire   [31:0] zext_ln188_4_fu_805_p1;
wire    ap_CS_fsm_state7;
wire   [31:0] sum_x_2_fu_843_p3;
reg   [31:0] sum_x_2_reg_1336;
wire   [31:0] sum_y_2_fu_850_p3;
reg   [31:0] sum_y_2_reg_1341;
wire   [31:0] sum_xy_2_fu_857_p3;
reg   [31:0] sum_xy_2_reg_1346;
wire   [31:0] sum_xx_2_fu_864_p3;
wire    ap_CS_fsm_state10;
reg   [29:0] i_op_assign_reg_1356;
wire    ap_CS_fsm_state11;
wire   [31:0] p_Val2_34_fu_961_p2;
reg   [31:0] p_Val2_34_reg_1361;
wire    ap_CS_fsm_state77;
wire   [31:0] y_temp_fu_1032_p3;
reg   [31:0] y_temp_reg_1371;
wire    ap_CS_fsm_state80;
wire   [15:0] select_ln320_fu_1072_p3;
reg   [15:0] select_ln320_reg_1376;
wire   [15:0] select_ln320_1_fu_1086_p3;
reg   [15:0] select_ln320_1_reg_1383;
reg   [47:0] c_load_reg_1389;
wire    ap_CS_fsm_state81;
wire    grp_extract_micro_roi_fu_395_ap_ready;
wire    grp_extract_micro_roi_fu_395_ap_done;
wire   [15:0] sub_ln327_1_fu_1095_p2;
reg   [15:0] sub_ln327_1_reg_1394;
wire    ap_CS_fsm_state82;
wire   [2:0] line_index_fu_1123_p2;
wire    ap_CS_fsm_state84;
reg   [9:0] micro_roi_3_data_V_address0;
reg    micro_roi_3_data_V_ce0;
reg    micro_roi_3_data_V_we0;
wire   [7:0] micro_roi_3_data_V_q0;
wire   [9:0] grp_get_centroid_sh_fu_382_micro_roi_data_V_address0;
wire    grp_get_centroid_sh_fu_382_micro_roi_data_V_ce0;
wire   [7:0] grp_get_centroid_sh_fu_382_micro_roi_data_V_d0;
wire    grp_get_centroid_sh_fu_382_micro_roi_data_V_we0;
wire   [9:0] grp_get_centroid_sh_fu_382_micro_roi_data_V_address1;
wire    grp_get_centroid_sh_fu_382_micro_roi_data_V_ce1;
wire   [7:0] grp_get_centroid_sh_fu_382_micro_roi_data_V_d1;
wire    grp_get_centroid_sh_fu_382_micro_roi_data_V_we1;
wire   [47:0] grp_get_centroid_sh_fu_382_c;
wire    grp_get_centroid_sh_fu_382_ap_start;
wire    grp_get_centroid_sh_fu_382_c_ap_vld;
wire    grp_get_centroid_sh_fu_382_ap_done;
wire    grp_get_centroid_sh_fu_382_ap_ready;
wire    grp_get_centroid_sh_fu_382_ap_idle;
reg    grp_get_centroid_sh_fu_382_ap_continue;
wire    grp_extract_micro_roi_fu_395_ap_start;
wire    grp_extract_micro_roi_fu_395_ap_idle;
wire    grp_extract_micro_roi_fu_395_img_in_mr_data_V_read;
wire   [9:0] grp_extract_micro_roi_fu_395_micro_roi_data_V_address0;
wire    grp_extract_micro_roi_fu_395_micro_roi_data_V_ce0;
wire    grp_extract_micro_roi_fu_395_micro_roi_data_V_we0;
wire   [7:0] grp_extract_micro_roi_fu_395_micro_roi_data_V_d0;
wire   [6:0] grp_get_last_centroids_fu_406_centroids_address0;
wire    grp_get_last_centroids_fu_406_centroids_ce0;
wire   [47:0] grp_get_last_centroids_fu_406_centroids_d0;
wire    grp_get_last_centroids_fu_406_centroids_we0;
wire   [6:0] grp_get_last_centroids_fu_406_centroids_address1;
wire    grp_get_last_centroids_fu_406_centroids_ce1;
wire   [47:0] grp_get_last_centroids_fu_406_centroids_d1;
wire    grp_get_last_centroids_fu_406_centroids_we1;
wire   [1:0] grp_get_last_centroids_fu_406_last_c_2_address0;
wire    grp_get_last_centroids_fu_406_last_c_2_ce0;
wire   [47:0] grp_get_last_centroids_fu_406_last_c_2_d0;
wire    grp_get_last_centroids_fu_406_last_c_2_we0;
wire   [1:0] grp_get_last_centroids_fu_406_last_c_2_address1;
wire    grp_get_last_centroids_fu_406_last_c_2_ce1;
wire   [47:0] grp_get_last_centroids_fu_406_last_c_2_d1;
wire    grp_get_last_centroids_fu_406_last_c_2_we1;
wire    grp_get_last_centroids_fu_406_ap_start;
wire    grp_get_last_centroids_fu_406_ap_done;
wire    grp_get_last_centroids_fu_406_ap_ready;
wire    grp_get_last_centroids_fu_406_ap_idle;
reg    grp_get_last_centroids_fu_406_ap_continue;
reg   [3:0] seg_index_0_reg_266;
reg   [5:0] indvar_flatten_reg_278;
reg   [12:0] p_Val2_s_reg_289;
reg   [3:0] last_seg_index_0_reg_300;
reg   [2:0] line_index_0_reg_312;
reg   [31:0] sum_x_0_i_reg_323;
wire    ap_CS_fsm_state5;
wire    ap_sync_grp_get_last_centroids_fu_406_ap_ready;
wire    ap_sync_grp_get_last_centroids_fu_406_ap_done;
reg    ap_block_state5_on_subcall_done;
reg   [31:0] sum_y_0_i_reg_335;
reg   [31:0] sum_xy_0_i_reg_347;
reg   [31:0] sum_xx_0_i_reg_359;
reg   [3:0] i_0_i_reg_371;
reg    grp_get_centroid_sh_fu_382_ap_start_reg;
wire    ap_CS_fsm_state83;
wire    ap_sync_grp_get_centroid_sh_fu_382_ap_ready;
wire    ap_sync_grp_get_centroid_sh_fu_382_ap_done;
reg    ap_block_state83_on_subcall_done;
reg    ap_sync_reg_grp_get_centroid_sh_fu_382_ap_ready;
reg    ap_sync_reg_grp_get_centroid_sh_fu_382_ap_done;
reg   [47:0] c_fu_142;
reg    grp_extract_micro_roi_fu_395_ap_start_reg;
reg    grp_get_last_centroids_fu_406_ap_start_reg;
reg    ap_sync_reg_grp_get_last_centroids_fu_406_ap_ready;
reg    ap_sync_reg_grp_get_last_centroids_fu_406_ap_done;
wire   [63:0] zext_ln303_6_fu_521_p1;
wire   [63:0] zext_ln303_2_fu_526_p1;
wire   [63:0] zext_ln303_7_fu_539_p1;
wire   [63:0] select_ln303_5_fu_606_p3;
wire   [63:0] select_ln303_6_fu_614_p3;
wire   [63:0] zext_ln309_fu_629_p1;
wire   [63:0] zext_ln188_fu_714_p1;
wire   [63:0] zext_ln328_1_fu_1118_p1;
wire   [4:0] shl_ln306_1_fu_452_p3;
wire   [6:0] shl_ln_fu_444_p3;
wire   [6:0] zext_ln306_fu_460_p1;
wire   [3:0] select_ln303_1_fu_514_p3;
wire   [3:0] seg_index_fu_494_p2;
wire   [4:0] shl_ln306_1_mid1_fu_552_p3;
wire   [6:0] shl_ln306_mid1_fu_544_p3;
wire   [6:0] zext_ln306_1_fu_560_p1;
wire   [6:0] sub_ln306_1_fu_564_p2;
wire   [6:0] sub_ln306_fu_464_p2;
wire   [12:0] add_ln703_fu_488_p2;
wire   [3:0] tmp_fu_578_p4;
wire   [3:0] tmp_3_fu_588_p4;
wire   [7:0] sub_ln327_2_fu_658_p2;
wire   [3:0] last_seg_index_fu_634_p2;
wire   [1:0] tmp_57_fu_698_p4;
wire   [33:0] shl_ln8_fu_719_p3;
wire   [31:0] mul_ln731_fu_739_p0;
wire   [31:0] mul_ln731_fu_739_p1;
wire   [47:0] zext_ln731_13_fu_731_p1;
wire   [33:0] shl_ln731_7_fu_745_p3;
wire   [31:0] mul_ln731_5_fu_757_p0;
wire   [31:0] mul_ln731_5_fu_757_p1;
wire   [47:0] zext_ln731_14_fu_735_p1;
wire   [47:0] mul_ln731_fu_739_p2;
wire   [47:0] zext_ln731_15_fu_753_p1;
wire   [47:0] mul_ln731_5_fu_757_p2;
wire   [47:0] sub_ln731_5_fu_769_p2;
wire   [47:0] sub_ln731_fu_763_p2;
wire  signed [55:0] shl_ln731_9_fu_775_p3;
wire   [63:0] grp_fu_795_p0;
wire   [15:0] trunc_ln188_fu_801_p1;
wire  signed [31:0] centroids_y_1_load_n_fu_815_p4;
wire   [15:0] mul_ln190_fu_831_p0;
wire   [31:0] mul_ln190_fu_831_p2;
wire   [31:0] sum_x_fu_809_p2;
wire   [31:0] sum_y_fu_825_p2;
wire   [31:0] sum_xy_fu_837_p2;
wire   [31:0] grp_fu_1128_p3;
wire   [23:0] grp_fu_795_p2;
wire   [29:0] lshr_ln_fu_884_p4;
wire  signed [23:0] m_V_fu_880_p1;
wire   [29:0] r_V_fu_905_p0;
wire  signed [23:0] r_V_fu_905_p1;
wire   [53:0] r_V_fu_905_p2;
wire   [7:0] trunc_ln851_fu_919_p1;
wire   [31:0] trunc_ln_fu_929_p4;
wire   [0:0] icmp_ln851_8_fu_923_p2;
wire   [31:0] add_ln851_fu_939_p2;
wire   [0:0] p_Result_s_fu_911_p3;
wire   [31:0] select_ln851_fu_945_p3;
wire   [31:0] zext_ln196_fu_894_p1;
wire   [31:0] select_ln850_fu_953_p3;
wire  signed [31:0] grp_fu_1137_p2;
wire   [39:0] rhs_V_fu_974_p3;
wire  signed [40:0] sext_ln728_fu_981_p1;
wire  signed [40:0] lhs_V_fu_971_p1;
wire   [40:0] ret_V_fu_985_p2;
wire   [7:0] trunc_ln851_10_fu_999_p1;
wire   [31:0] tmp_s_fu_1008_p4;
wire   [0:0] icmp_ln851_fu_1002_p2;
wire   [31:0] add_ln851_7_fu_1018_p2;
wire   [0:0] p_Result_14_fu_991_p3;
wire   [31:0] select_ln851_7_fu_1024_p3;
wire   [31:0] y_left_fu_1044_p2;
wire   [31:0] y_right_fu_1049_p2;
wire   [0:0] tmp_56_fu_1054_p3;
wire   [15:0] trunc_ln320_fu_1068_p1;
wire   [15:0] trunc_ln317_fu_1040_p1;
wire   [0:0] icmp_ln319_fu_1062_p2;
wire   [15:0] add_ln320_fu_1081_p2;
wire   [3:0] zext_ln328_fu_1100_p1;
wire   [3:0] add_ln328_1_fu_1103_p2;
wire  signed [6:0] sext_ln328_fu_1109_p1;
wire   [6:0] add_ln328_fu_1113_p2;
wire   [15:0] grp_fu_1128_p0;
wire   [15:0] grp_fu_1128_p1;
wire    ap_CS_fsm_state9;
wire   [7:0] grp_fu_1137_p1;
reg    grp_fu_795_ap_start;
wire    grp_fu_795_ap_done;
reg   [83:0] ap_NS_fsm;
wire   [47:0] mul_ln731_fu_739_p00;
wire   [53:0] r_V_fu_905_p00;

// power-on initialization
initial begin
#0 ap_CS_fsm = 84'd1;
#0 grp_get_centroid_sh_fu_382_ap_start_reg = 1'b0;
#0 ap_sync_reg_grp_get_centroid_sh_fu_382_ap_ready = 1'b0;
#0 ap_sync_reg_grp_get_centroid_sh_fu_382_ap_done = 1'b0;
#0 grp_extract_micro_roi_fu_395_ap_start_reg = 1'b0;
#0 grp_get_last_centroids_fu_406_ap_start_reg = 1'b0;
#0 ap_sync_reg_grp_get_last_centroids_fu_406_ap_ready = 1'b0;
#0 ap_sync_reg_grp_get_last_centroids_fu_406_ap_done = 1'b0;
end

extract_third_andKfY #(
    .DataWidth( 8 ),
    .AddressRange( 13 ),
    .AddressWidth( 4 ))
segments648_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(segments648_address0),
    .ce0(segments648_ce0),
    .q0(segments648_q0),
    .address1(segments648_address1),
    .ce1(segments648_ce1),
    .q1(segments648_q1),
    .address2(segments648_address2),
    .ce2(segments648_ce2),
    .q2(segments648_q2),
    .address3(segments648_address3),
    .ce3(segments648_ce3),
    .q3(segments648_q3),
    .address4(segments648_address4),
    .ce4(segments648_ce4),
    .q4(segments648_q4)
);

extract_third_andLf8 #(
    .DataWidth( 48 ),
    .AddressRange( 4 ),
    .AddressWidth( 2 ))
last_centroids_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(last_centroids_address0),
    .ce0(last_centroids_ce0),
    .we0(last_centroids_we0),
    .d0(grp_get_last_centroids_fu_406_last_c_2_d0),
    .q0(last_centroids_q0)
);

extr_half_2_cent_VhK #(
    .DataWidth( 8 ),
    .AddressRange( 736 ),
    .AddressWidth( 10 ))
micro_roi_3_data_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(micro_roi_3_data_V_address0),
    .ce0(micro_roi_3_data_V_ce0),
    .we0(micro_roi_3_data_V_we0),
    .d0(grp_extract_micro_roi_fu_395_micro_roi_data_V_d0),
    .q0(micro_roi_3_data_V_q0)
);

get_centroid_sh grp_get_centroid_sh_fu_382(
    .micro_roi_data_V_address0(grp_get_centroid_sh_fu_382_micro_roi_data_V_address0),
    .micro_roi_data_V_ce0(grp_get_centroid_sh_fu_382_micro_roi_data_V_ce0),
    .micro_roi_data_V_d0(grp_get_centroid_sh_fu_382_micro_roi_data_V_d0),
    .micro_roi_data_V_q0(micro_roi_3_data_V_q0),
    .micro_roi_data_V_we0(grp_get_centroid_sh_fu_382_micro_roi_data_V_we0),
    .micro_roi_data_V_address1(grp_get_centroid_sh_fu_382_micro_roi_data_V_address1),
    .micro_roi_data_V_ce1(grp_get_centroid_sh_fu_382_micro_roi_data_V_ce1),
    .micro_roi_data_V_d1(grp_get_centroid_sh_fu_382_micro_roi_data_V_d1),
    .micro_roi_data_V_q1(8'd0),
    .micro_roi_data_V_we1(grp_get_centroid_sh_fu_382_micro_roi_data_V_we1),
    .h_offset(select_ln320_reg_1376),
    .v_offset_read(segments648_load_2_reg_1253),
    .v_limit(select_ln303_7_reg_1284),
    .h_limit(sub_ln327_1_reg_1394),
    .possible_c_x(reg_422),
    .possible_c_y(y_temp_reg_1371),
    .c(grp_get_centroid_sh_fu_382_c),
    .c_read(c_load_reg_1389),
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .v_limit_ap_vld(1'b1),
    .h_limit_ap_vld(1'b1),
    .h_offset_ap_vld(1'b1),
    .v_offset_read_ap_vld(1'b1),
    .possible_c_x_ap_vld(1'b1),
    .possible_c_y_ap_vld(1'b1),
    .c_read_ap_vld(1'b1),
    .ap_start(grp_get_centroid_sh_fu_382_ap_start),
    .c_ap_vld(grp_get_centroid_sh_fu_382_c_ap_vld),
    .ap_done(grp_get_centroid_sh_fu_382_ap_done),
    .ap_ready(grp_get_centroid_sh_fu_382_ap_ready),
    .ap_idle(grp_get_centroid_sh_fu_382_ap_idle),
    .ap_continue(grp_get_centroid_sh_fu_382_ap_continue)
);

extract_micro_roi grp_extract_micro_roi_fu_395(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_extract_micro_roi_fu_395_ap_start),
    .ap_done(grp_extract_micro_roi_fu_395_ap_done),
    .ap_idle(grp_extract_micro_roi_fu_395_ap_idle),
    .ap_ready(grp_extract_micro_roi_fu_395_ap_ready),
    .img_in_mr_data_V_dout(eroded_data_V_dout),
    .img_in_mr_data_V_empty_n(eroded_data_V_empty_n),
    .img_in_mr_data_V_read(grp_extract_micro_roi_fu_395_img_in_mr_data_V_read),
    .x_top(zext_ln303_8_reg_1274),
    .x_bottom(zext_ln303_9_reg_1279),
    .y_left(select_ln320_reg_1376),
    .y_right(select_ln320_1_reg_1383),
    .micro_roi_data_V_address0(grp_extract_micro_roi_fu_395_micro_roi_data_V_address0),
    .micro_roi_data_V_ce0(grp_extract_micro_roi_fu_395_micro_roi_data_V_ce0),
    .micro_roi_data_V_we0(grp_extract_micro_roi_fu_395_micro_roi_data_V_we0),
    .micro_roi_data_V_d0(grp_extract_micro_roi_fu_395_micro_roi_data_V_d0)
);

get_last_centroids grp_get_last_centroids_fu_406(
    .centroids_address0(grp_get_last_centroids_fu_406_centroids_address0),
    .centroids_ce0(grp_get_last_centroids_fu_406_centroids_ce0),
    .centroids_d0(grp_get_last_centroids_fu_406_centroids_d0),
    .centroids_q0(centroids_q0),
    .centroids_we0(grp_get_last_centroids_fu_406_centroids_we0),
    .centroids_address1(grp_get_last_centroids_fu_406_centroids_address1),
    .centroids_ce1(grp_get_last_centroids_fu_406_centroids_ce1),
    .centroids_d1(grp_get_last_centroids_fu_406_centroids_d1),
    .centroids_q1(48'd0),
    .centroids_we1(grp_get_last_centroids_fu_406_centroids_we1),
    .selected_line(select_ln303_reg_1195),
    .last_c_2_address0(grp_get_last_centroids_fu_406_last_c_2_address0),
    .last_c_2_ce0(grp_get_last_centroids_fu_406_last_c_2_ce0),
    .last_c_2_d0(grp_get_last_centroids_fu_406_last_c_2_d0),
    .last_c_2_q0(48'd0),
    .last_c_2_we0(grp_get_last_centroids_fu_406_last_c_2_we0),
    .last_c_2_address1(grp_get_last_centroids_fu_406_last_c_2_address1),
    .last_c_2_ce1(grp_get_last_centroids_fu_406_last_c_2_ce1),
    .last_c_2_d1(grp_get_last_centroids_fu_406_last_c_2_d1),
    .last_c_2_q1(48'd0),
    .last_c_2_we1(grp_get_last_centroids_fu_406_last_c_2_we1),
    .seg_index_start(select_ln301_1_reg_1289),
    .size(4'd4),
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .size_ap_vld(1'b1),
    .seg_index_start_ap_vld(1'b1),
    .selected_line_ap_vld(1'b1),
    .ap_start(grp_get_last_centroids_fu_406_ap_start),
    .ap_done(grp_get_last_centroids_fu_406_ap_done),
    .ap_ready(grp_get_last_centroids_fu_406_ap_ready),
    .ap_idle(grp_get_last_centroids_fu_406_ap_idle),
    .ap_continue(grp_get_last_centroids_fu_406_ap_continue)
);

ip_accel_app_sdivNgs #(
    .ID( 1 ),
    .NUM_STAGE( 68 ),
    .din0_WIDTH( 64 ),
    .din1_WIDTH( 56 ),
    .dout_WIDTH( 24 ))
ip_accel_app_sdivNgs_U462(
    .clk(ap_clk),
    .reset(ap_rst),
    .start(grp_fu_795_ap_start),
    .done(grp_fu_795_ap_done),
    .din0(grp_fu_795_p0),
    .din1(shl_ln731_9_fu_775_p3),
    .ce(1'b1),
    .dout(grp_fu_795_p2)
);

ip_accel_app_mac_PgM #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .din2_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
ip_accel_app_mac_PgM_U463(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1128_p0),
    .din1(grp_fu_1128_p1),
    .din2(sum_xx_0_i_reg_359),
    .ce(1'b1),
    .dout(grp_fu_1128_p3)
);

ip_accel_app_mul_QgW #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 32 ))
ip_accel_app_mul_QgW_U464(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(m_V_fu_880_p1),
    .din1(grp_fu_1137_p1),
    .ce(1'b1),
    .dout(grp_fu_1137_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_grp_get_centroid_sh_fu_382_ap_done <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_state83_on_subcall_done) & (1'b1 == ap_CS_fsm_state83))) begin
            ap_sync_reg_grp_get_centroid_sh_fu_382_ap_done <= 1'b0;
        end else if ((grp_get_centroid_sh_fu_382_ap_done == 1'b1)) begin
            ap_sync_reg_grp_get_centroid_sh_fu_382_ap_done <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_grp_get_centroid_sh_fu_382_ap_ready <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_state83_on_subcall_done) & (1'b1 == ap_CS_fsm_state83))) begin
            ap_sync_reg_grp_get_centroid_sh_fu_382_ap_ready <= 1'b0;
        end else if ((grp_get_centroid_sh_fu_382_ap_ready == 1'b1)) begin
            ap_sync_reg_grp_get_centroid_sh_fu_382_ap_ready <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_grp_get_last_centroids_fu_406_ap_done <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_state5_on_subcall_done) & (1'b1 == ap_CS_fsm_state5))) begin
            ap_sync_reg_grp_get_last_centroids_fu_406_ap_done <= 1'b0;
        end else if ((grp_get_last_centroids_fu_406_ap_done == 1'b1)) begin
            ap_sync_reg_grp_get_last_centroids_fu_406_ap_done <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_grp_get_last_centroids_fu_406_ap_ready <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_state5_on_subcall_done) & (1'b1 == ap_CS_fsm_state5))) begin
            ap_sync_reg_grp_get_last_centroids_fu_406_ap_ready <= 1'b0;
        end else if ((grp_get_last_centroids_fu_406_ap_ready == 1'b1)) begin
            ap_sync_reg_grp_get_last_centroids_fu_406_ap_ready <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_extract_micro_roi_fu_395_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state80)) begin
            grp_extract_micro_roi_fu_395_ap_start_reg <= 1'b1;
        end else if ((grp_extract_micro_roi_fu_395_ap_ready == 1'b1)) begin
            grp_extract_micro_roi_fu_395_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_get_centroid_sh_fu_382_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state82) | ((ap_sync_grp_get_centroid_sh_fu_382_ap_ready == 1'b0) & (1'b1 == ap_CS_fsm_state83)))) begin
            grp_get_centroid_sh_fu_382_ap_start_reg <= 1'b1;
        end else if ((grp_get_centroid_sh_fu_382_ap_ready == 1'b1)) begin
            grp_get_centroid_sh_fu_382_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_get_last_centroids_fu_406_ap_start_reg <= 1'b0;
    end else begin
        if ((((ap_sync_grp_get_last_centroids_fu_406_ap_ready == 1'b0) & (1'b1 == ap_CS_fsm_state5)) | ((tmp_53_fu_678_p3 == 1'd1) & (1'b1 == ap_CS_fsm_state4)))) begin
            grp_get_last_centroids_fu_406_ap_start_reg <= 1'b1;
        end else if ((grp_get_last_centroids_fu_406_ap_ready == 1'b1)) begin
            grp_get_last_centroids_fu_406_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        i_0_i_reg_371 <= i_reg_1302;
    end else if (((1'b0 == ap_block_state5_on_subcall_done) & (1'b1 == ap_CS_fsm_state5))) begin
        i_0_i_reg_371 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state84)) begin
        indvar_flatten_reg_278 <= add_ln301_reg_1184;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        indvar_flatten_reg_278 <= 6'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state84)) begin
        last_seg_index_0_reg_300 <= select_ln301_1_reg_1289;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        last_seg_index_0_reg_300 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state84)) begin
        line_index_0_reg_312 <= line_index_fu_1123_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        line_index_0_reg_312 <= 3'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state84)) begin
        p_Val2_s_reg_289 <= select_ln301_reg_1243;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        p_Val2_s_reg_289 <= 13'd6460;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        reg_422 <= segments648_q0;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        reg_422 <= segments648_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state84)) begin
        seg_index_0_reg_266 <= select_ln303_2_reg_1212;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        seg_index_0_reg_266 <= 4'd5;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        sum_x_0_i_reg_323 <= sum_x_2_reg_1336;
    end else if (((1'b0 == ap_block_state5_on_subcall_done) & (1'b1 == ap_CS_fsm_state5))) begin
        sum_x_0_i_reg_323 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        sum_xx_0_i_reg_359 <= sum_xx_2_fu_864_p3;
    end else if (((1'b0 == ap_block_state5_on_subcall_done) & (1'b1 == ap_CS_fsm_state5))) begin
        sum_xx_0_i_reg_359 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        sum_xy_0_i_reg_347 <= sum_xy_2_reg_1346;
    end else if (((1'b0 == ap_block_state5_on_subcall_done) & (1'b1 == ap_CS_fsm_state5))) begin
        sum_xy_0_i_reg_347 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        sum_y_0_i_reg_335 <= sum_y_2_reg_1341;
    end else if (((1'b0 == ap_block_state5_on_subcall_done) & (1'b1 == ap_CS_fsm_state5))) begin
        sum_y_0_i_reg_335 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        add_ln301_reg_1184 <= add_ln301_fu_482_p2;
        sub_ln327_reg_1176 <= sub_ln327_fu_470_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        add_ln303_reg_1150 <= add_ln303_fu_428_p2;
        zext_ln303_1_reg_1165[3 : 0] <= zext_ln303_1_fu_439_p1[3 : 0];
        zext_ln303_reg_1155[3 : 0] <= zext_ln303_fu_434_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state83) & (grp_get_centroid_sh_fu_382_c_ap_vld == 1'b1))) begin
        c_fu_142 <= grp_get_centroid_sh_fu_382_c;
    end
end

always @ (posedge ap_clk) begin
    if (((grp_extract_micro_roi_fu_395_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state81))) begin
        c_load_reg_1389 <= c_fu_142;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        i_op_assign_reg_1356 <= {{sum_x_0_i_reg_323[31:2]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        i_reg_1302 <= i_fu_692_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln186_fu_686_p2 == 1'd0))) begin
        icmp_ln187_reg_1307 <= icmp_ln187_fu_708_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln301_fu_476_p2 == 1'd0))) begin
        icmp_ln307_reg_1189 <= icmp_ln307_fu_500_p2;
        select_ln301_reg_1243 <= select_ln301_fu_621_p3;
        select_ln303_2_reg_1212 <= select_ln303_2_fu_531_p3;
        select_ln303_3_reg_1222[6 : 1] <= select_ln303_3_fu_570_p3[6 : 1];
        select_ln303_4_reg_1227 <= select_ln303_4_fu_598_p3;
        select_ln303_reg_1195 <= select_ln303_fu_506_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state77)) begin
        p_Val2_34_reg_1361 <= p_Val2_34_fu_961_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        segments648_load_2_reg_1253 <= segments648_q2;
        select_ln301_1_reg_1289 <= select_ln301_1_fu_670_p3;
        select_ln303_7_reg_1284 <= select_ln303_7_fu_664_p3;
        tmp_53_reg_1295 <= line_bases_active_q0[32'd16];
        zext_ln303_3_reg_1258[3 : 0] <= zext_ln303_3_fu_640_p1[3 : 0];
        zext_ln303_4_reg_1264[7 : 0] <= zext_ln303_4_fu_643_p1[7 : 0];
        zext_ln303_5_reg_1269[3 : 0] <= zext_ln303_5_fu_647_p1[3 : 0];
        zext_ln303_8_reg_1274[7 : 0] <= zext_ln303_8_fu_650_p1[7 : 0];
        zext_ln303_9_reg_1279[7 : 0] <= zext_ln303_9_fu_654_p1[7 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state80)) begin
        select_ln320_1_reg_1383 <= select_ln320_1_fu_1086_p3;
        select_ln320_reg_1376 <= select_ln320_fu_1072_p3;
        y_temp_reg_1371 <= y_temp_fu_1032_p3;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state82)) begin
        sub_ln327_1_reg_1394 <= sub_ln327_1_fu_1095_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        sum_x_2_reg_1336 <= sum_x_2_fu_843_p3;
        sum_xy_2_reg_1346 <= sum_xy_2_fu_857_p3;
        sum_y_2_reg_1341 <= sum_y_2_fu_850_p3;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state3) & (icmp_ln301_fu_476_p2 == 1'd1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln301_fu_476_p2 == 1'd1))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state84)) begin
        centroids_address0 = zext_ln328_1_fu_1118_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        centroids_address0 = grp_get_last_centroids_fu_406_centroids_address0;
    end else begin
        centroids_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state84)) begin
        centroids_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        centroids_ce0 = grp_get_last_centroids_fu_406_centroids_ce0;
    end else begin
        centroids_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((tmp_53_reg_1295 == 1'd1) & (1'b1 == ap_CS_fsm_state84))) begin
        centroids_we0 = 1'b1;
    end else begin
        centroids_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state81)) begin
        eroded_data_V_read = grp_extract_micro_roi_fu_395_img_in_mr_data_V_read;
    end else begin
        eroded_data_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln186_fu_686_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        grp_fu_795_ap_start = 1'b1;
    end else begin
        grp_fu_795_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state83_on_subcall_done) & (1'b1 == ap_CS_fsm_state83))) begin
        grp_get_centroid_sh_fu_382_ap_continue = 1'b1;
    end else begin
        grp_get_centroid_sh_fu_382_ap_continue = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_state5_on_subcall_done) & (1'b1 == ap_CS_fsm_state5))) begin
        grp_get_last_centroids_fu_406_ap_continue = 1'b1;
    end else begin
        grp_get_last_centroids_fu_406_ap_continue = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        last_centroids_address0 = zext_ln188_fu_714_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        last_centroids_address0 = grp_get_last_centroids_fu_406_last_c_2_address0;
    end else begin
        last_centroids_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        last_centroids_ce0 = 1'b1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        last_centroids_ce0 = grp_get_last_centroids_fu_406_last_c_2_ce0;
    end else begin
        last_centroids_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        last_centroids_we0 = grp_get_last_centroids_fu_406_last_c_2_we0;
    end else begin
        last_centroids_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        line_bases_active_ce0 = 1'b1;
    end else begin
        line_bases_active_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state81)) begin
        micro_roi_3_data_V_address0 = grp_extract_micro_roi_fu_395_micro_roi_data_V_address0;
    end else if ((1'b1 == ap_CS_fsm_state83)) begin
        micro_roi_3_data_V_address0 = grp_get_centroid_sh_fu_382_micro_roi_data_V_address0;
    end else begin
        micro_roi_3_data_V_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state81)) begin
        micro_roi_3_data_V_ce0 = grp_extract_micro_roi_fu_395_micro_roi_data_V_ce0;
    end else if ((1'b1 == ap_CS_fsm_state83)) begin
        micro_roi_3_data_V_ce0 = grp_get_centroid_sh_fu_382_micro_roi_data_V_ce0;
    end else begin
        micro_roi_3_data_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state81)) begin
        micro_roi_3_data_V_we0 = grp_extract_micro_roi_fu_395_micro_roi_data_V_we0;
    end else begin
        micro_roi_3_data_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        segments648_address0 = zext_ln303_6_fu_521_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        segments648_address0 = zext_ln303_fu_434_p1;
    end else begin
        segments648_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        segments648_address1 = zext_ln303_2_fu_526_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        segments648_address1 = zext_ln303_1_fu_439_p1;
    end else begin
        segments648_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state3))) begin
        segments648_ce0 = 1'b1;
    end else begin
        segments648_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | (1'b1 == ap_CS_fsm_state3))) begin
        segments648_ce1 = 1'b1;
    end else begin
        segments648_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        segments648_ce2 = 1'b1;
    end else begin
        segments648_ce2 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        segments648_ce3 = 1'b1;
    end else begin
        segments648_ce3 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        segments648_ce4 = 1'b1;
    end else begin
        segments648_ce4 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            if (((1'b1 == ap_CS_fsm_state3) & (icmp_ln301_fu_476_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (tmp_53_fu_678_p3 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state84;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            if (((1'b0 == ap_block_state5_on_subcall_done) & (1'b1 == ap_CS_fsm_state5))) begin
                ap_NS_fsm = ap_ST_fsm_state6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state6 : begin
            if (((icmp_ln186_fu_686_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            ap_NS_fsm = ap_ST_fsm_state75;
        end
        ap_ST_fsm_state75 : begin
            ap_NS_fsm = ap_ST_fsm_state76;
        end
        ap_ST_fsm_state76 : begin
            ap_NS_fsm = ap_ST_fsm_state77;
        end
        ap_ST_fsm_state77 : begin
            ap_NS_fsm = ap_ST_fsm_state78;
        end
        ap_ST_fsm_state78 : begin
            ap_NS_fsm = ap_ST_fsm_state79;
        end
        ap_ST_fsm_state79 : begin
            ap_NS_fsm = ap_ST_fsm_state80;
        end
        ap_ST_fsm_state80 : begin
            ap_NS_fsm = ap_ST_fsm_state81;
        end
        ap_ST_fsm_state81 : begin
            if (((grp_extract_micro_roi_fu_395_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state81))) begin
                ap_NS_fsm = ap_ST_fsm_state82;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state81;
            end
        end
        ap_ST_fsm_state82 : begin
            ap_NS_fsm = ap_ST_fsm_state83;
        end
        ap_ST_fsm_state83 : begin
            if (((1'b0 == ap_block_state83_on_subcall_done) & (1'b1 == ap_CS_fsm_state83))) begin
                ap_NS_fsm = ap_ST_fsm_state84;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state83;
            end
        end
        ap_ST_fsm_state84 : begin
            ap_NS_fsm = ap_ST_fsm_state2;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln301_fu_482_p2 = (indvar_flatten_reg_278 + 6'd1);

assign add_ln303_fu_428_p2 = ($signed(seg_index_0_reg_266) + $signed(4'd15));

assign add_ln320_fu_1081_p2 = (trunc_ln317_fu_1040_p1 + zext_ln303_5_reg_1269);

assign add_ln328_1_fu_1103_p2 = ($signed(4'd10) + $signed(zext_ln328_fu_1100_p1));

assign add_ln328_fu_1113_p2 = ($signed(sext_ln328_fu_1109_p1) + $signed(select_ln303_3_reg_1222));

assign add_ln703_fu_488_p2 = ($signed(p_Val2_s_reg_289) + $signed(13'd7759));

assign add_ln851_7_fu_1018_p2 = (32'd1 + tmp_s_fu_1008_p4);

assign add_ln851_fu_939_p2 = (32'd1 + trunc_ln_fu_929_p4);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state77 = ap_CS_fsm[32'd76];

assign ap_CS_fsm_state80 = ap_CS_fsm[32'd79];

assign ap_CS_fsm_state81 = ap_CS_fsm[32'd80];

assign ap_CS_fsm_state82 = ap_CS_fsm[32'd81];

assign ap_CS_fsm_state83 = ap_CS_fsm[32'd82];

assign ap_CS_fsm_state84 = ap_CS_fsm[32'd83];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state5_on_subcall_done = ((ap_sync_grp_get_last_centroids_fu_406_ap_ready & ap_sync_grp_get_last_centroids_fu_406_ap_done) == 1'b0);
end

always @ (*) begin
    ap_block_state83_on_subcall_done = ((ap_sync_grp_get_centroid_sh_fu_382_ap_ready & ap_sync_grp_get_centroid_sh_fu_382_ap_done) == 1'b0);
end

assign ap_sync_grp_get_centroid_sh_fu_382_ap_done = (grp_get_centroid_sh_fu_382_ap_done | ap_sync_reg_grp_get_centroid_sh_fu_382_ap_done);

assign ap_sync_grp_get_centroid_sh_fu_382_ap_ready = (grp_get_centroid_sh_fu_382_ap_ready | ap_sync_reg_grp_get_centroid_sh_fu_382_ap_ready);

assign ap_sync_grp_get_last_centroids_fu_406_ap_done = (grp_get_last_centroids_fu_406_ap_done | ap_sync_reg_grp_get_last_centroids_fu_406_ap_done);

assign ap_sync_grp_get_last_centroids_fu_406_ap_ready = (grp_get_last_centroids_fu_406_ap_ready | ap_sync_reg_grp_get_last_centroids_fu_406_ap_ready);

assign centroids_d0 = c_fu_142;

assign centroids_y_1_load_n_fu_815_p4 = {{last_centroids_q0[47:16]}};

assign grp_extract_micro_roi_fu_395_ap_start = grp_extract_micro_roi_fu_395_ap_start_reg;

assign grp_fu_1128_p0 = zext_ln188_4_fu_805_p1;

assign grp_fu_1128_p1 = zext_ln188_4_fu_805_p1;

assign grp_fu_1137_p1 = zext_ln303_4_reg_1264;

assign grp_fu_795_p0 = {{sub_ln731_fu_763_p2}, {16'd0}};

assign grp_get_centroid_sh_fu_382_ap_start = grp_get_centroid_sh_fu_382_ap_start_reg;

assign grp_get_last_centroids_fu_406_ap_start = grp_get_last_centroids_fu_406_ap_start_reg;

assign i_fu_692_p2 = (i_0_i_reg_371 + 4'd1);

assign icmp_ln186_fu_686_p2 = ((i_0_i_reg_371 == 4'd12) ? 1'b1 : 1'b0);

assign icmp_ln187_fu_708_p2 = ((tmp_57_fu_698_p4 == 2'd0) ? 1'b1 : 1'b0);

assign icmp_ln301_fu_476_p2 = ((indvar_flatten_reg_278 == 6'd48) ? 1'b1 : 1'b0);

assign icmp_ln307_fu_500_p2 = ((line_index_0_reg_312 == 3'd6) ? 1'b1 : 1'b0);

assign icmp_ln319_fu_1062_p2 = (($signed(y_right_fu_1049_p2) > $signed(32'd319)) ? 1'b1 : 1'b0);

assign icmp_ln851_8_fu_923_p2 = ((trunc_ln851_fu_919_p1 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln851_fu_1002_p2 = ((trunc_ln851_10_fu_999_p1 == 8'd0) ? 1'b1 : 1'b0);

assign last_seg_index_fu_634_p2 = (last_seg_index_0_reg_300 + 4'd1);

assign lhs_V_fu_971_p1 = grp_fu_1137_p2;

assign line_bases_active_address0 = zext_ln309_fu_629_p1;

assign line_index_fu_1123_p2 = (select_ln303_reg_1195 + 3'd1);

assign lshr_ln_fu_884_p4 = {{sum_y_0_i_reg_335[31:2]}};

assign m_V_fu_880_p1 = grp_fu_795_p2[23:0];

assign mul_ln190_fu_831_p0 = zext_ln188_4_fu_805_p1;

assign mul_ln190_fu_831_p2 = ($signed({{1'b0}, {mul_ln190_fu_831_p0}}) * $signed(centroids_y_1_load_n_fu_815_p4));

assign mul_ln731_5_fu_757_p0 = zext_ln731_13_fu_731_p1;

assign mul_ln731_5_fu_757_p1 = zext_ln731_13_fu_731_p1;

assign mul_ln731_5_fu_757_p2 = (mul_ln731_5_fu_757_p0 * mul_ln731_5_fu_757_p1);

assign mul_ln731_fu_739_p0 = mul_ln731_fu_739_p00;

assign mul_ln731_fu_739_p00 = sum_y_0_i_reg_335;

assign mul_ln731_fu_739_p1 = zext_ln731_13_fu_731_p1;

assign mul_ln731_fu_739_p2 = (mul_ln731_fu_739_p0 * mul_ln731_fu_739_p1);

assign p_Result_14_fu_991_p3 = ret_V_fu_985_p2[32'd40];

assign p_Result_s_fu_911_p3 = r_V_fu_905_p2[32'd53];

assign p_Val2_34_fu_961_p2 = (zext_ln196_fu_894_p1 - select_ln850_fu_953_p3);

assign r_V_fu_905_p0 = r_V_fu_905_p00;

assign r_V_fu_905_p00 = i_op_assign_reg_1356;

assign r_V_fu_905_p1 = m_V_fu_880_p1;

assign r_V_fu_905_p2 = ($signed({{1'b0}, {r_V_fu_905_p0}}) * $signed(r_V_fu_905_p1));

assign ret_V_fu_985_p2 = ($signed(sext_ln728_fu_981_p1) + $signed(lhs_V_fu_971_p1));

assign rhs_V_fu_974_p3 = {{p_Val2_34_reg_1361}, {8'd0}};

assign seg_index_fu_494_p2 = (seg_index_0_reg_266 + 4'd1);

assign segments648_address2 = zext_ln303_7_fu_539_p1;

assign segments648_address3 = select_ln303_5_fu_606_p3;

assign segments648_address4 = select_ln303_6_fu_614_p3;

assign select_ln301_1_fu_670_p3 = ((icmp_ln307_reg_1189[0:0] === 1'b1) ? last_seg_index_fu_634_p2 : last_seg_index_0_reg_300);

assign select_ln301_fu_621_p3 = ((icmp_ln307_fu_500_p2[0:0] === 1'b1) ? add_ln703_fu_488_p2 : p_Val2_s_reg_289);

assign select_ln303_1_fu_514_p3 = ((icmp_ln307_fu_500_p2[0:0] === 1'b1) ? seg_index_0_reg_266 : add_ln303_reg_1150);

assign select_ln303_2_fu_531_p3 = ((icmp_ln307_fu_500_p2[0:0] === 1'b1) ? seg_index_fu_494_p2 : seg_index_0_reg_266);

assign select_ln303_3_fu_570_p3 = ((icmp_ln307_fu_500_p2[0:0] === 1'b1) ? sub_ln306_1_fu_564_p2 : sub_ln306_fu_464_p2);

assign select_ln303_4_fu_598_p3 = ((icmp_ln307_fu_500_p2[0:0] === 1'b1) ? tmp_fu_578_p4 : tmp_3_fu_588_p4);

assign select_ln303_5_fu_606_p3 = ((icmp_ln307_fu_500_p2[0:0] === 1'b1) ? zext_ln303_2_fu_526_p1 : zext_ln303_1_reg_1165);

assign select_ln303_6_fu_614_p3 = ((icmp_ln307_fu_500_p2[0:0] === 1'b1) ? zext_ln303_1_reg_1165 : zext_ln303_reg_1155);

assign select_ln303_7_fu_664_p3 = ((icmp_ln307_reg_1189[0:0] === 1'b1) ? sub_ln327_2_fu_658_p2 : sub_ln327_reg_1176);

assign select_ln303_fu_506_p3 = ((icmp_ln307_fu_500_p2[0:0] === 1'b1) ? 3'd0 : line_index_0_reg_312);

assign select_ln320_1_fu_1086_p3 = ((icmp_ln319_fu_1062_p2[0:0] === 1'b1) ? 16'd319 : add_ln320_fu_1081_p2);

assign select_ln320_fu_1072_p3 = ((tmp_56_fu_1054_p3[0:0] === 1'b1) ? 16'd0 : trunc_ln320_fu_1068_p1);

assign select_ln850_fu_953_p3 = ((p_Result_s_fu_911_p3[0:0] === 1'b1) ? select_ln851_fu_945_p3 : trunc_ln_fu_929_p4);

assign select_ln851_7_fu_1024_p3 = ((icmp_ln851_fu_1002_p2[0:0] === 1'b1) ? tmp_s_fu_1008_p4 : add_ln851_7_fu_1018_p2);

assign select_ln851_fu_945_p3 = ((icmp_ln851_8_fu_923_p2[0:0] === 1'b1) ? trunc_ln_fu_929_p4 : add_ln851_fu_939_p2);

assign sext_ln328_fu_1109_p1 = $signed(add_ln328_1_fu_1103_p2);

assign sext_ln728_fu_981_p1 = $signed(rhs_V_fu_974_p3);

assign shl_ln306_1_fu_452_p3 = {{seg_index_0_reg_266}, {1'd0}};

assign shl_ln306_1_mid1_fu_552_p3 = {{seg_index_fu_494_p2}, {1'd0}};

assign shl_ln306_mid1_fu_544_p3 = {{seg_index_fu_494_p2}, {3'd0}};

assign shl_ln731_7_fu_745_p3 = {{sum_xx_0_i_reg_359}, {2'd0}};

assign shl_ln731_9_fu_775_p3 = {{sub_ln731_5_fu_769_p2}, {8'd0}};

assign shl_ln8_fu_719_p3 = {{sum_xy_0_i_reg_347}, {2'd0}};

assign shl_ln_fu_444_p3 = {{seg_index_0_reg_266}, {3'd0}};

assign sub_ln306_1_fu_564_p2 = (shl_ln306_mid1_fu_544_p3 - zext_ln306_1_fu_560_p1);

assign sub_ln306_fu_464_p2 = (shl_ln_fu_444_p3 - zext_ln306_fu_460_p1);

assign sub_ln327_1_fu_1095_p2 = (select_ln320_1_reg_1383 - select_ln320_reg_1376);

assign sub_ln327_2_fu_658_p2 = (reg_422 - segments648_q1);

assign sub_ln327_fu_470_p2 = (segments648_q0 - segments648_q1);

assign sub_ln731_5_fu_769_p2 = (zext_ln731_15_fu_753_p1 - mul_ln731_5_fu_757_p2);

assign sub_ln731_fu_763_p2 = (zext_ln731_14_fu_735_p1 - mul_ln731_fu_739_p2);

assign sum_x_2_fu_843_p3 = ((icmp_ln187_reg_1307[0:0] === 1'b1) ? sum_x_fu_809_p2 : sum_x_0_i_reg_323);

assign sum_x_fu_809_p2 = (zext_ln188_4_fu_805_p1 + sum_x_0_i_reg_323);

assign sum_xx_2_fu_864_p3 = ((icmp_ln187_reg_1307[0:0] === 1'b1) ? grp_fu_1128_p3 : sum_xx_0_i_reg_359);

assign sum_xy_2_fu_857_p3 = ((icmp_ln187_reg_1307[0:0] === 1'b1) ? sum_xy_fu_837_p2 : sum_xy_0_i_reg_347);

assign sum_xy_fu_837_p2 = (sum_xy_0_i_reg_347 + mul_ln190_fu_831_p2);

assign sum_y_2_fu_850_p3 = ((icmp_ln187_reg_1307[0:0] === 1'b1) ? sum_y_fu_825_p2 : sum_y_0_i_reg_335);

assign sum_y_fu_825_p2 = ($signed(sum_y_0_i_reg_335) + $signed(centroids_y_1_load_n_fu_815_p4));

assign tmp_3_fu_588_p4 = {{p_Val2_s_reg_289[12:9]}};

assign tmp_53_fu_678_p3 = line_bases_active_q0[32'd16];

assign tmp_56_fu_1054_p3 = y_left_fu_1044_p2[32'd31];

assign tmp_57_fu_698_p4 = {{i_0_i_reg_371[3:2]}};

assign tmp_fu_578_p4 = {{add_ln703_fu_488_p2[12:9]}};

assign tmp_s_fu_1008_p4 = {{ret_V_fu_985_p2[39:8]}};

assign trunc_ln188_fu_801_p1 = last_centroids_q0[15:0];

assign trunc_ln317_fu_1040_p1 = y_temp_fu_1032_p3[15:0];

assign trunc_ln320_fu_1068_p1 = y_left_fu_1044_p2[15:0];

assign trunc_ln851_10_fu_999_p1 = grp_fu_1137_p2[7:0];

assign trunc_ln851_fu_919_p1 = r_V_fu_905_p2[7:0];

assign trunc_ln_fu_929_p4 = {{r_V_fu_905_p2[39:8]}};

assign y_left_fu_1044_p2 = (y_temp_fu_1032_p3 - zext_ln303_3_reg_1258);

assign y_right_fu_1049_p2 = (y_temp_fu_1032_p3 + zext_ln303_3_reg_1258);

assign y_temp_fu_1032_p3 = ((p_Result_14_fu_991_p3[0:0] === 1'b1) ? select_ln851_7_fu_1024_p3 : tmp_s_fu_1008_p4);

assign zext_ln188_4_fu_805_p1 = trunc_ln188_fu_801_p1;

assign zext_ln188_fu_714_p1 = i_0_i_reg_371;

assign zext_ln196_fu_894_p1 = lshr_ln_fu_884_p4;

assign zext_ln303_1_fu_439_p1 = seg_index_0_reg_266;

assign zext_ln303_2_fu_526_p1 = seg_index_fu_494_p2;

assign zext_ln303_3_fu_640_p1 = select_ln303_4_reg_1227;

assign zext_ln303_4_fu_643_p1 = segments648_q0;

assign zext_ln303_5_fu_647_p1 = select_ln303_4_reg_1227;

assign zext_ln303_6_fu_521_p1 = select_ln303_1_fu_514_p3;

assign zext_ln303_7_fu_539_p1 = select_ln303_2_fu_531_p3;

assign zext_ln303_8_fu_650_p1 = segments648_q3;

assign zext_ln303_9_fu_654_p1 = segments648_q4;

assign zext_ln303_fu_434_p1 = add_ln303_fu_428_p2;

assign zext_ln306_1_fu_560_p1 = shl_ln306_1_mid1_fu_552_p3;

assign zext_ln306_fu_460_p1 = shl_ln306_1_fu_452_p3;

assign zext_ln309_fu_629_p1 = select_ln303_fu_506_p3;

assign zext_ln328_1_fu_1118_p1 = add_ln328_fu_1113_p2;

assign zext_ln328_fu_1100_p1 = select_ln303_reg_1195;

assign zext_ln731_13_fu_731_p1 = sum_x_0_i_reg_323;

assign zext_ln731_14_fu_735_p1 = shl_ln8_fu_719_p3;

assign zext_ln731_15_fu_753_p1 = shl_ln731_7_fu_745_p3;

always @ (posedge ap_clk) begin
    zext_ln303_reg_1155[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln303_1_reg_1165[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    select_ln303_3_reg_1222[0] <= 1'b0;
    zext_ln303_3_reg_1258[31:4] <= 28'b0000000000000000000000000000;
    zext_ln303_4_reg_1264[31:8] <= 24'b000000000000000000000000;
    zext_ln303_5_reg_1269[15:4] <= 12'b000000000000;
    zext_ln303_8_reg_1274[9:8] <= 2'b00;
    zext_ln303_9_reg_1279[9:8] <= 2'b00;
end

endmodule //extr_half_2_cent
