// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module CoreProcessUpArea_2 (
        ap_ready,
        A0,
        B0,
        A1,
        B1,
        Wx,
        Wy,
        ap_return
);


output   ap_ready;
input  [7:0] A0;
input  [7:0] B0;
input  [7:0] A1;
input  [7:0] B1;
input  [31:0] Wx;
input  [31:0] Wy;
output  [7:0] ap_return;

wire   [31:0] mul_ln552_fu_90_p0;
wire   [31:0] mul_ln552_fu_90_p1;
wire   [63:0] mul_ln552_fu_90_p2;
wire   [8:0] zext_ln553_fu_106_p1;
wire   [8:0] zext_ln553_2_fu_114_p1;
wire   [8:0] sub_ln553_fu_126_p2;
wire  signed [9:0] sext_ln553_fu_132_p1;
wire   [9:0] zext_ln553_3_fu_118_p1;
wire   [9:0] zext_ln553_1_fu_110_p1;
wire   [9:0] sub_ln553_1_fu_136_p2;
wire   [8:0] zext_ln553_4_fu_122_p1;
wire   [9:0] val0_fu_142_p2;
wire   [31:0] Wxy_fu_96_p4;
wire  signed [9:0] P1_fu_168_p0;
wire   [31:0] P1_fu_168_p1;
wire   [8:0] val1_fu_148_p2;
wire  signed [8:0] P2_fu_178_p0;
wire   [31:0] P2_fu_178_p1;
wire   [8:0] val2_fu_154_p2;
wire  signed [8:0] P3_fu_188_p0;
wire   [31:0] P3_fu_188_p1;
wire   [39:0] P4_fu_194_p3;
wire   [39:0] P2_fu_178_p2;
wire   [39:0] P1_fu_168_p2;
wire   [39:0] P3_fu_188_p2;
wire   [39:0] add_ln562_fu_202_p2;
wire   [39:0] add_ln562_1_fu_208_p2;
wire   [39:0] add_ln562_2_fu_214_p2;
wire   [39:0] P1_fu_168_p10;
wire   [39:0] P2_fu_178_p10;
wire   [39:0] P3_fu_188_p10;
wire   [63:0] mul_ln552_fu_90_p00;
wire   [63:0] mul_ln552_fu_90_p10;

assign P1_fu_168_p0 = val0_fu_142_p2;

assign P1_fu_168_p1 = P1_fu_168_p10;

assign P1_fu_168_p10 = Wxy_fu_96_p4;

assign P1_fu_168_p2 = ($signed(P1_fu_168_p0) * $signed({{1'b0}, {P1_fu_168_p1}}));

assign P2_fu_178_p0 = val1_fu_148_p2;

assign P2_fu_178_p1 = P2_fu_178_p10;

assign P2_fu_178_p10 = Wx;

assign P2_fu_178_p2 = ($signed(P2_fu_178_p0) * $signed({{1'b0}, {P2_fu_178_p1}}));

assign P3_fu_188_p0 = val2_fu_154_p2;

assign P3_fu_188_p1 = P3_fu_188_p10;

assign P3_fu_188_p10 = Wy;

assign P3_fu_188_p2 = ($signed(P3_fu_188_p0) * $signed({{1'b0}, {P3_fu_188_p1}}));

assign P4_fu_194_p3 = {{A0}, {32'd0}};

assign Wxy_fu_96_p4 = {{mul_ln552_fu_90_p2[63:32]}};

assign add_ln562_1_fu_208_p2 = (P1_fu_168_p2 + P3_fu_188_p2);

assign add_ln562_2_fu_214_p2 = (add_ln562_fu_202_p2 + add_ln562_1_fu_208_p2);

assign add_ln562_fu_202_p2 = (P4_fu_194_p3 + P2_fu_178_p2);

assign ap_ready = 1'b1;

assign ap_return = {{add_ln562_2_fu_214_p2[39:32]}};

assign mul_ln552_fu_90_p0 = mul_ln552_fu_90_p00;

assign mul_ln552_fu_90_p00 = Wx;

assign mul_ln552_fu_90_p1 = mul_ln552_fu_90_p10;

assign mul_ln552_fu_90_p10 = Wy;

assign mul_ln552_fu_90_p2 = (mul_ln552_fu_90_p0 * mul_ln552_fu_90_p1);

assign sext_ln553_fu_132_p1 = $signed(sub_ln553_fu_126_p2);

assign sub_ln553_1_fu_136_p2 = ($signed(sext_ln553_fu_132_p1) - $signed(zext_ln553_3_fu_118_p1));

assign sub_ln553_fu_126_p2 = (zext_ln553_fu_106_p1 - zext_ln553_2_fu_114_p1);

assign val0_fu_142_p2 = (zext_ln553_1_fu_110_p1 + sub_ln553_1_fu_136_p2);

assign val1_fu_148_p2 = (zext_ln553_2_fu_114_p1 - zext_ln553_fu_106_p1);

assign val2_fu_154_p2 = (zext_ln553_4_fu_122_p1 - zext_ln553_fu_106_p1);

assign zext_ln553_1_fu_110_p1 = B1;

assign zext_ln553_2_fu_114_p1 = B0;

assign zext_ln553_3_fu_118_p1 = A1;

assign zext_ln553_4_fu_122_p1 = A1;

assign zext_ln553_fu_106_p1 = A0;

endmodule //CoreProcessUpArea_2
