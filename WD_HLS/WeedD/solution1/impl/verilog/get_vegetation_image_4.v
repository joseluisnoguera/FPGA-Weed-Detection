// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module get_vegetation_image_4 (
        ap_start,
        start_full_n,
        start_out,
        start_write,
        img_in_cols_dout,
        img_in_cols_empty_n,
        img_in_cols_read,
        img_in_data_V_dout,
        img_in_data_V_empty_n,
        img_in_data_V_read,
        img_out_data_V_din,
        img_out_data_V_full_n,
        img_out_data_V_write,
        ap_clk,
        ap_rst,
        ap_done,
        ap_ready,
        ap_idle,
        ap_continue
);


input   ap_start;
input   start_full_n;
output   start_out;
output   start_write;
input  [9:0] img_in_cols_dout;
input   img_in_cols_empty_n;
output   img_in_cols_read;
input  [23:0] img_in_data_V_dout;
input   img_in_data_V_empty_n;
output   img_in_data_V_read;
output  [7:0] img_out_data_V_din;
input   img_out_data_V_full_n;
output   img_out_data_V_write;
input   ap_clk;
input   ap_rst;
output   ap_done;
output   ap_ready;
output   ap_idle;
input   ap_continue;

reg start_write;

reg    real_start;
reg    start_once_reg;
wire    internal_ap_ready;
wire    get_vegetation_image_113_U0_ap_start;
wire    get_vegetation_image_113_U0_ap_done;
wire    get_vegetation_image_113_U0_ap_continue;
wire    get_vegetation_image_113_U0_ap_idle;
wire    get_vegetation_image_113_U0_ap_ready;
wire   [8:0] get_vegetation_image_113_U0_img_in_0_rows0;
wire    get_vegetation_image_113_U0_img_in_0_rows0_ap_vld;
wire   [9:0] get_vegetation_image_113_U0_img_in_0_cols0;
wire    get_vegetation_image_113_U0_img_in_0_cols0_ap_vld;
wire    get_vegetation_image_113_U0_img_in_cols_read;
wire   [9:0] get_vegetation_image_113_U0_img_in_cols_out_din;
wire    get_vegetation_image_113_U0_img_in_cols_out_write;
wire    ap_channel_done_img_in_0_cols_channe;
wire    img_in_0_cols_channe_full_n;
reg    ap_sync_reg_channel_write_img_in_0_cols_channe;
wire    ap_sync_channel_write_img_in_0_cols_channe;
wire    ap_channel_done_img_in_0_rows_channe;
wire    img_in_0_rows_channe_full_n;
reg    ap_sync_reg_channel_write_img_in_0_rows_channe;
wire    ap_sync_channel_write_img_in_0_rows_channe;
wire    duplicateMat635769_U0_ap_start;
wire    duplicateMat635769_U0_start_full_n;
wire    duplicateMat635769_U0_start_out;
wire    duplicateMat635769_U0_start_write;
wire    duplicateMat635769_U0_p_src_cols_read;
wire    duplicateMat635769_U0_p_src_data_V_read;
wire   [23:0] duplicateMat635769_U0_p_dst1_data_V_din;
wire    duplicateMat635769_U0_p_dst1_data_V_write;
wire   [23:0] duplicateMat635769_U0_p_dst2_data_V_din;
wire    duplicateMat635769_U0_p_dst2_data_V_write;
wire    duplicateMat635769_U0_ap_done;
wire    duplicateMat635769_U0_ap_ready;
wire    duplicateMat635769_U0_ap_idle;
wire    duplicateMat635769_U0_ap_continue;
wire    duplicateMat_U0_p_src_data_V_read;
wire   [23:0] duplicateMat_U0_p_dst1_data_V_din;
wire    duplicateMat_U0_p_dst1_data_V_write;
wire   [23:0] duplicateMat_U0_p_dst2_data_V_din;
wire    duplicateMat_U0_p_dst2_data_V_write;
wire    duplicateMat_U0_ap_start;
wire    duplicateMat_U0_ap_done;
wire    duplicateMat_U0_ap_ready;
wire    duplicateMat_U0_ap_idle;
wire    duplicateMat_U0_ap_continue;
wire    extract_channels_U0_img_in_0_data_V_read;
wire    extract_channels_U0_img_in_1_data_V_read;
wire    extract_channels_U0_img_in_2_data_V_read;
wire   [7:0] extract_channels_U0_r_channel_data_V_din;
wire    extract_channels_U0_r_channel_data_V_write;
wire   [7:0] extract_channels_U0_g_channel_data_V_din;
wire    extract_channels_U0_g_channel_data_V_write;
wire   [7:0] extract_channels_U0_b_channel_data_V_din;
wire    extract_channels_U0_b_channel_data_V_write;
wire    extract_channels_U0_ap_start;
wire    extract_channels_U0_ap_done;
wire    extract_channels_U0_ap_ready;
wire    extract_channels_U0_ap_idle;
wire    extract_channels_U0_ap_continue;
wire    get_max_from_channel_U0_r_channel_data_V_read;
wire    get_max_from_channel_U0_g_channel_data_V_read;
wire    get_max_from_channel_U0_b_channel_data_V_read;
wire   [31:0] get_max_from_channel_U0_max_r_out_din;
wire    get_max_from_channel_U0_max_r_out_write;
wire   [31:0] get_max_from_channel_U0_max_g_out_din;
wire    get_max_from_channel_U0_max_g_out_write;
wire   [31:0] get_max_from_channel_U0_max_b_out_din;
wire    get_max_from_channel_U0_max_b_out_write;
wire    get_max_from_channel_U0_ap_start;
wire    get_max_from_channel_U0_ap_done;
wire    get_max_from_channel_U0_ap_ready;
wire    get_max_from_channel_U0_ap_idle;
wire    get_max_from_channel_U0_ap_continue;
reg    ap_sync_reg_get_max_from_channel_U0_ap_start;
wire    get_vegetation_image_U0_ap_start;
wire    get_vegetation_image_U0_ap_done;
wire    get_vegetation_image_U0_ap_continue;
wire    get_vegetation_image_U0_ap_idle;
wire    get_vegetation_image_U0_ap_ready;
wire    get_vegetation_image_U0_max_r_read;
wire    get_vegetation_image_U0_max_g_read;
wire    get_vegetation_image_U0_max_b_read;
wire   [31:0] get_vegetation_image_U0_max_r_out_din;
wire    get_vegetation_image_U0_max_r_out_write;
wire   [31:0] get_vegetation_image_U0_max_g_out_din;
wire    get_vegetation_image_U0_max_g_out_write;
wire   [31:0] get_vegetation_image_U0_max_b_out_din;
wire    get_vegetation_image_U0_max_b_out_write;
reg    ap_sync_reg_get_vegetation_image_U0_ap_start;
wire    get_exg_image_U0_ap_start;
wire    get_exg_image_U0_ap_done;
wire    get_exg_image_U0_ap_continue;
wire    get_exg_image_U0_ap_idle;
wire    get_exg_image_U0_ap_ready;
wire    get_exg_image_U0_r_channel_data_V_read;
wire    get_exg_image_U0_g_channel_data_V_read;
wire    get_exg_image_U0_b_channel_data_V_read;
wire    get_exg_image_U0_max_r_read;
wire    get_exg_image_U0_max_g_read;
wire    get_exg_image_U0_max_b_read;
wire   [31:0] get_exg_image_U0_veg_img_data_V_din;
wire    get_exg_image_U0_veg_img_data_V_write;
wire   [27:0] get_exg_image_U0_min_value_V_out_din;
wire    get_exg_image_U0_min_value_V_out_write;
wire   [28:0] get_exg_image_U0_max_value_V_out_din;
wire    get_exg_image_U0_max_value_V_out_write;
reg    ap_sync_reg_get_exg_image_U0_ap_start;
wire    get_vegetation_image_3_U0_ap_start;
wire    get_vegetation_image_3_U0_ap_done;
wire    get_vegetation_image_3_U0_ap_continue;
wire    get_vegetation_image_3_U0_ap_idle;
wire    get_vegetation_image_3_U0_ap_ready;
wire    get_vegetation_image_3_U0_max_value_V_read;
wire   [23:0] get_vegetation_image_3_U0_ap_return;
reg    ap_sync_reg_get_vegetation_image_3_U0_ap_start;
wire    ap_channel_done_extLd_cast_loc_chann;
wire    extLd_cast_loc_chann_full_n;
wire    get_vegetation_image_2_U0_ap_start;
wire    get_vegetation_image_2_U0_ap_done;
wire    get_vegetation_image_2_U0_ap_continue;
wire    get_vegetation_image_2_U0_ap_idle;
wire    get_vegetation_image_2_U0_ap_ready;
wire    get_vegetation_image_2_U0_min_value_V_read;
wire   [27:0] get_vegetation_image_2_U0_min_value_V_out_din;
wire    get_vegetation_image_2_U0_min_value_V_out_write;
wire   [23:0] get_vegetation_image_2_U0_ap_return;
wire    ap_channel_done_sub_ln703_cast_loc_c;
wire    sub_ln703_cast_loc_c_full_n;
wire    convert_fp_to_8b770_U0_ap_start;
wire    convert_fp_to_8b770_U0_ap_done;
wire    convert_fp_to_8b770_U0_ap_continue;
wire    convert_fp_to_8b770_U0_ap_idle;
wire    convert_fp_to_8b770_U0_ap_ready;
wire    convert_fp_to_8b770_U0_min_value_V_c17_read;
wire    convert_fp_to_8b770_U0_veg_temp_data_V_read;
wire   [7:0] convert_fp_to_8b770_U0_img_out_data_V_din;
wire    convert_fp_to_8b770_U0_img_out_data_V_write;
wire    ap_sync_continue;
wire   [8:0] img_in_0_rows_channe_dout;
wire    img_in_0_rows_channe_empty_n;
wire   [9:0] img_in_0_cols_channe_dout;
wire    img_in_0_cols_channe_empty_n;
wire    img_in_cols_c_i_full_n;
wire   [9:0] img_in_cols_c_i_dout;
wire    img_in_cols_c_i_empty_n;
wire    img_in_0_data_V_full_n;
wire   [23:0] img_in_0_data_V_dout;
wire    img_in_0_data_V_empty_n;
wire    img_in_1_data_V_full_n;
wire   [23:0] img_in_1_data_V_dout;
wire    img_in_1_data_V_empty_n;
wire    img_in_2_data_V_full_n;
wire   [23:0] img_in_2_data_V_dout;
wire    img_in_2_data_V_empty_n;
wire    img_in_3_data_V_full_n;
wire   [23:0] img_in_3_data_V_dout;
wire    img_in_3_data_V_empty_n;
wire    r_channel_data_V_full_n;
wire   [7:0] r_channel_data_V_dout;
wire    r_channel_data_V_empty_n;
wire    extract_channels_U0_r_channel_data_V_empty_n;
wire    extract_channels_U0_r_channel_data_V_read;
wire   [7:0] extract_channels_U0_r_channel_data_V_dout;
wire    g_channel_data_V_full_n;
wire   [7:0] g_channel_data_V_dout;
wire    g_channel_data_V_empty_n;
wire    extract_channels_U0_g_channel_data_V_empty_n;
wire    extract_channels_U0_g_channel_data_V_read;
wire   [7:0] extract_channels_U0_g_channel_data_V_dout;
wire    b_channel_data_V_full_n;
wire   [7:0] b_channel_data_V_dout;
wire    b_channel_data_V_empty_n;
wire    extract_channels_U0_b_channel_data_V_empty_n;
wire    extract_channels_U0_b_channel_data_V_read;
wire   [7:0] extract_channels_U0_b_channel_data_V_dout;
wire    max_r_c_i_full_n;
wire   [31:0] max_r_c_i_dout;
wire    max_r_c_i_empty_n;
wire    max_g_c_i_full_n;
wire   [31:0] max_g_c_i_dout;
wire    max_g_c_i_empty_n;
wire    max_b_c_i_full_n;
wire   [31:0] max_b_c_i_dout;
wire    max_b_c_i_empty_n;
wire    max_r_c14_i_full_n;
wire   [31:0] max_r_c14_i_dout;
wire    max_r_c14_i_empty_n;
wire    max_g_c15_i_full_n;
wire   [31:0] max_g_c15_i_dout;
wire    max_g_c15_i_empty_n;
wire    max_b_c16_i_full_n;
wire   [31:0] max_b_c16_i_dout;
wire    max_b_c16_i_empty_n;
wire    veg_temp_data_V_full_n;
wire   [31:0] veg_temp_data_V_dout;
wire    veg_temp_data_V_empty_n;
wire    min_value_V_c_i_full_n;
wire   [27:0] min_value_V_c_i_dout;
wire    min_value_V_c_i_empty_n;
wire    max_value_V_c_i_full_n;
wire   [28:0] max_value_V_c_i_dout;
wire    max_value_V_c_i_empty_n;
wire   [23:0] extLd_cast_loc_chann_dout;
wire    extLd_cast_loc_chann_empty_n;
wire    min_value_V_c17_i_full_n;
wire   [27:0] min_value_V_c17_i_dout;
wire    min_value_V_c17_i_empty_n;
wire   [23:0] sub_ln703_cast_loc_c_dout;
wire    sub_ln703_cast_loc_c_empty_n;
wire    ap_sync_done;
wire    ap_sync_ready;
reg    ap_sync_reg_get_vegetation_image_113_U0_ap_ready;
wire    ap_sync_get_vegetation_image_113_U0_ap_ready;
reg   [1:0] get_vegetation_image_113_U0_ap_ready_count;
reg    ap_sync_reg_duplicateMat635769_U0_ap_ready;
wire    ap_sync_duplicateMat635769_U0_ap_ready;
reg   [1:0] duplicateMat635769_U0_ap_ready_count;
wire    get_vegetation_image_113_U0_start_full_n;
wire    get_vegetation_image_113_U0_start_write;
wire   [0:0] start_for_duplicateMat_U0_din;
wire    start_for_duplicateMat_U0_full_n;
wire   [0:0] start_for_duplicateMat_U0_dout;
wire    start_for_duplicateMat_U0_empty_n;
wire   [0:0] start_for_extract_channels_U0_din;
wire    start_for_extract_channels_U0_full_n;
wire   [0:0] start_for_extract_channels_U0_dout;
wire    start_for_extract_channels_U0_empty_n;
wire    duplicateMat_U0_start_full_n;
wire    duplicateMat_U0_start_write;
wire    extract_channels_U0_start_full_n;
wire    extract_channels_U0_start_write;
wire    get_max_from_channel_U0_start_full_n;
wire    get_max_from_channel_U0_start_write;
wire    get_vegetation_image_U0_start_full_n;
wire    get_vegetation_image_U0_start_write;
wire    get_exg_image_U0_start_full_n;
wire    get_exg_image_U0_start_write;
wire    get_vegetation_image_3_U0_start_full_n;
wire    get_vegetation_image_3_U0_start_write;
wire    get_vegetation_image_2_U0_start_full_n;
wire    get_vegetation_image_2_U0_start_write;
wire    convert_fp_to_8b770_U0_start_full_n;
wire    convert_fp_to_8b770_U0_start_write;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_sync_reg_channel_write_img_in_0_cols_channe = 1'b0;
#0 ap_sync_reg_channel_write_img_in_0_rows_channe = 1'b0;
#0 ap_sync_reg_get_max_from_channel_U0_ap_start = 1'b0;
#0 ap_sync_reg_get_vegetation_image_U0_ap_start = 1'b0;
#0 ap_sync_reg_get_exg_image_U0_ap_start = 1'b0;
#0 ap_sync_reg_get_vegetation_image_3_U0_ap_start = 1'b0;
#0 ap_sync_reg_get_vegetation_image_113_U0_ap_ready = 1'b0;
#0 get_vegetation_image_113_U0_ap_ready_count = 2'd0;
#0 ap_sync_reg_duplicateMat635769_U0_ap_ready = 1'b0;
#0 duplicateMat635769_U0_ap_ready_count = 2'd0;
end

get_vegetation_image_113 get_vegetation_image_113_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(get_vegetation_image_113_U0_ap_start),
    .ap_done(get_vegetation_image_113_U0_ap_done),
    .ap_continue(get_vegetation_image_113_U0_ap_continue),
    .ap_idle(get_vegetation_image_113_U0_ap_idle),
    .ap_ready(get_vegetation_image_113_U0_ap_ready),
    .img_in_0_rows0(get_vegetation_image_113_U0_img_in_0_rows0),
    .img_in_0_rows0_ap_vld(get_vegetation_image_113_U0_img_in_0_rows0_ap_vld),
    .img_in_0_cols0(get_vegetation_image_113_U0_img_in_0_cols0),
    .img_in_0_cols0_ap_vld(get_vegetation_image_113_U0_img_in_0_cols0_ap_vld),
    .img_in_cols_dout(img_in_cols_dout),
    .img_in_cols_empty_n(img_in_cols_empty_n),
    .img_in_cols_read(get_vegetation_image_113_U0_img_in_cols_read),
    .img_in_cols_out_din(get_vegetation_image_113_U0_img_in_cols_out_din),
    .img_in_cols_out_full_n(img_in_cols_c_i_full_n),
    .img_in_cols_out_write(get_vegetation_image_113_U0_img_in_cols_out_write)
);

duplicateMat635769 duplicateMat635769_U0(
    .ap_start(duplicateMat635769_U0_ap_start),
    .start_full_n(duplicateMat635769_U0_start_full_n),
    .start_out(duplicateMat635769_U0_start_out),
    .start_write(duplicateMat635769_U0_start_write),
    .p_src_cols_dout(img_in_cols_c_i_dout),
    .p_src_cols_empty_n(img_in_cols_c_i_empty_n),
    .p_src_cols_read(duplicateMat635769_U0_p_src_cols_read),
    .p_src_data_V_dout(img_in_data_V_dout),
    .p_src_data_V_empty_n(img_in_data_V_empty_n),
    .p_src_data_V_read(duplicateMat635769_U0_p_src_data_V_read),
    .p_dst1_rows(img_in_0_rows_channe_dout),
    .p_dst1_cols(img_in_0_cols_channe_dout),
    .p_dst1_data_V_din(duplicateMat635769_U0_p_dst1_data_V_din),
    .p_dst1_data_V_full_n(img_in_0_data_V_full_n),
    .p_dst1_data_V_write(duplicateMat635769_U0_p_dst1_data_V_write),
    .p_dst2_data_V_din(duplicateMat635769_U0_p_dst2_data_V_din),
    .p_dst2_data_V_full_n(img_in_1_data_V_full_n),
    .p_dst2_data_V_write(duplicateMat635769_U0_p_dst2_data_V_write),
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .p_dst1_rows_ap_vld(1'b0),
    .p_dst1_cols_ap_vld(1'b0),
    .ap_done(duplicateMat635769_U0_ap_done),
    .ap_ready(duplicateMat635769_U0_ap_ready),
    .ap_idle(duplicateMat635769_U0_ap_idle),
    .ap_continue(duplicateMat635769_U0_ap_continue)
);

duplicateMat duplicateMat_U0(
    .p_src_data_V_dout(img_in_0_data_V_dout),
    .p_src_data_V_empty_n(img_in_0_data_V_empty_n),
    .p_src_data_V_read(duplicateMat_U0_p_src_data_V_read),
    .p_dst1_data_V_din(duplicateMat_U0_p_dst1_data_V_din),
    .p_dst1_data_V_full_n(img_in_2_data_V_full_n),
    .p_dst1_data_V_write(duplicateMat_U0_p_dst1_data_V_write),
    .p_dst2_data_V_din(duplicateMat_U0_p_dst2_data_V_din),
    .p_dst2_data_V_full_n(img_in_3_data_V_full_n),
    .p_dst2_data_V_write(duplicateMat_U0_p_dst2_data_V_write),
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(duplicateMat_U0_ap_start),
    .ap_done(duplicateMat_U0_ap_done),
    .ap_ready(duplicateMat_U0_ap_ready),
    .ap_idle(duplicateMat_U0_ap_idle),
    .ap_continue(duplicateMat_U0_ap_continue)
);

extract_channels extract_channels_U0(
    .img_in_0_data_V_dout(img_in_1_data_V_dout),
    .img_in_0_data_V_empty_n(img_in_1_data_V_empty_n),
    .img_in_0_data_V_read(extract_channels_U0_img_in_0_data_V_read),
    .img_in_1_data_V_dout(img_in_2_data_V_dout),
    .img_in_1_data_V_empty_n(img_in_2_data_V_empty_n),
    .img_in_1_data_V_read(extract_channels_U0_img_in_1_data_V_read),
    .img_in_2_data_V_dout(img_in_3_data_V_dout),
    .img_in_2_data_V_empty_n(img_in_3_data_V_empty_n),
    .img_in_2_data_V_read(extract_channels_U0_img_in_2_data_V_read),
    .r_channel_data_V_din(extract_channels_U0_r_channel_data_V_din),
    .r_channel_data_V_full_n(r_channel_data_V_full_n),
    .r_channel_data_V_write(extract_channels_U0_r_channel_data_V_write),
    .g_channel_data_V_din(extract_channels_U0_g_channel_data_V_din),
    .g_channel_data_V_full_n(g_channel_data_V_full_n),
    .g_channel_data_V_write(extract_channels_U0_g_channel_data_V_write),
    .b_channel_data_V_din(extract_channels_U0_b_channel_data_V_din),
    .b_channel_data_V_full_n(b_channel_data_V_full_n),
    .b_channel_data_V_write(extract_channels_U0_b_channel_data_V_write),
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(extract_channels_U0_ap_start),
    .ap_done(extract_channels_U0_ap_done),
    .ap_ready(extract_channels_U0_ap_ready),
    .ap_idle(extract_channels_U0_ap_idle),
    .ap_continue(extract_channels_U0_ap_continue)
);

get_max_from_channel get_max_from_channel_U0(
    .r_channel_data_V_dout(8'd0),
    .r_channel_data_V_empty_n(1'b1),
    .r_channel_data_V_read(get_max_from_channel_U0_r_channel_data_V_read),
    .g_channel_data_V_dout(8'd0),
    .g_channel_data_V_empty_n(1'b1),
    .g_channel_data_V_read(get_max_from_channel_U0_g_channel_data_V_read),
    .b_channel_data_V_dout(8'd0),
    .b_channel_data_V_empty_n(1'b1),
    .b_channel_data_V_read(get_max_from_channel_U0_b_channel_data_V_read),
    .max_r_out_din(get_max_from_channel_U0_max_r_out_din),
    .max_r_out_full_n(max_r_c_i_full_n),
    .max_r_out_write(get_max_from_channel_U0_max_r_out_write),
    .max_g_out_din(get_max_from_channel_U0_max_g_out_din),
    .max_g_out_full_n(max_g_c_i_full_n),
    .max_g_out_write(get_max_from_channel_U0_max_g_out_write),
    .max_b_out_din(get_max_from_channel_U0_max_b_out_din),
    .max_b_out_full_n(max_b_c_i_full_n),
    .max_b_out_write(get_max_from_channel_U0_max_b_out_write),
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(get_max_from_channel_U0_ap_start),
    .ap_done(get_max_from_channel_U0_ap_done),
    .ap_ready(get_max_from_channel_U0_ap_ready),
    .ap_idle(get_max_from_channel_U0_ap_idle),
    .ap_continue(get_max_from_channel_U0_ap_continue)
);

get_vegetation_image get_vegetation_image_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(get_vegetation_image_U0_ap_start),
    .ap_done(get_vegetation_image_U0_ap_done),
    .ap_continue(get_vegetation_image_U0_ap_continue),
    .ap_idle(get_vegetation_image_U0_ap_idle),
    .ap_ready(get_vegetation_image_U0_ap_ready),
    .max_r_dout(max_r_c_i_dout),
    .max_r_empty_n(max_r_c_i_empty_n),
    .max_r_read(get_vegetation_image_U0_max_r_read),
    .max_g_dout(max_g_c_i_dout),
    .max_g_empty_n(max_g_c_i_empty_n),
    .max_g_read(get_vegetation_image_U0_max_g_read),
    .max_b_dout(max_b_c_i_dout),
    .max_b_empty_n(max_b_c_i_empty_n),
    .max_b_read(get_vegetation_image_U0_max_b_read),
    .max_r_out_din(get_vegetation_image_U0_max_r_out_din),
    .max_r_out_full_n(max_r_c14_i_full_n),
    .max_r_out_write(get_vegetation_image_U0_max_r_out_write),
    .max_g_out_din(get_vegetation_image_U0_max_g_out_din),
    .max_g_out_full_n(max_g_c15_i_full_n),
    .max_g_out_write(get_vegetation_image_U0_max_g_out_write),
    .max_b_out_din(get_vegetation_image_U0_max_b_out_din),
    .max_b_out_full_n(max_b_c16_i_full_n),
    .max_b_out_write(get_vegetation_image_U0_max_b_out_write)
);

get_exg_image get_exg_image_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(get_exg_image_U0_ap_start),
    .ap_done(get_exg_image_U0_ap_done),
    .ap_continue(get_exg_image_U0_ap_continue),
    .ap_idle(get_exg_image_U0_ap_idle),
    .ap_ready(get_exg_image_U0_ap_ready),
    .r_channel_data_V_dout(8'd0),
    .r_channel_data_V_empty_n(1'b1),
    .r_channel_data_V_read(get_exg_image_U0_r_channel_data_V_read),
    .g_channel_data_V_dout(8'd0),
    .g_channel_data_V_empty_n(1'b1),
    .g_channel_data_V_read(get_exg_image_U0_g_channel_data_V_read),
    .b_channel_data_V_dout(8'd0),
    .b_channel_data_V_empty_n(1'b1),
    .b_channel_data_V_read(get_exg_image_U0_b_channel_data_V_read),
    .max_r_dout(max_r_c14_i_dout),
    .max_r_empty_n(max_r_c14_i_empty_n),
    .max_r_read(get_exg_image_U0_max_r_read),
    .max_g_dout(max_g_c15_i_dout),
    .max_g_empty_n(max_g_c15_i_empty_n),
    .max_g_read(get_exg_image_U0_max_g_read),
    .max_b_dout(max_b_c16_i_dout),
    .max_b_empty_n(max_b_c16_i_empty_n),
    .max_b_read(get_exg_image_U0_max_b_read),
    .veg_img_data_V_din(get_exg_image_U0_veg_img_data_V_din),
    .veg_img_data_V_full_n(veg_temp_data_V_full_n),
    .veg_img_data_V_write(get_exg_image_U0_veg_img_data_V_write),
    .min_value_V_out_din(get_exg_image_U0_min_value_V_out_din),
    .min_value_V_out_full_n(min_value_V_c_i_full_n),
    .min_value_V_out_write(get_exg_image_U0_min_value_V_out_write),
    .max_value_V_out_din(get_exg_image_U0_max_value_V_out_din),
    .max_value_V_out_full_n(max_value_V_c_i_full_n),
    .max_value_V_out_write(get_exg_image_U0_max_value_V_out_write)
);

get_vegetation_image_3 get_vegetation_image_3_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(get_vegetation_image_3_U0_ap_start),
    .ap_done(get_vegetation_image_3_U0_ap_done),
    .ap_continue(get_vegetation_image_3_U0_ap_continue),
    .ap_idle(get_vegetation_image_3_U0_ap_idle),
    .ap_ready(get_vegetation_image_3_U0_ap_ready),
    .max_value_V_dout(max_value_V_c_i_dout),
    .max_value_V_empty_n(max_value_V_c_i_empty_n),
    .max_value_V_read(get_vegetation_image_3_U0_max_value_V_read),
    .ap_return(get_vegetation_image_3_U0_ap_return)
);

get_vegetation_image_2 get_vegetation_image_2_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(get_vegetation_image_2_U0_ap_start),
    .ap_done(get_vegetation_image_2_U0_ap_done),
    .ap_continue(get_vegetation_image_2_U0_ap_continue),
    .ap_idle(get_vegetation_image_2_U0_ap_idle),
    .ap_ready(get_vegetation_image_2_U0_ap_ready),
    .min_value_V_dout(min_value_V_c_i_dout),
    .min_value_V_empty_n(min_value_V_c_i_empty_n),
    .min_value_V_read(get_vegetation_image_2_U0_min_value_V_read),
    .p_read(extLd_cast_loc_chann_dout),
    .min_value_V_out_din(get_vegetation_image_2_U0_min_value_V_out_din),
    .min_value_V_out_full_n(min_value_V_c17_i_full_n),
    .min_value_V_out_write(get_vegetation_image_2_U0_min_value_V_out_write),
    .ap_return(get_vegetation_image_2_U0_ap_return)
);

convert_fp_to_8b770 convert_fp_to_8b770_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(convert_fp_to_8b770_U0_ap_start),
    .ap_done(convert_fp_to_8b770_U0_ap_done),
    .ap_continue(convert_fp_to_8b770_U0_ap_continue),
    .ap_idle(convert_fp_to_8b770_U0_ap_idle),
    .ap_ready(convert_fp_to_8b770_U0_ap_ready),
    .min_value_V_c17_dout(min_value_V_c17_i_dout),
    .min_value_V_c17_empty_n(min_value_V_c17_i_empty_n),
    .min_value_V_c17_read(convert_fp_to_8b770_U0_min_value_V_c17_read),
    .sub_ln703_cast_loc_c(sub_ln703_cast_loc_c_dout),
    .veg_temp_data_V_dout(veg_temp_data_V_dout),
    .veg_temp_data_V_empty_n(veg_temp_data_V_empty_n),
    .veg_temp_data_V_read(convert_fp_to_8b770_U0_veg_temp_data_V_read),
    .img_out_data_V_din(convert_fp_to_8b770_U0_img_out_data_V_din),
    .img_out_data_V_full_n(img_out_data_V_full_n),
    .img_out_data_V_write(convert_fp_to_8b770_U0_img_out_data_V_write)
);

fifo_w9_d2_A img_in_0_rows_channe_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(get_vegetation_image_113_U0_img_in_0_rows0),
    .if_full_n(img_in_0_rows_channe_full_n),
    .if_write(ap_channel_done_img_in_0_rows_channe),
    .if_dout(img_in_0_rows_channe_dout),
    .if_empty_n(img_in_0_rows_channe_empty_n),
    .if_read(duplicateMat635769_U0_ap_ready)
);

fifo_w10_d2_A_x0 img_in_0_cols_channe_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(get_vegetation_image_113_U0_img_in_0_cols0),
    .if_full_n(img_in_0_cols_channe_full_n),
    .if_write(ap_channel_done_img_in_0_cols_channe),
    .if_dout(img_in_0_cols_channe_dout),
    .if_empty_n(img_in_0_cols_channe_empty_n),
    .if_read(duplicateMat635769_U0_ap_ready)
);

fifo_w10_d2_A_x0 img_in_cols_c_i_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(get_vegetation_image_113_U0_img_in_cols_out_din),
    .if_full_n(img_in_cols_c_i_full_n),
    .if_write(get_vegetation_image_113_U0_img_in_cols_out_write),
    .if_dout(img_in_cols_c_i_dout),
    .if_empty_n(img_in_cols_c_i_empty_n),
    .if_read(duplicateMat635769_U0_p_src_cols_read)
);

fifo_w24_d1_A img_in_0_data_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(duplicateMat635769_U0_p_dst1_data_V_din),
    .if_full_n(img_in_0_data_V_full_n),
    .if_write(duplicateMat635769_U0_p_dst1_data_V_write),
    .if_dout(img_in_0_data_V_dout),
    .if_empty_n(img_in_0_data_V_empty_n),
    .if_read(duplicateMat_U0_p_src_data_V_read)
);

fifo_w24_d1_A img_in_1_data_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(duplicateMat635769_U0_p_dst2_data_V_din),
    .if_full_n(img_in_1_data_V_full_n),
    .if_write(duplicateMat635769_U0_p_dst2_data_V_write),
    .if_dout(img_in_1_data_V_dout),
    .if_empty_n(img_in_1_data_V_empty_n),
    .if_read(extract_channels_U0_img_in_0_data_V_read)
);

fifo_w24_d1_A img_in_2_data_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(duplicateMat_U0_p_dst1_data_V_din),
    .if_full_n(img_in_2_data_V_full_n),
    .if_write(duplicateMat_U0_p_dst1_data_V_write),
    .if_dout(img_in_2_data_V_dout),
    .if_empty_n(img_in_2_data_V_empty_n),
    .if_read(extract_channels_U0_img_in_1_data_V_read)
);

fifo_w24_d1_A img_in_3_data_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(duplicateMat_U0_p_dst2_data_V_din),
    .if_full_n(img_in_3_data_V_full_n),
    .if_write(duplicateMat_U0_p_dst2_data_V_write),
    .if_dout(img_in_3_data_V_dout),
    .if_empty_n(img_in_3_data_V_empty_n),
    .if_read(extract_channels_U0_img_in_2_data_V_read)
);

fifo_w8_d1_A r_channel_data_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(extract_channels_U0_r_channel_data_V_din),
    .if_full_n(r_channel_data_V_full_n),
    .if_write(extract_channels_U0_r_channel_data_V_write),
    .if_dout(r_channel_data_V_dout),
    .if_empty_n(r_channel_data_V_empty_n),
    .if_read(extract_channels_U0_r_channel_data_V_read)
);

fifo_w8_d1_A g_channel_data_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(extract_channels_U0_g_channel_data_V_din),
    .if_full_n(g_channel_data_V_full_n),
    .if_write(extract_channels_U0_g_channel_data_V_write),
    .if_dout(g_channel_data_V_dout),
    .if_empty_n(g_channel_data_V_empty_n),
    .if_read(extract_channels_U0_g_channel_data_V_read)
);

fifo_w8_d1_A b_channel_data_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(extract_channels_U0_b_channel_data_V_din),
    .if_full_n(b_channel_data_V_full_n),
    .if_write(extract_channels_U0_b_channel_data_V_write),
    .if_dout(b_channel_data_V_dout),
    .if_empty_n(b_channel_data_V_empty_n),
    .if_read(extract_channels_U0_b_channel_data_V_read)
);

fifo_w32_d2_A_x max_r_c_i_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(get_max_from_channel_U0_max_r_out_din),
    .if_full_n(max_r_c_i_full_n),
    .if_write(get_max_from_channel_U0_max_r_out_write),
    .if_dout(max_r_c_i_dout),
    .if_empty_n(max_r_c_i_empty_n),
    .if_read(get_vegetation_image_U0_max_r_read)
);

fifo_w32_d2_A_x max_g_c_i_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(get_max_from_channel_U0_max_g_out_din),
    .if_full_n(max_g_c_i_full_n),
    .if_write(get_max_from_channel_U0_max_g_out_write),
    .if_dout(max_g_c_i_dout),
    .if_empty_n(max_g_c_i_empty_n),
    .if_read(get_vegetation_image_U0_max_g_read)
);

fifo_w32_d2_A_x max_b_c_i_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(get_max_from_channel_U0_max_b_out_din),
    .if_full_n(max_b_c_i_full_n),
    .if_write(get_max_from_channel_U0_max_b_out_write),
    .if_dout(max_b_c_i_dout),
    .if_empty_n(max_b_c_i_empty_n),
    .if_read(get_vegetation_image_U0_max_b_read)
);

fifo_w32_d2_A_x max_r_c14_i_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(get_vegetation_image_U0_max_r_out_din),
    .if_full_n(max_r_c14_i_full_n),
    .if_write(get_vegetation_image_U0_max_r_out_write),
    .if_dout(max_r_c14_i_dout),
    .if_empty_n(max_r_c14_i_empty_n),
    .if_read(get_exg_image_U0_max_r_read)
);

fifo_w32_d2_A_x max_g_c15_i_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(get_vegetation_image_U0_max_g_out_din),
    .if_full_n(max_g_c15_i_full_n),
    .if_write(get_vegetation_image_U0_max_g_out_write),
    .if_dout(max_g_c15_i_dout),
    .if_empty_n(max_g_c15_i_empty_n),
    .if_read(get_exg_image_U0_max_g_read)
);

fifo_w32_d2_A_x max_b_c16_i_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(get_vegetation_image_U0_max_b_out_din),
    .if_full_n(max_b_c16_i_full_n),
    .if_write(get_vegetation_image_U0_max_b_out_write),
    .if_dout(max_b_c16_i_dout),
    .if_empty_n(max_b_c16_i_empty_n),
    .if_read(get_exg_image_U0_max_b_read)
);

fifo_w32_d1_A veg_temp_data_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(get_exg_image_U0_veg_img_data_V_din),
    .if_full_n(veg_temp_data_V_full_n),
    .if_write(get_exg_image_U0_veg_img_data_V_write),
    .if_dout(veg_temp_data_V_dout),
    .if_empty_n(veg_temp_data_V_empty_n),
    .if_read(convert_fp_to_8b770_U0_veg_temp_data_V_read)
);

fifo_w28_d3_A min_value_V_c_i_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(get_exg_image_U0_min_value_V_out_din),
    .if_full_n(min_value_V_c_i_full_n),
    .if_write(get_exg_image_U0_min_value_V_out_write),
    .if_dout(min_value_V_c_i_dout),
    .if_empty_n(min_value_V_c_i_empty_n),
    .if_read(get_vegetation_image_2_U0_min_value_V_read)
);

fifo_w29_d2_A max_value_V_c_i_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(get_exg_image_U0_max_value_V_out_din),
    .if_full_n(max_value_V_c_i_full_n),
    .if_write(get_exg_image_U0_max_value_V_out_write),
    .if_dout(max_value_V_c_i_dout),
    .if_empty_n(max_value_V_c_i_empty_n),
    .if_read(get_vegetation_image_3_U0_max_value_V_read)
);

fifo_w24_d2_A_x1 extLd_cast_loc_chann_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(get_vegetation_image_3_U0_ap_return),
    .if_full_n(extLd_cast_loc_chann_full_n),
    .if_write(get_vegetation_image_3_U0_ap_done),
    .if_dout(extLd_cast_loc_chann_dout),
    .if_empty_n(extLd_cast_loc_chann_empty_n),
    .if_read(get_vegetation_image_2_U0_ap_ready)
);

fifo_w28_d2_A min_value_V_c17_i_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(get_vegetation_image_2_U0_min_value_V_out_din),
    .if_full_n(min_value_V_c17_i_full_n),
    .if_write(get_vegetation_image_2_U0_min_value_V_out_write),
    .if_dout(min_value_V_c17_i_dout),
    .if_empty_n(min_value_V_c17_i_empty_n),
    .if_read(convert_fp_to_8b770_U0_min_value_V_c17_read)
);

fifo_w24_d2_A_x1 sub_ln703_cast_loc_c_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(get_vegetation_image_2_U0_ap_return),
    .if_full_n(sub_ln703_cast_loc_c_full_n),
    .if_write(get_vegetation_image_2_U0_ap_done),
    .if_dout(sub_ln703_cast_loc_c_dout),
    .if_empty_n(sub_ln703_cast_loc_c_empty_n),
    .if_read(convert_fp_to_8b770_U0_ap_ready)
);

start_for_duplicasc4 start_for_duplicasc4_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_duplicateMat_U0_din),
    .if_full_n(start_for_duplicateMat_U0_full_n),
    .if_write(duplicateMat635769_U0_start_write),
    .if_dout(start_for_duplicateMat_U0_dout),
    .if_empty_n(start_for_duplicateMat_U0_empty_n),
    .if_read(duplicateMat_U0_ap_ready)
);

start_for_extracttde start_for_extracttde_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_extract_channels_U0_din),
    .if_full_n(start_for_extract_channels_U0_full_n),
    .if_write(duplicateMat635769_U0_start_write),
    .if_dout(start_for_extract_channels_U0_dout),
    .if_empty_n(start_for_extract_channels_U0_empty_n),
    .if_read(extract_channels_U0_ap_ready)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_img_in_0_cols_channe <= 1'b0;
    end else begin
        if (((get_vegetation_image_113_U0_ap_done & get_vegetation_image_113_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_img_in_0_cols_channe <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_img_in_0_cols_channe <= ap_sync_channel_write_img_in_0_cols_channe;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_img_in_0_rows_channe <= 1'b0;
    end else begin
        if (((get_vegetation_image_113_U0_ap_done & get_vegetation_image_113_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_img_in_0_rows_channe <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_img_in_0_rows_channe <= ap_sync_channel_write_img_in_0_rows_channe;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_duplicateMat635769_U0_ap_ready <= 1'b0;
    end else begin
        if (((real_start & ap_sync_ready) == 1'b1)) begin
            ap_sync_reg_duplicateMat635769_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_duplicateMat635769_U0_ap_ready <= ap_sync_duplicateMat635769_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_get_exg_image_U0_ap_start <= 1'b0;
    end else begin
        if ((real_start == 1'b1)) begin
            ap_sync_reg_get_exg_image_U0_ap_start <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_get_max_from_channel_U0_ap_start <= 1'b0;
    end else begin
        if ((real_start == 1'b1)) begin
            ap_sync_reg_get_max_from_channel_U0_ap_start <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_get_vegetation_image_113_U0_ap_ready <= 1'b0;
    end else begin
        if (((real_start & ap_sync_ready) == 1'b1)) begin
            ap_sync_reg_get_vegetation_image_113_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_get_vegetation_image_113_U0_ap_ready <= ap_sync_get_vegetation_image_113_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_get_vegetation_image_3_U0_ap_start <= 1'b0;
    end else begin
        if ((real_start == 1'b1)) begin
            ap_sync_reg_get_vegetation_image_3_U0_ap_start <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_get_vegetation_image_U0_ap_start <= 1'b0;
    end else begin
        if ((real_start == 1'b1)) begin
            ap_sync_reg_get_vegetation_image_U0_ap_start <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((duplicateMat635769_U0_ap_ready == 1'b0) & (ap_sync_ready == 1'b1))) begin
        duplicateMat635769_U0_ap_ready_count <= (duplicateMat635769_U0_ap_ready_count - 2'd1);
    end else if (((ap_sync_ready == 1'b0) & (duplicateMat635769_U0_ap_ready == 1'b1))) begin
        duplicateMat635769_U0_ap_ready_count <= (duplicateMat635769_U0_ap_ready_count + 2'd1);
    end
end

always @ (posedge ap_clk) begin
    if (((get_vegetation_image_113_U0_ap_ready == 1'b0) & (ap_sync_ready == 1'b1))) begin
        get_vegetation_image_113_U0_ap_ready_count <= (get_vegetation_image_113_U0_ap_ready_count - 2'd1);
    end else if (((ap_sync_ready == 1'b0) & (get_vegetation_image_113_U0_ap_ready == 1'b1))) begin
        get_vegetation_image_113_U0_ap_ready_count <= (get_vegetation_image_113_U0_ap_ready_count + 2'd1);
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

assign ap_channel_done_extLd_cast_loc_chann = get_vegetation_image_3_U0_ap_done;

assign ap_channel_done_img_in_0_cols_channe = (get_vegetation_image_113_U0_ap_done & (ap_sync_reg_channel_write_img_in_0_cols_channe ^ 1'b1));

assign ap_channel_done_img_in_0_rows_channe = (get_vegetation_image_113_U0_ap_done & (ap_sync_reg_channel_write_img_in_0_rows_channe ^ 1'b1));

assign ap_channel_done_sub_ln703_cast_loc_c = get_vegetation_image_2_U0_ap_done;

assign ap_done = convert_fp_to_8b770_U0_ap_done;

assign ap_idle = (get_vegetation_image_U0_ap_idle & get_vegetation_image_3_U0_ap_idle & get_vegetation_image_2_U0_ap_idle & get_vegetation_image_113_U0_ap_idle & get_max_from_channel_U0_ap_idle & get_exg_image_U0_ap_idle & extract_channels_U0_ap_idle & (sub_ln703_cast_loc_c_empty_n ^ 1'b1) & (extLd_cast_loc_chann_empty_n ^ 1'b1) & (img_in_0_cols_channe_empty_n ^ 1'b1) & (img_in_0_rows_channe_empty_n ^ 1'b1) & duplicateMat_U0_ap_idle & duplicateMat635769_U0_ap_idle & convert_fp_to_8b770_U0_ap_idle);

assign ap_ready = internal_ap_ready;

assign ap_sync_channel_write_img_in_0_cols_channe = ((img_in_0_cols_channe_full_n & ap_channel_done_img_in_0_cols_channe) | ap_sync_reg_channel_write_img_in_0_cols_channe);

assign ap_sync_channel_write_img_in_0_rows_channe = ((img_in_0_rows_channe_full_n & ap_channel_done_img_in_0_rows_channe) | ap_sync_reg_channel_write_img_in_0_rows_channe);

assign ap_sync_continue = ap_continue;

assign ap_sync_done = convert_fp_to_8b770_U0_ap_done;

assign ap_sync_duplicateMat635769_U0_ap_ready = (duplicateMat635769_U0_ap_ready | ap_sync_reg_duplicateMat635769_U0_ap_ready);

assign ap_sync_get_vegetation_image_113_U0_ap_ready = (get_vegetation_image_113_U0_ap_ready | ap_sync_reg_get_vegetation_image_113_U0_ap_ready);

assign ap_sync_ready = (ap_sync_get_vegetation_image_113_U0_ap_ready & ap_sync_duplicateMat635769_U0_ap_ready);

assign convert_fp_to_8b770_U0_ap_continue = ap_continue;

assign convert_fp_to_8b770_U0_ap_start = sub_ln703_cast_loc_c_empty_n;

assign convert_fp_to_8b770_U0_start_full_n = 1'b1;

assign convert_fp_to_8b770_U0_start_write = 1'b0;

assign duplicateMat635769_U0_ap_continue = 1'b1;

assign duplicateMat635769_U0_ap_start = (real_start & img_in_0_rows_channe_empty_n & img_in_0_cols_channe_empty_n & (ap_sync_reg_duplicateMat635769_U0_ap_ready ^ 1'b1));

assign duplicateMat635769_U0_start_full_n = (start_for_extract_channels_U0_full_n & start_for_duplicateMat_U0_full_n);

assign duplicateMat_U0_ap_continue = 1'b1;

assign duplicateMat_U0_ap_start = start_for_duplicateMat_U0_empty_n;

assign duplicateMat_U0_start_full_n = 1'b1;

assign duplicateMat_U0_start_write = 1'b0;

assign extract_channels_U0_ap_continue = 1'b1;

assign extract_channels_U0_ap_start = start_for_extract_channels_U0_empty_n;

assign extract_channels_U0_b_channel_data_V_dout = b_channel_data_V_dout;

assign extract_channels_U0_b_channel_data_V_empty_n = b_channel_data_V_empty_n;

assign extract_channels_U0_b_channel_data_V_read = 1'b0;

assign extract_channels_U0_g_channel_data_V_dout = g_channel_data_V_dout;

assign extract_channels_U0_g_channel_data_V_empty_n = g_channel_data_V_empty_n;

assign extract_channels_U0_g_channel_data_V_read = 1'b0;

assign extract_channels_U0_r_channel_data_V_dout = r_channel_data_V_dout;

assign extract_channels_U0_r_channel_data_V_empty_n = r_channel_data_V_empty_n;

assign extract_channels_U0_r_channel_data_V_read = 1'b0;

assign extract_channels_U0_start_full_n = 1'b1;

assign extract_channels_U0_start_write = 1'b0;

assign get_exg_image_U0_ap_continue = 1'b1;

assign get_exg_image_U0_ap_start = (real_start | ap_sync_reg_get_exg_image_U0_ap_start);

assign get_exg_image_U0_start_full_n = 1'b1;

assign get_exg_image_U0_start_write = 1'b0;

assign get_max_from_channel_U0_ap_continue = 1'b1;

assign get_max_from_channel_U0_ap_start = (real_start | ap_sync_reg_get_max_from_channel_U0_ap_start);

assign get_max_from_channel_U0_start_full_n = 1'b1;

assign get_max_from_channel_U0_start_write = 1'b0;

assign get_vegetation_image_113_U0_ap_continue = (ap_sync_channel_write_img_in_0_rows_channe & ap_sync_channel_write_img_in_0_cols_channe);

assign get_vegetation_image_113_U0_ap_start = (real_start & (ap_sync_reg_get_vegetation_image_113_U0_ap_ready ^ 1'b1));

assign get_vegetation_image_113_U0_start_full_n = 1'b1;

assign get_vegetation_image_113_U0_start_write = 1'b0;

assign get_vegetation_image_2_U0_ap_continue = sub_ln703_cast_loc_c_full_n;

assign get_vegetation_image_2_U0_ap_start = extLd_cast_loc_chann_empty_n;

assign get_vegetation_image_2_U0_start_full_n = 1'b1;

assign get_vegetation_image_2_U0_start_write = 1'b0;

assign get_vegetation_image_3_U0_ap_continue = extLd_cast_loc_chann_full_n;

assign get_vegetation_image_3_U0_ap_start = (real_start | ap_sync_reg_get_vegetation_image_3_U0_ap_start);

assign get_vegetation_image_3_U0_start_full_n = 1'b1;

assign get_vegetation_image_3_U0_start_write = 1'b0;

assign get_vegetation_image_U0_ap_continue = 1'b1;

assign get_vegetation_image_U0_ap_start = (real_start | ap_sync_reg_get_vegetation_image_U0_ap_start);

assign get_vegetation_image_U0_start_full_n = 1'b1;

assign get_vegetation_image_U0_start_write = 1'b0;

assign img_in_cols_read = get_vegetation_image_113_U0_img_in_cols_read;

assign img_in_data_V_read = duplicateMat635769_U0_p_src_data_V_read;

assign img_out_data_V_din = convert_fp_to_8b770_U0_img_out_data_V_din;

assign img_out_data_V_write = convert_fp_to_8b770_U0_img_out_data_V_write;

assign internal_ap_ready = ap_sync_ready;

assign start_for_duplicateMat_U0_din = 1'b1;

assign start_for_extract_channels_U0_din = 1'b1;

assign start_out = real_start;

endmodule //get_vegetation_image_4
