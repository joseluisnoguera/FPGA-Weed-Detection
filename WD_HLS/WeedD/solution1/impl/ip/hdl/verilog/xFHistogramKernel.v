// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module xFHistogramKernel (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        p_src_mat_data_V_dout,
        p_src_mat_data_V_empty_n,
        p_src_mat_data_V_read,
        hist_array_address0,
        hist_array_ce0,
        hist_array_we0,
        hist_array_d0
);

parameter    ap_ST_fsm_state1 = 11'd1;
parameter    ap_ST_fsm_state2 = 11'd2;
parameter    ap_ST_fsm_state3 = 11'd4;
parameter    ap_ST_fsm_state4 = 11'd8;
parameter    ap_ST_fsm_state5 = 11'd16;
parameter    ap_ST_fsm_state6 = 11'd32;
parameter    ap_ST_fsm_pp1_stage0 = 11'd64;
parameter    ap_ST_fsm_pp1_stage1 = 11'd128;
parameter    ap_ST_fsm_state11 = 11'd256;
parameter    ap_ST_fsm_pp2_stage0 = 11'd512;
parameter    ap_ST_fsm_state14 = 11'd1024;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [7:0] p_src_mat_data_V_dout;
input   p_src_mat_data_V_empty_n;
output   p_src_mat_data_V_read;
output  [7:0] hist_array_address0;
output   hist_array_ce0;
output   hist_array_we0;
output  [31:0] hist_array_d0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg p_src_mat_data_V_read;
reg hist_array_ce0;
reg hist_array_we0;

(* fsm_encoding = "none" *) reg   [10:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    p_src_mat_data_V_blk_n;
wire    ap_CS_fsm_pp1_stage1;
reg    ap_enable_reg_pp1_iter0;
wire    ap_block_pp1_stage1;
reg   [0:0] icmp_ln887_13_reg_401;
wire    ap_CS_fsm_pp1_stage0;
reg    ap_enable_reg_pp1_iter1;
wire    ap_block_pp1_stage0;
reg   [8:0] p_0396_0_reg_219;
reg   [8:0] t_V_7_reg_231;
wire   [7:0] add_ln47_fu_242_p2;
wire    ap_CS_fsm_state2;
wire   [7:0] add_ln48_fu_259_p2;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln48_fu_270_p2;
wire   [8:0] i_V_fu_282_p2;
wire    ap_CS_fsm_state4;
wire   [0:0] icmp_ln887_12_fu_294_p2;
wire    ap_CS_fsm_state6;
wire   [7:0] row_V_fu_300_p2;
reg   [7:0] row_V_reg_396;
wire   [0:0] icmp_ln887_13_fu_306_p2;
wire    ap_block_state7_pp1_stage0_iter0;
reg    ap_block_state9_pp1_stage0_iter1;
reg    ap_block_pp1_stage0_11001;
reg   [0:0] icmp_ln887_13_reg_401_pp1_iter1_reg;
reg   [7:0] tmp_hist_0_addr_3_reg_405;
reg    ap_block_state8_pp1_stage1_iter0;
wire    ap_block_state10_pp1_stage1_iter1;
reg    ap_block_pp1_stage1_11001;
wire   [8:0] col_V_fu_317_p2;
reg   [8:0] col_V_reg_410;
reg   [7:0] tmp_hist1_0_addr_3_reg_415;
wire   [0:0] icmp_ln887_14_fu_342_p2;
reg   [0:0] icmp_ln887_14_reg_420;
wire    ap_CS_fsm_pp2_stage0;
wire    ap_block_state12_pp2_stage0_iter0;
wire    ap_block_state13_pp2_stage0_iter1;
wire    ap_block_pp2_stage0_11001;
wire   [8:0] i_V_1_fu_348_p2;
reg    ap_enable_reg_pp2_iter0;
wire   [63:0] zext_ln544_4_fu_354_p1;
reg   [63:0] zext_ln544_4_reg_429;
reg    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state7;
reg    ap_block_pp1_stage1_subdone;
wire    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state12;
reg    ap_enable_reg_pp2_iter1;
reg   [7:0] tmp_hist_0_address0;
reg    tmp_hist_0_ce0;
reg    tmp_hist_0_we0;
reg   [31:0] tmp_hist_0_d0;
wire   [31:0] tmp_hist_0_q0;
reg   [7:0] tmp_hist1_0_address0;
reg    tmp_hist1_0_ce0;
reg    tmp_hist1_0_we0;
reg   [31:0] tmp_hist1_0_d0;
wire   [31:0] tmp_hist1_0_q0;
reg   [7:0] phi_ln47_reg_175;
wire   [0:0] icmp_ln47_fu_253_p2;
reg   [7:0] phi_ln48_reg_186;
reg   [8:0] t_V_reg_197;
wire   [0:0] icmp_ln887_fu_276_p2;
reg   [7:0] t_V_6_reg_208;
wire    ap_CS_fsm_state11;
wire    ap_CS_fsm_state5;
reg   [8:0] ap_phi_mux_p_0396_0_phi_fu_223_p4;
wire   [63:0] zext_ln47_fu_248_p1;
wire   [63:0] zext_ln48_fu_265_p1;
wire   [63:0] zext_ln544_fu_288_p1;
wire   [63:0] zext_ln544_5_fu_312_p1;
wire   [63:0] zext_ln544_6_fu_323_p1;
wire    ap_block_pp2_stage0;
wire   [31:0] add_ln97_fu_328_p2;
wire   [31:0] add_ln99_fu_335_p2;
wire    ap_CS_fsm_state14;
reg   [10:0] ap_NS_fsm;
reg    ap_block_pp1;
reg    ap_block_pp2;
reg    ap_enable_operation_73;
reg    ap_enable_state8_pp1_iter0_stage1;
reg    ap_enable_operation_76;
reg    ap_enable_state9_pp1_iter1_stage0;
reg    ap_enable_operation_81;
reg    ap_enable_operation_79;
reg    ap_enable_operation_87;
reg    ap_enable_state10_pp1_iter1_stage1;
reg    ap_enable_operation_89;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;

// power-on initialization
initial begin
#0 ap_CS_fsm = 11'd1;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
end

xFHistogramKerneludo #(
    .DataWidth( 32 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
tmp_hist_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(tmp_hist_0_address0),
    .ce0(tmp_hist_0_ce0),
    .we0(tmp_hist_0_we0),
    .d0(tmp_hist_0_d0),
    .q0(tmp_hist_0_q0)
);

xFHistogramKerneludo #(
    .DataWidth( 32 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
tmp_hist1_0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(tmp_hist1_0_address0),
    .ce0(tmp_hist1_0_ce0),
    .we0(tmp_hist1_0_we0),
    .d0(tmp_hist1_0_d0),
    .q0(tmp_hist1_0_q0)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b1 == ap_condition_pp1_exit_iter0_state7) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if (((icmp_ln887_12_fu_294_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_subdone))) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if (((icmp_ln887_12_fu_294_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp2_exit_iter0_state12) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln887_12_fu_294_p2 == 1'd0))) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_pp2_exit_iter0_state12) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
            ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state12);
        end else if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
        end else if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln887_12_fu_294_p2 == 1'd0))) begin
            ap_enable_reg_pp2_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln887_13_reg_401 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        p_0396_0_reg_219 <= col_V_reg_410;
    end else if (((icmp_ln887_12_fu_294_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        p_0396_0_reg_219 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln47_fu_253_p2 == 1'd0))) begin
        phi_ln47_reg_175 <= add_ln47_fu_242_p2;
    end else if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        phi_ln47_reg_175 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln47_fu_253_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
        phi_ln48_reg_186 <= 8'd0;
    end else if (((icmp_ln48_fu_270_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        phi_ln48_reg_186 <= add_ln48_fu_259_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        t_V_6_reg_208 <= 8'd0;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        t_V_6_reg_208 <= row_V_reg_396;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln887_12_fu_294_p2 == 1'd0))) begin
        t_V_7_reg_231 <= 9'd0;
    end else if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln887_14_fu_342_p2 == 1'd0))) begin
        t_V_7_reg_231 <= i_V_1_fu_348_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln48_fu_270_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
        t_V_reg_197 <= 9'd0;
    end else if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln887_fu_276_p2 == 1'd0))) begin
        t_V_reg_197 <= i_V_fu_282_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln887_13_reg_401 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_11001))) begin
        col_V_reg_410 <= col_V_fu_317_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        icmp_ln887_13_reg_401 <= icmp_ln887_13_fu_306_p2;
        icmp_ln887_13_reg_401_pp1_iter1_reg <= icmp_ln887_13_reg_401;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        icmp_ln887_14_reg_420 <= icmp_ln887_14_fu_342_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        row_V_reg_396 <= row_V_fu_300_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln887_13_reg_401 == 1'd1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        tmp_hist1_0_addr_3_reg_415 <= zext_ln544_6_fu_323_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln887_13_reg_401 == 1'd1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_11001))) begin
        tmp_hist_0_addr_3_reg_405 <= zext_ln544_5_fu_312_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln887_14_fu_342_p2 == 1'd0))) begin
        zext_ln544_4_reg_429[8 : 0] <= zext_ln544_4_fu_354_p1[8 : 0];
    end
end

always @ (*) begin
    if ((icmp_ln887_13_fu_306_p2 == 1'd0)) begin
        ap_condition_pp1_exit_iter0_state7 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state7 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln887_14_fu_342_p2 == 1'd1)) begin
        ap_condition_pp2_exit_iter0_state12 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state12 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (icmp_ln887_13_reg_401 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_p_0396_0_phi_fu_223_p4 = col_V_reg_410;
    end else begin
        ap_phi_mux_p_0396_0_phi_fu_223_p4 = p_0396_0_reg_219;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        hist_array_ce0 = 1'b1;
    end else begin
        hist_array_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001) & (icmp_ln887_14_reg_420 == 1'd0))) begin
        hist_array_we0 = 1'b1;
    end else begin
        hist_array_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp1_stage0) & (icmp_ln887_13_reg_401 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0)) | ((icmp_ln887_13_reg_401 == 1'd1) & (1'b0 == ap_block_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1)))) begin
        p_src_mat_data_V_blk_n = p_src_mat_data_V_empty_n;
    end else begin
        p_src_mat_data_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((((icmp_ln887_13_reg_401 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)) | ((icmp_ln887_13_reg_401 == 1'd1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_11001)))) begin
        p_src_mat_data_V_read = 1'b1;
    end else begin
        p_src_mat_data_V_read = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        tmp_hist1_0_address0 = zext_ln544_4_fu_354_p1;
    end else if (((1'b0 == ap_block_pp1_stage1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
        tmp_hist1_0_address0 = tmp_hist1_0_addr_3_reg_415;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        tmp_hist1_0_address0 = zext_ln544_6_fu_323_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tmp_hist1_0_address0 = zext_ln544_fu_288_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        tmp_hist1_0_address0 = zext_ln48_fu_265_p1;
    end else begin
        tmp_hist1_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_11001)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001)))) begin
        tmp_hist1_0_ce0 = 1'b1;
    end else begin
        tmp_hist1_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
        tmp_hist1_0_d0 = add_ln99_fu_335_p2;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        tmp_hist1_0_d0 = 32'd0;
    end else begin
        tmp_hist1_0_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((icmp_ln887_13_reg_401_pp1_iter1_reg == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_11001)) | ((1'b1 == ap_CS_fsm_state4) & (icmp_ln887_fu_276_p2 == 1'd0)))) begin
        tmp_hist1_0_we0 = 1'b1;
    end else begin
        tmp_hist1_0_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        tmp_hist_0_address0 = zext_ln544_4_fu_354_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        tmp_hist_0_address0 = tmp_hist_0_addr_3_reg_405;
    end else if (((1'b0 == ap_block_pp1_stage1) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1))) begin
        tmp_hist_0_address0 = zext_ln544_5_fu_312_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        tmp_hist_0_address0 = zext_ln544_fu_288_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        tmp_hist_0_address0 = zext_ln47_fu_248_p1;
    end else begin
        tmp_hist_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2) | ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)) | ((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_11001)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001)))) begin
        tmp_hist_0_ce0 = 1'b1;
    end else begin
        tmp_hist_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        tmp_hist_0_d0 = add_ln97_fu_328_p2;
    end else if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state2))) begin
        tmp_hist_0_d0 = 32'd0;
    end else begin
        tmp_hist_0_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((icmp_ln887_13_reg_401 == 1'd1) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)) | ((1'b1 == ap_CS_fsm_state4) & (icmp_ln887_fu_276_p2 == 1'd0)))) begin
        tmp_hist_0_we0 = 1'b1;
    end else begin
        tmp_hist_0_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((icmp_ln47_fu_253_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((icmp_ln48_fu_270_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln887_fu_276_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln887_12_fu_294_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage0 : begin
            if ((~((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone) & (icmp_ln887_13_fu_306_p2 == 1'd0)) & (1'b0 == ap_block_pp1_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end else if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b0 == ap_block_pp1_stage0_subdone) & (icmp_ln887_13_fu_306_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_pp1_stage1 : begin
            if ((~((ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_subdone)) & (1'b0 == ap_block_pp1_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((ap_enable_reg_pp1_iter0 == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1) & (1'b0 == ap_block_pp1_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            end
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if (~((icmp_ln887_14_fu_342_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if (((icmp_ln887_14_fu_342_p2 == 1'd1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln47_fu_242_p2 = (phi_ln47_reg_175 + 8'd1);

assign add_ln48_fu_259_p2 = (phi_ln48_reg_186 + 8'd1);

assign add_ln97_fu_328_p2 = (tmp_hist_0_q0 + 32'd1);

assign add_ln99_fu_335_p2 = (tmp_hist1_0_q0 + 32'd1);

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp1_stage1 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

always @ (*) begin
    ap_block_pp1 = (((ap_ST_fsm_pp1_stage0 == ap_CS_fsm) & (1'b1 == ap_block_pp1_stage0_subdone)) | ((1'b1 == ap_block_pp1_stage1_subdone) & (ap_ST_fsm_pp1_stage1 == ap_CS_fsm)));
end

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage0_11001 = ((icmp_ln887_13_reg_401 == 1'd1) & (p_src_mat_data_V_empty_n == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage0_subdone = ((icmp_ln887_13_reg_401 == 1'd1) & (p_src_mat_data_V_empty_n == 1'b0) & (ap_enable_reg_pp1_iter1 == 1'b1));
end

assign ap_block_pp1_stage1 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp1_stage1_11001 = ((icmp_ln887_13_reg_401 == 1'd1) & (p_src_mat_data_V_empty_n == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp1_stage1_subdone = ((icmp_ln887_13_reg_401 == 1'd1) & (p_src_mat_data_V_empty_n == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b1));
end

always @ (*) begin
    ap_block_pp2 = ((1'b1 == ap_block_pp2_stage0_subdone) & (ap_ST_fsm_pp2_stage0 == ap_CS_fsm));
end

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp1_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state8_pp1_stage1_iter0 = ((icmp_ln887_13_reg_401 == 1'd1) & (p_src_mat_data_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_block_state9_pp1_stage0_iter1 = ((icmp_ln887_13_reg_401 == 1'd1) & (p_src_mat_data_V_empty_n == 1'b0));
end

always @ (*) begin
    ap_enable_operation_73 = (icmp_ln887_13_reg_401 == 1'd1);
end

always @ (*) begin
    ap_enable_operation_76 = (icmp_ln887_13_reg_401 == 1'd1);
end

always @ (*) begin
    ap_enable_operation_79 = (icmp_ln887_13_reg_401 == 1'd1);
end

always @ (*) begin
    ap_enable_operation_81 = (icmp_ln887_13_reg_401 == 1'd1);
end

always @ (*) begin
    ap_enable_operation_87 = (icmp_ln887_13_reg_401_pp1_iter1_reg == 1'd1);
end

always @ (*) begin
    ap_enable_operation_89 = (icmp_ln887_13_reg_401_pp1_iter1_reg == 1'd1);
end

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

always @ (*) begin
    ap_enable_state10_pp1_iter1_stage1 = ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1));
end

always @ (*) begin
    ap_enable_state8_pp1_iter0_stage1 = ((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage1));
end

always @ (*) begin
    ap_enable_state9_pp1_iter1_stage0 = ((ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0));
end

assign col_V_fu_317_p2 = (p_0396_0_reg_219 + 9'd2);

assign hist_array_address0 = zext_ln544_4_reg_429;

assign hist_array_d0 = (tmp_hist1_0_q0 + tmp_hist_0_q0);

assign i_V_1_fu_348_p2 = (t_V_7_reg_231 + 9'd1);

assign i_V_fu_282_p2 = (t_V_reg_197 + 9'd1);

assign icmp_ln47_fu_253_p2 = ((phi_ln47_reg_175 == 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln48_fu_270_p2 = ((phi_ln48_reg_186 == 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln887_12_fu_294_p2 = ((t_V_6_reg_208 < 8'd180) ? 1'b1 : 1'b0);

assign icmp_ln887_13_fu_306_p2 = ((ap_phi_mux_p_0396_0_phi_fu_223_p4 < 9'd320) ? 1'b1 : 1'b0);

assign icmp_ln887_14_fu_342_p2 = ((t_V_7_reg_231 == 9'd256) ? 1'b1 : 1'b0);

assign icmp_ln887_fu_276_p2 = ((t_V_reg_197 == 9'd256) ? 1'b1 : 1'b0);

assign row_V_fu_300_p2 = (t_V_6_reg_208 + 8'd1);

assign zext_ln47_fu_248_p1 = phi_ln47_reg_175;

assign zext_ln48_fu_265_p1 = phi_ln48_reg_186;

assign zext_ln544_4_fu_354_p1 = t_V_7_reg_231;

assign zext_ln544_5_fu_312_p1 = p_src_mat_data_V_dout;

assign zext_ln544_6_fu_323_p1 = p_src_mat_data_V_dout;

assign zext_ln544_fu_288_p1 = t_V_reg_197;

always @ (posedge ap_clk) begin
    zext_ln544_4_reg_429[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
end

endmodule //xFHistogramKernel
