// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module duplicateMat438 (
        ap_start,
        start_full_n,
        start_out,
        start_write,
        p_src_data_V_dout,
        p_src_data_V_empty_n,
        p_src_data_V_read,
        p_dst1_data_V_din,
        p_dst1_data_V_full_n,
        p_dst1_data_V_write,
        p_dst2_data_V_din,
        p_dst2_data_V_full_n,
        p_dst2_data_V_write,
        ap_clk,
        ap_rst,
        ap_done,
        ap_ready,
        ap_idle,
        ap_continue
);


input   ap_start;
input   start_full_n;
output   start_out;
output   start_write;
input  [7:0] p_src_data_V_dout;
input   p_src_data_V_empty_n;
output   p_src_data_V_read;
output  [7:0] p_dst1_data_V_din;
input   p_dst1_data_V_full_n;
output   p_dst1_data_V_write;
output  [7:0] p_dst2_data_V_din;
input   p_dst2_data_V_full_n;
output   p_dst2_data_V_write;
input   ap_clk;
input   ap_rst;
output   ap_done;
output   ap_ready;
output   ap_idle;
input   ap_continue;

reg start_write;

reg    real_start;
reg    start_once_reg;
wire    internal_ap_ready;
wire    duplicateMat438_Bloc_U0_ap_start;
wire    duplicateMat438_Bloc_U0_ap_done;
wire    duplicateMat438_Bloc_U0_ap_continue;
wire    duplicateMat438_Bloc_U0_ap_idle;
wire    duplicateMat438_Bloc_U0_ap_ready;
wire   [9:0] duplicateMat438_Bloc_U0_p_src_cols_load7_out_out_din;
wire    duplicateMat438_Bloc_U0_p_src_cols_load7_out_out_write;
wire    duplicateMat438_Loop_U0_ap_start;
wire    duplicateMat438_Loop_U0_ap_done;
wire    duplicateMat438_Loop_U0_ap_continue;
wire    duplicateMat438_Loop_U0_ap_idle;
wire    duplicateMat438_Loop_U0_ap_ready;
wire    duplicateMat438_Loop_U0_start_out;
wire    duplicateMat438_Loop_U0_start_write;
wire    duplicateMat438_Loop_U0_p_src_cols_load7_loc_read;
wire    duplicateMat438_Loop_U0_p_src_data_V_read;
wire   [7:0] duplicateMat438_Loop_U0_src_V_V_din;
wire    duplicateMat438_Loop_U0_src_V_V_write;
wire   [9:0] duplicateMat438_Loop_U0_p_src_cols_load7_loc_out_din;
wire    duplicateMat438_Loop_U0_p_src_cols_load7_loc_out_write;
wire    xFDuplicate_1_U0_ap_start;
wire    xFDuplicate_1_U0_ap_done;
wire    xFDuplicate_1_U0_ap_continue;
wire    xFDuplicate_1_U0_ap_idle;
wire    xFDuplicate_1_U0_ap_ready;
wire    xFDuplicate_1_U0_start_out;
wire    xFDuplicate_1_U0_start_write;
wire    xFDuplicate_1_U0_p_src_mat_V_V_read;
wire   [7:0] xFDuplicate_1_U0_p_dst1_mat_V_V_din;
wire    xFDuplicate_1_U0_p_dst1_mat_V_V_write;
wire   [7:0] xFDuplicate_1_U0_p_dst2_mat_V_V_din;
wire    xFDuplicate_1_U0_p_dst2_mat_V_V_write;
wire    xFDuplicate_1_U0_p_src_cols_load7_loc_read;
wire    duplicateMat438_Loop_1_U0_ap_start;
wire    duplicateMat438_Loop_1_U0_ap_done;
wire    duplicateMat438_Loop_1_U0_ap_continue;
wire    duplicateMat438_Loop_1_U0_ap_idle;
wire    duplicateMat438_Loop_1_U0_ap_ready;
wire    duplicateMat438_Loop_1_U0_dst_V_V_read;
wire   [7:0] duplicateMat438_Loop_1_U0_p_dst1_data_V_din;
wire    duplicateMat438_Loop_1_U0_p_dst1_data_V_write;
wire    duplicateMat438_Loop_1_U0_dst1_V_V_read;
wire   [7:0] duplicateMat438_Loop_1_U0_p_dst2_data_V_din;
wire    duplicateMat438_Loop_1_U0_p_dst2_data_V_write;
wire    ap_sync_continue;
wire    p_src_cols_load7_loc_1_full_n;
wire   [9:0] p_src_cols_load7_loc_1_dout;
wire    p_src_cols_load7_loc_1_empty_n;
wire    src_V_V_full_n;
wire   [7:0] src_V_V_dout;
wire    src_V_V_empty_n;
wire    p_src_cols_load7_loc_s_full_n;
wire   [9:0] p_src_cols_load7_loc_s_dout;
wire    p_src_cols_load7_loc_s_empty_n;
wire    dst_V_V_full_n;
wire   [7:0] dst_V_V_dout;
wire    dst_V_V_empty_n;
wire    dst1_V_V_full_n;
wire   [7:0] dst1_V_V_dout;
wire    dst1_V_V_empty_n;
wire    ap_sync_done;
wire    ap_sync_ready;
reg    ap_sync_reg_duplicateMat438_Bloc_U0_ap_ready;
wire    ap_sync_duplicateMat438_Bloc_U0_ap_ready;
reg   [1:0] duplicateMat438_Bloc_U0_ap_ready_count;
reg    ap_sync_reg_duplicateMat438_Loop_U0_ap_ready;
wire    ap_sync_duplicateMat438_Loop_U0_ap_ready;
reg   [1:0] duplicateMat438_Loop_U0_ap_ready_count;
wire    duplicateMat438_Bloc_U0_start_full_n;
wire    duplicateMat438_Bloc_U0_start_write;
wire   [0:0] start_for_xFDuplicate_1_U0_din;
wire    start_for_xFDuplicate_1_U0_full_n;
wire   [0:0] start_for_xFDuplicate_1_U0_dout;
wire    start_for_xFDuplicate_1_U0_empty_n;
wire   [0:0] start_for_duplicateMat438_Loop_1_U0_din;
wire    start_for_duplicateMat438_Loop_1_U0_full_n;
wire   [0:0] start_for_duplicateMat438_Loop_1_U0_dout;
wire    start_for_duplicateMat438_Loop_1_U0_empty_n;
wire    duplicateMat438_Loop_1_U0_start_full_n;
wire    duplicateMat438_Loop_1_U0_start_write;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_sync_reg_duplicateMat438_Bloc_U0_ap_ready = 1'b0;
#0 duplicateMat438_Bloc_U0_ap_ready_count = 2'd0;
#0 ap_sync_reg_duplicateMat438_Loop_U0_ap_ready = 1'b0;
#0 duplicateMat438_Loop_U0_ap_ready_count = 2'd0;
end

duplicateMat438_Bloc duplicateMat438_Bloc_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(duplicateMat438_Bloc_U0_ap_start),
    .ap_done(duplicateMat438_Bloc_U0_ap_done),
    .ap_continue(duplicateMat438_Bloc_U0_ap_continue),
    .ap_idle(duplicateMat438_Bloc_U0_ap_idle),
    .ap_ready(duplicateMat438_Bloc_U0_ap_ready),
    .p_src_cols_load7_out_out_din(duplicateMat438_Bloc_U0_p_src_cols_load7_out_out_din),
    .p_src_cols_load7_out_out_full_n(p_src_cols_load7_loc_1_full_n),
    .p_src_cols_load7_out_out_write(duplicateMat438_Bloc_U0_p_src_cols_load7_out_out_write)
);

duplicateMat438_Loop duplicateMat438_Loop_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(duplicateMat438_Loop_U0_ap_start),
    .start_full_n(start_for_xFDuplicate_1_U0_full_n),
    .ap_done(duplicateMat438_Loop_U0_ap_done),
    .ap_continue(duplicateMat438_Loop_U0_ap_continue),
    .ap_idle(duplicateMat438_Loop_U0_ap_idle),
    .ap_ready(duplicateMat438_Loop_U0_ap_ready),
    .start_out(duplicateMat438_Loop_U0_start_out),
    .start_write(duplicateMat438_Loop_U0_start_write),
    .p_src_cols_load7_loc_dout(p_src_cols_load7_loc_1_dout),
    .p_src_cols_load7_loc_empty_n(p_src_cols_load7_loc_1_empty_n),
    .p_src_cols_load7_loc_read(duplicateMat438_Loop_U0_p_src_cols_load7_loc_read),
    .p_src_data_V_dout(p_src_data_V_dout),
    .p_src_data_V_empty_n(p_src_data_V_empty_n),
    .p_src_data_V_read(duplicateMat438_Loop_U0_p_src_data_V_read),
    .src_V_V_din(duplicateMat438_Loop_U0_src_V_V_din),
    .src_V_V_full_n(src_V_V_full_n),
    .src_V_V_write(duplicateMat438_Loop_U0_src_V_V_write),
    .p_src_cols_load7_loc_out_din(duplicateMat438_Loop_U0_p_src_cols_load7_loc_out_din),
    .p_src_cols_load7_loc_out_full_n(p_src_cols_load7_loc_s_full_n),
    .p_src_cols_load7_loc_out_write(duplicateMat438_Loop_U0_p_src_cols_load7_loc_out_write)
);

xFDuplicate_1 xFDuplicate_1_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(xFDuplicate_1_U0_ap_start),
    .start_full_n(start_for_duplicateMat438_Loop_1_U0_full_n),
    .ap_done(xFDuplicate_1_U0_ap_done),
    .ap_continue(xFDuplicate_1_U0_ap_continue),
    .ap_idle(xFDuplicate_1_U0_ap_idle),
    .ap_ready(xFDuplicate_1_U0_ap_ready),
    .start_out(xFDuplicate_1_U0_start_out),
    .start_write(xFDuplicate_1_U0_start_write),
    .p_src_mat_V_V_dout(src_V_V_dout),
    .p_src_mat_V_V_empty_n(src_V_V_empty_n),
    .p_src_mat_V_V_read(xFDuplicate_1_U0_p_src_mat_V_V_read),
    .p_dst1_mat_V_V_din(xFDuplicate_1_U0_p_dst1_mat_V_V_din),
    .p_dst1_mat_V_V_full_n(dst_V_V_full_n),
    .p_dst1_mat_V_V_write(xFDuplicate_1_U0_p_dst1_mat_V_V_write),
    .p_dst2_mat_V_V_din(xFDuplicate_1_U0_p_dst2_mat_V_V_din),
    .p_dst2_mat_V_V_full_n(dst1_V_V_full_n),
    .p_dst2_mat_V_V_write(xFDuplicate_1_U0_p_dst2_mat_V_V_write),
    .p_src_cols_load7_loc_dout(p_src_cols_load7_loc_s_dout),
    .p_src_cols_load7_loc_empty_n(p_src_cols_load7_loc_s_empty_n),
    .p_src_cols_load7_loc_read(xFDuplicate_1_U0_p_src_cols_load7_loc_read)
);

duplicateMat438_Loop_1 duplicateMat438_Loop_1_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(duplicateMat438_Loop_1_U0_ap_start),
    .ap_done(duplicateMat438_Loop_1_U0_ap_done),
    .ap_continue(duplicateMat438_Loop_1_U0_ap_continue),
    .ap_idle(duplicateMat438_Loop_1_U0_ap_idle),
    .ap_ready(duplicateMat438_Loop_1_U0_ap_ready),
    .dst_V_V_dout(dst_V_V_dout),
    .dst_V_V_empty_n(dst_V_V_empty_n),
    .dst_V_V_read(duplicateMat438_Loop_1_U0_dst_V_V_read),
    .p_dst1_data_V_din(duplicateMat438_Loop_1_U0_p_dst1_data_V_din),
    .p_dst1_data_V_full_n(p_dst1_data_V_full_n),
    .p_dst1_data_V_write(duplicateMat438_Loop_1_U0_p_dst1_data_V_write),
    .dst1_V_V_dout(dst1_V_V_dout),
    .dst1_V_V_empty_n(dst1_V_V_empty_n),
    .dst1_V_V_read(duplicateMat438_Loop_1_U0_dst1_V_V_read),
    .p_dst2_data_V_din(duplicateMat438_Loop_1_U0_p_dst2_data_V_din),
    .p_dst2_data_V_full_n(p_dst2_data_V_full_n),
    .p_dst2_data_V_write(duplicateMat438_Loop_1_U0_p_dst2_data_V_write)
);

fifo_w10_d2_A_x2 p_src_cols_load7_loc_1_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(duplicateMat438_Bloc_U0_p_src_cols_load7_out_out_din),
    .if_full_n(p_src_cols_load7_loc_1_full_n),
    .if_write(duplicateMat438_Bloc_U0_p_src_cols_load7_out_out_write),
    .if_dout(p_src_cols_load7_loc_1_dout),
    .if_empty_n(p_src_cols_load7_loc_1_empty_n),
    .if_read(duplicateMat438_Loop_U0_p_src_cols_load7_loc_read)
);

fifo_w8_d2_A_x src_V_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(duplicateMat438_Loop_U0_src_V_V_din),
    .if_full_n(src_V_V_full_n),
    .if_write(duplicateMat438_Loop_U0_src_V_V_write),
    .if_dout(src_V_V_dout),
    .if_empty_n(src_V_V_empty_n),
    .if_read(xFDuplicate_1_U0_p_src_mat_V_V_read)
);

fifo_w10_d2_A_x2 p_src_cols_load7_loc_s_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(duplicateMat438_Loop_U0_p_src_cols_load7_loc_out_din),
    .if_full_n(p_src_cols_load7_loc_s_full_n),
    .if_write(duplicateMat438_Loop_U0_p_src_cols_load7_loc_out_write),
    .if_dout(p_src_cols_load7_loc_s_dout),
    .if_empty_n(p_src_cols_load7_loc_s_empty_n),
    .if_read(xFDuplicate_1_U0_p_src_cols_load7_loc_read)
);

fifo_w8_d2_A_x dst_V_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(xFDuplicate_1_U0_p_dst1_mat_V_V_din),
    .if_full_n(dst_V_V_full_n),
    .if_write(xFDuplicate_1_U0_p_dst1_mat_V_V_write),
    .if_dout(dst_V_V_dout),
    .if_empty_n(dst_V_V_empty_n),
    .if_read(duplicateMat438_Loop_1_U0_dst_V_V_read)
);

fifo_w8_d2_A_x dst1_V_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(xFDuplicate_1_U0_p_dst2_mat_V_V_din),
    .if_full_n(dst1_V_V_full_n),
    .if_write(xFDuplicate_1_U0_p_dst2_mat_V_V_write),
    .if_dout(dst1_V_V_dout),
    .if_empty_n(dst1_V_V_empty_n),
    .if_read(duplicateMat438_Loop_1_U0_dst1_V_V_read)
);

start_for_xFDupliDeQ start_for_xFDupliDeQ_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_xFDuplicate_1_U0_din),
    .if_full_n(start_for_xFDuplicate_1_U0_full_n),
    .if_write(duplicateMat438_Loop_U0_start_write),
    .if_dout(start_for_xFDuplicate_1_U0_dout),
    .if_empty_n(start_for_xFDuplicate_1_U0_empty_n),
    .if_read(xFDuplicate_1_U0_ap_ready)
);

start_for_duplicaEe0 start_for_duplicaEe0_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(start_for_duplicateMat438_Loop_1_U0_din),
    .if_full_n(start_for_duplicateMat438_Loop_1_U0_full_n),
    .if_write(xFDuplicate_1_U0_start_write),
    .if_dout(start_for_duplicateMat438_Loop_1_U0_dout),
    .if_empty_n(start_for_duplicateMat438_Loop_1_U0_empty_n),
    .if_read(duplicateMat438_Loop_1_U0_ap_ready)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_duplicateMat438_Bloc_U0_ap_ready <= 1'b0;
    end else begin
        if (((real_start & ap_sync_ready) == 1'b1)) begin
            ap_sync_reg_duplicateMat438_Bloc_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_duplicateMat438_Bloc_U0_ap_ready <= ap_sync_duplicateMat438_Bloc_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_duplicateMat438_Loop_U0_ap_ready <= 1'b0;
    end else begin
        if (((real_start & ap_sync_ready) == 1'b1)) begin
            ap_sync_reg_duplicateMat438_Loop_U0_ap_ready <= 1'b0;
        end else begin
            ap_sync_reg_duplicateMat438_Loop_U0_ap_ready <= ap_sync_duplicateMat438_Loop_U0_ap_ready;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((duplicateMat438_Bloc_U0_ap_ready == 1'b0) & (ap_sync_ready == 1'b1))) begin
        duplicateMat438_Bloc_U0_ap_ready_count <= (duplicateMat438_Bloc_U0_ap_ready_count - 2'd1);
    end else if (((ap_sync_ready == 1'b0) & (duplicateMat438_Bloc_U0_ap_ready == 1'b1))) begin
        duplicateMat438_Bloc_U0_ap_ready_count <= (duplicateMat438_Bloc_U0_ap_ready_count + 2'd1);
    end
end

always @ (posedge ap_clk) begin
    if (((duplicateMat438_Loop_U0_ap_ready == 1'b0) & (ap_sync_ready == 1'b1))) begin
        duplicateMat438_Loop_U0_ap_ready_count <= (duplicateMat438_Loop_U0_ap_ready_count - 2'd1);
    end else if (((ap_sync_ready == 1'b0) & (duplicateMat438_Loop_U0_ap_ready == 1'b1))) begin
        duplicateMat438_Loop_U0_ap_ready_count <= (duplicateMat438_Loop_U0_ap_ready_count + 2'd1);
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (start_full_n == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

assign ap_done = duplicateMat438_Loop_1_U0_ap_done;

assign ap_idle = (xFDuplicate_1_U0_ap_idle & duplicateMat438_Loop_U0_ap_idle & duplicateMat438_Loop_1_U0_ap_idle & duplicateMat438_Bloc_U0_ap_idle);

assign ap_ready = internal_ap_ready;

assign ap_sync_continue = ap_continue;

assign ap_sync_done = duplicateMat438_Loop_1_U0_ap_done;

assign ap_sync_duplicateMat438_Bloc_U0_ap_ready = (duplicateMat438_Bloc_U0_ap_ready | ap_sync_reg_duplicateMat438_Bloc_U0_ap_ready);

assign ap_sync_duplicateMat438_Loop_U0_ap_ready = (duplicateMat438_Loop_U0_ap_ready | ap_sync_reg_duplicateMat438_Loop_U0_ap_ready);

assign ap_sync_ready = (ap_sync_duplicateMat438_Loop_U0_ap_ready & ap_sync_duplicateMat438_Bloc_U0_ap_ready);

assign duplicateMat438_Bloc_U0_ap_continue = 1'b1;

assign duplicateMat438_Bloc_U0_ap_start = (real_start & (ap_sync_reg_duplicateMat438_Bloc_U0_ap_ready ^ 1'b1));

assign duplicateMat438_Bloc_U0_start_full_n = 1'b1;

assign duplicateMat438_Bloc_U0_start_write = 1'b0;

assign duplicateMat438_Loop_1_U0_ap_continue = ap_continue;

assign duplicateMat438_Loop_1_U0_ap_start = start_for_duplicateMat438_Loop_1_U0_empty_n;

assign duplicateMat438_Loop_1_U0_start_full_n = 1'b1;

assign duplicateMat438_Loop_1_U0_start_write = 1'b0;

assign duplicateMat438_Loop_U0_ap_continue = 1'b1;

assign duplicateMat438_Loop_U0_ap_start = (real_start & (ap_sync_reg_duplicateMat438_Loop_U0_ap_ready ^ 1'b1));

assign internal_ap_ready = ap_sync_ready;

assign p_dst1_data_V_din = duplicateMat438_Loop_1_U0_p_dst1_data_V_din;

assign p_dst1_data_V_write = duplicateMat438_Loop_1_U0_p_dst1_data_V_write;

assign p_dst2_data_V_din = duplicateMat438_Loop_1_U0_p_dst2_data_V_din;

assign p_dst2_data_V_write = duplicateMat438_Loop_1_U0_p_dst2_data_V_write;

assign p_src_data_V_read = duplicateMat438_Loop_U0_p_src_data_V_read;

assign start_for_duplicateMat438_Loop_1_U0_din = 1'b1;

assign start_for_xFDuplicate_1_U0_din = 1'b1;

assign start_out = real_start;

assign xFDuplicate_1_U0_ap_continue = 1'b1;

assign xFDuplicate_1_U0_ap_start = start_for_xFDuplicate_1_U0_empty_n;

endmodule //duplicateMat438
