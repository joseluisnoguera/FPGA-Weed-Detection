-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity get_line_bases is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    bottom_data_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    bottom_data_V_empty_n : IN STD_LOGIC;
    bottom_data_V_read : OUT STD_LOGIC;
    line_bases_address0 : OUT STD_LOGIC_VECTOR (2 downto 0);
    line_bases_ce0 : OUT STD_LOGIC;
    line_bases_we0 : OUT STD_LOGIC;
    line_bases_d0 : OUT STD_LOGIC_VECTOR (16 downto 0);
    line_bases_q0 : IN STD_LOGIC_VECTOR (16 downto 0);
    line_bases_address1 : OUT STD_LOGIC_VECTOR (2 downto 0);
    line_bases_ce1 : OUT STD_LOGIC;
    line_bases_we1 : OUT STD_LOGIC;
    line_bases_d1 : OUT STD_LOGIC_VECTOR (16 downto 0) );
end;


architecture behav of get_line_bases is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (37 downto 0) := "00000000000000000000000000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (37 downto 0) := "00000000000000000000000000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (37 downto 0) := "00000000000000000000000000000000000100";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (37 downto 0) := "00000000000000000000000000000000001000";
    constant ap_ST_fsm_pp1_stage1 : STD_LOGIC_VECTOR (37 downto 0) := "00000000000000000000000000000000010000";
    constant ap_ST_fsm_pp1_stage2 : STD_LOGIC_VECTOR (37 downto 0) := "00000000000000000000000000000000100000";
    constant ap_ST_fsm_pp1_stage3 : STD_LOGIC_VECTOR (37 downto 0) := "00000000000000000000000000000001000000";
    constant ap_ST_fsm_pp1_stage4 : STD_LOGIC_VECTOR (37 downto 0) := "00000000000000000000000000000010000000";
    constant ap_ST_fsm_pp1_stage5 : STD_LOGIC_VECTOR (37 downto 0) := "00000000000000000000000000000100000000";
    constant ap_ST_fsm_pp1_stage6 : STD_LOGIC_VECTOR (37 downto 0) := "00000000000000000000000000001000000000";
    constant ap_ST_fsm_pp1_stage7 : STD_LOGIC_VECTOR (37 downto 0) := "00000000000000000000000000010000000000";
    constant ap_ST_fsm_pp1_stage8 : STD_LOGIC_VECTOR (37 downto 0) := "00000000000000000000000000100000000000";
    constant ap_ST_fsm_pp1_stage9 : STD_LOGIC_VECTOR (37 downto 0) := "00000000000000000000000001000000000000";
    constant ap_ST_fsm_pp1_stage10 : STD_LOGIC_VECTOR (37 downto 0) := "00000000000000000000000010000000000000";
    constant ap_ST_fsm_pp1_stage11 : STD_LOGIC_VECTOR (37 downto 0) := "00000000000000000000000100000000000000";
    constant ap_ST_fsm_pp1_stage12 : STD_LOGIC_VECTOR (37 downto 0) := "00000000000000000000001000000000000000";
    constant ap_ST_fsm_pp1_stage13 : STD_LOGIC_VECTOR (37 downto 0) := "00000000000000000000010000000000000000";
    constant ap_ST_fsm_pp1_stage14 : STD_LOGIC_VECTOR (37 downto 0) := "00000000000000000000100000000000000000";
    constant ap_ST_fsm_pp1_stage15 : STD_LOGIC_VECTOR (37 downto 0) := "00000000000000000001000000000000000000";
    constant ap_ST_fsm_pp1_stage16 : STD_LOGIC_VECTOR (37 downto 0) := "00000000000000000010000000000000000000";
    constant ap_ST_fsm_pp1_stage17 : STD_LOGIC_VECTOR (37 downto 0) := "00000000000000000100000000000000000000";
    constant ap_ST_fsm_pp1_stage18 : STD_LOGIC_VECTOR (37 downto 0) := "00000000000000001000000000000000000000";
    constant ap_ST_fsm_pp1_stage19 : STD_LOGIC_VECTOR (37 downto 0) := "00000000000000010000000000000000000000";
    constant ap_ST_fsm_pp1_stage20 : STD_LOGIC_VECTOR (37 downto 0) := "00000000000000100000000000000000000000";
    constant ap_ST_fsm_pp1_stage21 : STD_LOGIC_VECTOR (37 downto 0) := "00000000000001000000000000000000000000";
    constant ap_ST_fsm_pp1_stage22 : STD_LOGIC_VECTOR (37 downto 0) := "00000000000010000000000000000000000000";
    constant ap_ST_fsm_state51 : STD_LOGIC_VECTOR (37 downto 0) := "00000000000100000000000000000000000000";
    constant ap_ST_fsm_state52 : STD_LOGIC_VECTOR (37 downto 0) := "00000000001000000000000000000000000000";
    constant ap_ST_fsm_state53 : STD_LOGIC_VECTOR (37 downto 0) := "00000000010000000000000000000000000000";
    constant ap_ST_fsm_state54 : STD_LOGIC_VECTOR (37 downto 0) := "00000000100000000000000000000000000000";
    constant ap_ST_fsm_pp2_stage0 : STD_LOGIC_VECTOR (37 downto 0) := "00000001000000000000000000000000000000";
    constant ap_ST_fsm_state57 : STD_LOGIC_VECTOR (37 downto 0) := "00000010000000000000000000000000000000";
    constant ap_ST_fsm_state58 : STD_LOGIC_VECTOR (37 downto 0) := "00000100000000000000000000000000000000";
    constant ap_ST_fsm_state59 : STD_LOGIC_VECTOR (37 downto 0) := "00001000000000000000000000000000000000";
    constant ap_ST_fsm_state60 : STD_LOGIC_VECTOR (37 downto 0) := "00010000000000000000000000000000000000";
    constant ap_ST_fsm_state61 : STD_LOGIC_VECTOR (37 downto 0) := "00100000000000000000000000000000000000";
    constant ap_ST_fsm_state62 : STD_LOGIC_VECTOR (37 downto 0) := "01000000000000000000000000000000000000";
    constant ap_ST_fsm_state63 : STD_LOGIC_VECTOR (37 downto 0) := "10000000000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_11 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010001";
    constant ap_const_lv32_12 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010010";
    constant ap_const_lv32_13 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010011";
    constant ap_const_lv32_14 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010100";
    constant ap_const_lv32_15 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010101";
    constant ap_const_lv32_16 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010110";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_18 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011000";
    constant ap_const_lv32_19 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011001";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_1B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011011";
    constant ap_const_lv32_1C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011100";
    constant ap_const_lv32_1D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011101";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv32_20 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100000";
    constant ap_const_lv32_21 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100001";
    constant ap_const_lv32_22 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100010";
    constant ap_const_lv32_23 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100011";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_25 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100101";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv32_1A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011010";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_24 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100100";
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv9_140 : STD_LOGIC_VECTOR (8 downto 0) := "101000000";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv5_10 : STD_LOGIC_VECTOR (4 downto 0) := "10000";
    constant ap_const_lv5_1 : STD_LOGIC_VECTOR (4 downto 0) := "00001";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv10_140 : STD_LOGIC_VECTOR (9 downto 0) := "0101000000";
    constant ap_const_lv3_6 : STD_LOGIC_VECTOR (2 downto 0) := "110";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv9_1FF : STD_LOGIC_VECTOR (8 downto 0) := "111111111";
    constant ap_const_lv16_1 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000001";
    constant ap_const_lv10_3FF : STD_LOGIC_VECTOR (9 downto 0) := "1111111111";
    constant ap_const_lv17_33 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000110011";
    constant ap_const_lv16_34 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000110100";
    constant ap_const_lv16_33 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000110011";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (37 downto 0) := "00000000000000000000000000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal histogram_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal histogram_ce0 : STD_LOGIC;
    signal histogram_we0 : STD_LOGIC;
    signal histogram_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal histogram_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal histogram_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal histogram_ce1 : STD_LOGIC;
    signal histogram_we1 : STD_LOGIC;
    signal histogram_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal histogram_q1 : STD_LOGIC_VECTOR (7 downto 0);
    signal smoothed_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal smoothed_ce0 : STD_LOGIC;
    signal smoothed_we0 : STD_LOGIC;
    signal smoothed_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal smoothed_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal bottom_data_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp1_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage1 : signal is "none";
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal ap_block_pp1_stage1 : BOOLEAN;
    signal icmp_ln17_reg_875 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp1_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage2 : signal is "none";
    signal ap_block_pp1_stage2 : BOOLEAN;
    signal ap_CS_fsm_pp1_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage3 : signal is "none";
    signal ap_block_pp1_stage3 : BOOLEAN;
    signal ap_CS_fsm_pp1_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage4 : signal is "none";
    signal ap_block_pp1_stage4 : BOOLEAN;
    signal ap_CS_fsm_pp1_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage5 : signal is "none";
    signal ap_block_pp1_stage5 : BOOLEAN;
    signal ap_CS_fsm_pp1_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage6 : signal is "none";
    signal ap_block_pp1_stage6 : BOOLEAN;
    signal ap_CS_fsm_pp1_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage7 : signal is "none";
    signal ap_block_pp1_stage7 : BOOLEAN;
    signal ap_CS_fsm_pp1_stage8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage8 : signal is "none";
    signal ap_block_pp1_stage8 : BOOLEAN;
    signal ap_CS_fsm_pp1_stage9 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage9 : signal is "none";
    signal ap_block_pp1_stage9 : BOOLEAN;
    signal ap_CS_fsm_pp1_stage10 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage10 : signal is "none";
    signal ap_block_pp1_stage10 : BOOLEAN;
    signal ap_CS_fsm_pp1_stage11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage11 : signal is "none";
    signal ap_block_pp1_stage11 : BOOLEAN;
    signal ap_CS_fsm_pp1_stage12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage12 : signal is "none";
    signal ap_block_pp1_stage12 : BOOLEAN;
    signal ap_CS_fsm_pp1_stage13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage13 : signal is "none";
    signal ap_block_pp1_stage13 : BOOLEAN;
    signal ap_CS_fsm_pp1_stage14 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage14 : signal is "none";
    signal ap_block_pp1_stage14 : BOOLEAN;
    signal ap_CS_fsm_pp1_stage15 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage15 : signal is "none";
    signal ap_block_pp1_stage15 : BOOLEAN;
    signal ap_CS_fsm_pp1_stage16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage16 : signal is "none";
    signal ap_block_pp1_stage16 : BOOLEAN;
    signal ap_CS_fsm_pp1_stage17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage17 : signal is "none";
    signal ap_block_pp1_stage17 : BOOLEAN;
    signal ap_CS_fsm_pp1_stage18 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage18 : signal is "none";
    signal ap_block_pp1_stage18 : BOOLEAN;
    signal ap_CS_fsm_pp1_stage19 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage19 : signal is "none";
    signal ap_block_pp1_stage19 : BOOLEAN;
    signal ap_CS_fsm_pp1_stage20 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage20 : signal is "none";
    signal ap_block_pp1_stage20 : BOOLEAN;
    signal ap_CS_fsm_pp1_stage21 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage21 : signal is "none";
    signal ap_block_pp1_stage21 : BOOLEAN;
    signal ap_CS_fsm_pp1_stage22 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage22 : signal is "none";
    signal ap_block_pp1_stage22 : BOOLEAN;
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal h_0_i_i_reg_274 : STD_LOGIC_VECTOR (8 downto 0);
    signal i1_0_i_reg_320 : STD_LOGIC_VECTOR (2 downto 0);
    signal i_fu_455_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal icmp_ln17_fu_466_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state4_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state27_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_state50_pp1_stage0_iter2 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal h_fu_472_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal h_reg_879 : STD_LOGIC_VECTOR (8 downto 0);
    signal histogram_addr_1_reg_884 : STD_LOGIC_VECTOR (8 downto 0);
    signal histogram_addr_1_reg_884_pp1_iter1_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_391_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln895_reg_890 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state5_pp1_stage1_iter0 : BOOLEAN;
    signal ap_block_state28_pp1_stage1_iter1 : BOOLEAN;
    signal ap_block_pp1_stage1_11001 : BOOLEAN;
    signal icmp_ln895_3_reg_894 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state6_pp1_stage2_iter0 : BOOLEAN;
    signal ap_block_state29_pp1_stage2_iter1 : BOOLEAN;
    signal ap_block_pp1_stage2_11001 : BOOLEAN;
    signal icmp_ln895_4_reg_898 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state7_pp1_stage3_iter0 : BOOLEAN;
    signal ap_block_state30_pp1_stage3_iter1 : BOOLEAN;
    signal ap_block_pp1_stage3_11001 : BOOLEAN;
    signal icmp_ln895_5_reg_902 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state8_pp1_stage4_iter0 : BOOLEAN;
    signal ap_block_state31_pp1_stage4_iter1 : BOOLEAN;
    signal ap_block_pp1_stage4_11001 : BOOLEAN;
    signal icmp_ln895_6_reg_906 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state9_pp1_stage5_iter0 : BOOLEAN;
    signal ap_block_state32_pp1_stage5_iter1 : BOOLEAN;
    signal ap_block_pp1_stage5_11001 : BOOLEAN;
    signal icmp_ln895_7_reg_910 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state10_pp1_stage6_iter0 : BOOLEAN;
    signal ap_block_state33_pp1_stage6_iter1 : BOOLEAN;
    signal ap_block_pp1_stage6_11001 : BOOLEAN;
    signal icmp_ln895_8_reg_914 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state11_pp1_stage7_iter0 : BOOLEAN;
    signal ap_block_state34_pp1_stage7_iter1 : BOOLEAN;
    signal ap_block_pp1_stage7_11001 : BOOLEAN;
    signal icmp_ln895_9_reg_918 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state12_pp1_stage8_iter0 : BOOLEAN;
    signal ap_block_state35_pp1_stage8_iter1 : BOOLEAN;
    signal ap_block_pp1_stage8_11001 : BOOLEAN;
    signal icmp_ln895_10_reg_922 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state13_pp1_stage9_iter0 : BOOLEAN;
    signal ap_block_state36_pp1_stage9_iter1 : BOOLEAN;
    signal ap_block_pp1_stage9_11001 : BOOLEAN;
    signal icmp_ln895_11_reg_926 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state14_pp1_stage10_iter0 : BOOLEAN;
    signal ap_block_state37_pp1_stage10_iter1 : BOOLEAN;
    signal ap_block_pp1_stage10_11001 : BOOLEAN;
    signal icmp_ln895_12_reg_930 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state15_pp1_stage11_iter0 : BOOLEAN;
    signal ap_block_state38_pp1_stage11_iter1 : BOOLEAN;
    signal ap_block_pp1_stage11_11001 : BOOLEAN;
    signal icmp_ln895_13_reg_934 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state16_pp1_stage12_iter0 : BOOLEAN;
    signal ap_block_state39_pp1_stage12_iter1 : BOOLEAN;
    signal ap_block_pp1_stage12_11001 : BOOLEAN;
    signal icmp_ln895_14_reg_938 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state17_pp1_stage13_iter0 : BOOLEAN;
    signal ap_block_state40_pp1_stage13_iter1 : BOOLEAN;
    signal ap_block_pp1_stage13_11001 : BOOLEAN;
    signal icmp_ln895_15_reg_942 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state18_pp1_stage14_iter0 : BOOLEAN;
    signal ap_block_state41_pp1_stage14_iter1 : BOOLEAN;
    signal ap_block_pp1_stage14_11001 : BOOLEAN;
    signal icmp_ln895_16_reg_946 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state19_pp1_stage15_iter0 : BOOLEAN;
    signal ap_block_state42_pp1_stage15_iter1 : BOOLEAN;
    signal ap_block_pp1_stage15_11001 : BOOLEAN;
    signal icmp_ln895_17_reg_950 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state20_pp1_stage16_iter0 : BOOLEAN;
    signal ap_block_state43_pp1_stage16_iter1 : BOOLEAN;
    signal ap_block_pp1_stage16_11001 : BOOLEAN;
    signal icmp_ln895_18_reg_954 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state21_pp1_stage17_iter0 : BOOLEAN;
    signal ap_block_state44_pp1_stage17_iter1 : BOOLEAN;
    signal ap_block_pp1_stage17_11001 : BOOLEAN;
    signal icmp_ln895_19_reg_958 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state22_pp1_stage18_iter0 : BOOLEAN;
    signal ap_block_state45_pp1_stage18_iter1 : BOOLEAN;
    signal ap_block_pp1_stage18_11001 : BOOLEAN;
    signal icmp_ln895_20_reg_962 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state23_pp1_stage19_iter0 : BOOLEAN;
    signal ap_block_state46_pp1_stage19_iter1 : BOOLEAN;
    signal ap_block_pp1_stage19_11001 : BOOLEAN;
    signal icmp_ln895_21_reg_966 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state24_pp1_stage20_iter0 : BOOLEAN;
    signal ap_block_state47_pp1_stage20_iter1 : BOOLEAN;
    signal ap_block_pp1_stage20_11001 : BOOLEAN;
    signal icmp_ln895_22_reg_970 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state25_pp1_stage21_iter0 : BOOLEAN;
    signal ap_block_state48_pp1_stage21_iter1 : BOOLEAN;
    signal ap_block_pp1_stage21_11001 : BOOLEAN;
    signal icmp_ln895_23_reg_974 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state26_pp1_stage22_iter0 : BOOLEAN;
    signal ap_block_state49_pp1_stage22_iter1 : BOOLEAN;
    signal ap_block_pp1_stage22_11001 : BOOLEAN;
    signal icmp_ln895_24_reg_978 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln35_fu_483_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state52 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state52 : signal is "none";
    signal y_fu_489_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal y_reg_986 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln37_fu_495_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln37_reg_991 : STD_LOGIC_VECTOR (9 downto 0);
    signal x_fu_505_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal x_reg_999 : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_CS_fsm_state53 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state53 : signal is "none";
    signal tmp_fu_525_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_reg_1004 : STD_LOGIC_VECTOR (9 downto 0);
    signal icmp_ln37_fu_499_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal total_1_fu_589_p3 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state54 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state54 : signal is "none";
    signal icmp_ln46_fu_597_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln46_reg_1020 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp2_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp2_stage0 : signal is "none";
    signal ap_block_state55_pp2_stage0_iter0 : BOOLEAN;
    signal ap_block_state56_pp2_stage0_iter1 : BOOLEAN;
    signal ap_block_pp2_stage0_11001 : BOOLEAN;
    signal i_4_fu_603_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_enable_reg_pp2_iter0 : STD_LOGIC := '0';
    signal line_bases_addr_1_reg_1029 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln52_fu_625_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln52_reg_1058 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state58 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state58 : signal is "none";
    signal i_5_fu_635_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal i_5_reg_1069 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln52_fu_629_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal smoothed_load_reg_1082 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state59 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state59 : signal is "none";
    signal line_bases_addr_2_reg_1091 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln53_fu_646_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln53_1_fu_652_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal line_bases_load_1_reg_1097 : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_CS_fsm_state60 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state60 : signal is "none";
    signal trunc_ln60_fu_689_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal trunc_ln60_reg_1103 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state61 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state61 : signal is "none";
    signal grp_fu_430_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln71_fu_698_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal flag_meceta_0_i_load_load_fu_719_p1 : STD_LOGIC_VECTOR (0 downto 0);
    signal last_max_dist_fu_856_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state63 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state63 : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state4 : STD_LOGIC;
    signal ap_block_pp1_stage22_subdone : BOOLEAN;
    signal ap_enable_reg_pp1_iter2 : STD_LOGIC := '0';
    signal ap_block_pp2_stage0_subdone : BOOLEAN;
    signal ap_condition_pp2_exit_iter0_state55 : STD_LOGIC;
    signal ap_enable_reg_pp2_iter1 : STD_LOGIC := '0';
    signal i_0_i_reg_263 : STD_LOGIC_VECTOR (8 downto 0);
    signal icmp_ln29_fu_449_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_phi_mux_h_0_i_i_phi_fu_278_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal y_0_i_reg_285 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state51 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state51 : signal is "none";
    signal x_0_i_reg_297 : STD_LOGIC_VECTOR (4 downto 0);
    signal total_0_i_reg_308 : STD_LOGIC_VECTOR (15 downto 0);
    signal last_max_dist_0_i_reg_331 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_CS_fsm_state57 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state57 : signal is "none";
    signal i2_0_i_reg_343 : STD_LOGIC_VECTOR (8 downto 0);
    signal last_max_dist_6_i_reg_355 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln61_fu_801_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln74_fu_769_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state62 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state62 : signal is "none";
    signal and_ln85_fu_837_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln30_fu_461_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln20_fu_478_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln40_fu_534_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln42_fu_550_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln47_fu_609_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_pp2_stage0 : BOOLEAN;
    signal zext_ln53_fu_641_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln60_fu_671_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln60_1_fu_693_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln85_fu_732_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln75_fu_787_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln64_fu_807_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln86_fu_843_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal flag_meceta_0_i_fu_118 : STD_LOGIC_VECTOR (0 downto 0);
    signal line_counter_3_fu_122 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_438_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal meceta_counter_1_fu_126 : STD_LOGIC_VECTOR (15 downto 0);
    signal meceta_counter_fu_703_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal grp_fu_397_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_404_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_58_fu_614_p4 : STD_LOGIC_VECTOR (16 downto 0);
    signal gep84345_part_set_i_fu_676_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal line_bases_y_3_addr1_1_fu_775_p5 : STD_LOGIC_VECTOR (16 downto 0);
    signal line_bases_active_3_2_fu_792_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal line_bases_active_3_1_fu_812_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal line_bases_y_3_addr1_fu_820_p5 : STD_LOGIC_VECTOR (16 downto 0);
    signal line_bases_active_3_3_fu_848_p3 : STD_LOGIC_VECTOR (16 downto 0);
    signal trunc_ln38_fu_511_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal xor_ln38_fu_515_p2 : STD_LOGIC_VECTOR (3 downto 0);
    signal sext_ln38_1_fu_521_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal sext_ln38_fu_530_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_59_fu_555_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln39_fu_568_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal xor_ln39_fu_562_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln40_1_fu_579_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal and_ln39_fu_573_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal total_fu_583_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln60_fu_661_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal add_ln60_fu_665_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln85_fu_722_p1 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln85_fu_726_p2 : STD_LOGIC_VECTOR (9 downto 0);
    signal lshr_ln_fu_737_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal zext_ln73_fu_747_p1 : STD_LOGIC_VECTOR (15 downto 0);
    signal p_tmp_fu_751_p2 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln74_cast_i_fu_756_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal zext_ln74_fu_760_p1 : STD_LOGIC_VECTOR (16 downto 0);
    signal sub_ln74_fu_763_p2 : STD_LOGIC_VECTOR (16 downto 0);
    signal icmp_ln85_1_fu_831_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (37 downto 0);
    signal ap_block_pp1_stage1_subdone : BOOLEAN;
    signal ap_block_pp1_stage2_subdone : BOOLEAN;
    signal ap_block_pp1_stage3_subdone : BOOLEAN;
    signal ap_block_pp1_stage4_subdone : BOOLEAN;
    signal ap_block_pp1_stage5_subdone : BOOLEAN;
    signal ap_block_pp1_stage6_subdone : BOOLEAN;
    signal ap_block_pp1_stage7_subdone : BOOLEAN;
    signal ap_block_pp1_stage8_subdone : BOOLEAN;
    signal ap_block_pp1_stage9_subdone : BOOLEAN;
    signal ap_block_pp1_stage10_subdone : BOOLEAN;
    signal ap_block_pp1_stage11_subdone : BOOLEAN;
    signal ap_block_pp1_stage12_subdone : BOOLEAN;
    signal ap_block_pp1_stage13_subdone : BOOLEAN;
    signal ap_block_pp1_stage14_subdone : BOOLEAN;
    signal ap_block_pp1_stage15_subdone : BOOLEAN;
    signal ap_block_pp1_stage16_subdone : BOOLEAN;
    signal ap_block_pp1_stage17_subdone : BOOLEAN;
    signal ap_block_pp1_stage18_subdone : BOOLEAN;
    signal ap_block_pp1_stage19_subdone : BOOLEAN;
    signal ap_block_pp1_stage20_subdone : BOOLEAN;
    signal ap_block_pp1_stage21_subdone : BOOLEAN;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal ap_idle_pp2 : STD_LOGIC;
    signal ap_enable_pp2 : STD_LOGIC;

    component get_line_bases_hiFfa IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0);
        q1 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component get_line_bases_smGfk IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        we0 : IN STD_LOGIC;
        d0 : IN STD_LOGIC_VECTOR (7 downto 0);
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    histogram_U : component get_line_bases_hiFfa
    generic map (
        DataWidth => 8,
        AddressRange => 320,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => histogram_address0,
        ce0 => histogram_ce0,
        we0 => histogram_we0,
        d0 => histogram_d0,
        q0 => histogram_q0,
        address1 => histogram_address1,
        ce1 => histogram_ce1,
        we1 => histogram_we1,
        d1 => histogram_d1,
        q1 => histogram_q1);

    smoothed_U : component get_line_bases_smGfk
    generic map (
        DataWidth => 8,
        AddressRange => 320,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => smoothed_address0,
        ce0 => smoothed_ce0,
        we0 => smoothed_we0,
        d0 => smoothed_d0,
        q0 => smoothed_q0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state4) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage22_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage22))) then 
                    ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
            else
                if ((((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage22_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage22)))) then 
                    ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                    ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp2_exit_iter0_state55) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_0;
                elsif (((icmp_ln35_fu_483_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state52))) then 
                    ap_enable_reg_pp2_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp2_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (ap_const_logic_1 = ap_condition_pp2_exit_iter0_state55))) then 
                    ap_enable_reg_pp2_iter1 <= (ap_const_logic_1 xor ap_condition_pp2_exit_iter0_state55);
                elsif ((ap_const_boolean_0 = ap_block_pp2_stage0_subdone)) then 
                    ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
                elsif (((icmp_ln35_fu_483_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state52))) then 
                    ap_enable_reg_pp2_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    flag_meceta_0_i_fu_118_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state61) and (icmp_ln71_fu_698_p2 = ap_const_lv1_0) and (grp_fu_430_p2 = ap_const_lv1_0))) then 
                flag_meceta_0_i_fu_118 <= ap_const_lv1_1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state57) or ((ap_const_logic_1 = ap_CS_fsm_state62) and (ap_const_lv1_0 = and_ln85_fu_837_p2)) or ((ap_const_lv1_1 = and_ln85_fu_837_p2) and (ap_const_logic_1 = ap_CS_fsm_state62)) or ((icmp_ln74_fu_769_p2 = ap_const_lv1_1) and (flag_meceta_0_i_load_load_fu_719_p1 = ap_const_lv1_1) and (icmp_ln71_fu_698_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state61) and (grp_fu_430_p2 = ap_const_lv1_0)) or ((flag_meceta_0_i_load_load_fu_719_p1 = ap_const_lv1_1) and (icmp_ln71_fu_698_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state61) and (icmp_ln74_fu_769_p2 = ap_const_lv1_0) and (grp_fu_430_p2 = ap_const_lv1_0)))) then 
                flag_meceta_0_i_fu_118 <= ap_const_lv1_0;
            end if; 
        end if;
    end process;

    h_0_i_i_reg_274_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state3)) then 
                h_0_i_i_reg_274 <= ap_const_lv9_0;
            elsif (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln17_reg_875 = ap_const_lv1_0))) then 
                h_0_i_i_reg_274 <= h_reg_879;
            end if; 
        end if;
    end process;

    i1_0_i_reg_320_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln35_fu_483_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state52))) then 
                i1_0_i_reg_320 <= ap_const_lv3_0;
            elsif (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln46_fu_597_p2 = ap_const_lv1_0))) then 
                i1_0_i_reg_320 <= i_4_fu_603_p2;
            end if; 
        end if;
    end process;

    i2_0_i_reg_343_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
                i2_0_i_reg_343 <= ap_const_lv9_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state63)) then 
                i2_0_i_reg_343 <= i_5_reg_1069;
            end if; 
        end if;
    end process;

    i_0_i_reg_263_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln29_fu_449_p2 = ap_const_lv1_0))) then 
                i_0_i_reg_263 <= i_fu_455_p2;
            elsif (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
                i_0_i_reg_263 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;

    last_max_dist_0_i_reg_331_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state57)) then 
                last_max_dist_0_i_reg_331 <= ap_const_lv16_0;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state63)) then 
                last_max_dist_0_i_reg_331 <= last_max_dist_fu_856_p2;
            end if; 
        end if;
    end process;

    last_max_dist_6_i_reg_355_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_logic_1 = ap_CS_fsm_state62) and (ap_const_lv1_0 = and_ln85_fu_837_p2)) or ((ap_const_logic_1 = ap_CS_fsm_state61) and (icmp_ln71_fu_698_p2 = ap_const_lv1_0) and (grp_fu_430_p2 = ap_const_lv1_0)) or ((icmp_ln53_1_fu_652_p2 = ap_const_lv1_1) and (icmp_ln53_fu_646_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state59)) or ((icmp_ln53_1_fu_652_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state59) and (icmp_ln53_fu_646_p2 = ap_const_lv1_0)))) then 
                last_max_dist_6_i_reg_355 <= last_max_dist_0_i_reg_331;
            elsif ((((ap_const_lv1_1 = and_ln85_fu_837_p2) and (ap_const_logic_1 = ap_CS_fsm_state62)) or ((icmp_ln61_fu_801_p2 = ap_const_lv1_1) and (grp_fu_430_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state61)) or ((grp_fu_430_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state61) and (icmp_ln61_fu_801_p2 = ap_const_lv1_0)) or ((icmp_ln74_fu_769_p2 = ap_const_lv1_1) and (flag_meceta_0_i_load_load_fu_719_p1 = ap_const_lv1_1) and (icmp_ln71_fu_698_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state61) and (grp_fu_430_p2 = ap_const_lv1_0)) or ((flag_meceta_0_i_load_load_fu_719_p1 = ap_const_lv1_1) and (icmp_ln71_fu_698_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state61) and (icmp_ln74_fu_769_p2 = ap_const_lv1_0) and (grp_fu_430_p2 = ap_const_lv1_0)) or ((icmp_ln53_fu_646_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state59) and (icmp_ln53_1_fu_652_p2 = ap_const_lv1_0)))) then 
                last_max_dist_6_i_reg_355 <= ap_const_lv16_0;
            end if; 
        end if;
    end process;

    line_counter_3_fu_122_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_1 = and_ln85_fu_837_p2) and (ap_const_logic_1 = ap_CS_fsm_state62)) or ((grp_fu_430_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state61) and (icmp_ln61_fu_801_p2 = ap_const_lv1_0)) or ((icmp_ln74_fu_769_p2 = ap_const_lv1_1) and (flag_meceta_0_i_load_load_fu_719_p1 = ap_const_lv1_1) and (icmp_ln71_fu_698_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state61) and (grp_fu_430_p2 = ap_const_lv1_0)))) then 
                line_counter_3_fu_122 <= grp_fu_438_p2;
            elsif (((icmp_ln53_fu_646_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state59) and (icmp_ln53_1_fu_652_p2 = ap_const_lv1_0))) then 
                line_counter_3_fu_122 <= ap_const_lv8_1;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state57) or ((icmp_ln53_1_fu_652_p2 = ap_const_lv1_1) and (icmp_ln53_fu_646_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state59)))) then 
                line_counter_3_fu_122 <= ap_const_lv8_0;
            end if; 
        end if;
    end process;

    meceta_counter_1_fu_126_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state61) and (icmp_ln71_fu_698_p2 = ap_const_lv1_0) and (grp_fu_430_p2 = ap_const_lv1_0))) then 
                meceta_counter_1_fu_126 <= meceta_counter_fu_703_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state57) or ((icmp_ln61_fu_801_p2 = ap_const_lv1_1) and (grp_fu_430_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state61)) or ((grp_fu_430_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state61) and (icmp_ln61_fu_801_p2 = ap_const_lv1_0)) or ((icmp_ln74_fu_769_p2 = ap_const_lv1_1) and (flag_meceta_0_i_load_load_fu_719_p1 = ap_const_lv1_1) and (icmp_ln71_fu_698_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state61) and (grp_fu_430_p2 = ap_const_lv1_0)) or ((flag_meceta_0_i_load_load_fu_719_p1 = ap_const_lv1_1) and (icmp_ln71_fu_698_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state61) and (icmp_ln74_fu_769_p2 = ap_const_lv1_0) and (grp_fu_430_p2 = ap_const_lv1_0)))) then 
                meceta_counter_1_fu_126 <= ap_const_lv16_0;
            end if; 
        end if;
    end process;

    total_0_i_reg_308_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state54)) then 
                total_0_i_reg_308 <= total_1_fu_589_p3;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state52) and (icmp_ln35_fu_483_p2 = ap_const_lv1_0))) then 
                total_0_i_reg_308 <= ap_const_lv16_0;
            end if; 
        end if;
    end process;

    x_0_i_reg_297_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state54)) then 
                x_0_i_reg_297 <= x_reg_999;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state52) and (icmp_ln35_fu_483_p2 = ap_const_lv1_0))) then 
                x_0_i_reg_297 <= ap_const_lv5_0;
            end if; 
        end if;
    end process;

    y_0_i_reg_285_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state51)) then 
                y_0_i_reg_285 <= ap_const_lv9_0;
            elsif (((icmp_ln37_fu_499_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state53))) then 
                y_0_i_reg_285 <= y_reg_986;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then
                h_reg_879 <= h_fu_472_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln17_fu_466_p2 = ap_const_lv1_0))) then
                histogram_addr_1_reg_884 <= zext_ln20_fu_478_p1(9 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                histogram_addr_1_reg_884_pp1_iter1_reg <= histogram_addr_1_reg_884;
                icmp_ln17_reg_875 <= icmp_ln17_fu_466_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state58)) then
                i_5_reg_1069 <= i_5_fu_635_p2;
                    zext_ln52_reg_1058(8 downto 0) <= zext_ln52_fu_625_p1(8 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then
                icmp_ln46_reg_1020 <= icmp_ln46_fu_597_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage9_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage9) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln17_reg_875 = ap_const_lv1_0))) then
                icmp_ln895_10_reg_922 <= grp_fu_391_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage10_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage10) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln17_reg_875 = ap_const_lv1_0))) then
                icmp_ln895_11_reg_926 <= grp_fu_391_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage11_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage11) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln17_reg_875 = ap_const_lv1_0))) then
                icmp_ln895_12_reg_930 <= grp_fu_391_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage12_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage12) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln17_reg_875 = ap_const_lv1_0))) then
                icmp_ln895_13_reg_934 <= grp_fu_391_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage13_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage13) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln17_reg_875 = ap_const_lv1_0))) then
                icmp_ln895_14_reg_938 <= grp_fu_391_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage14_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage14) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln17_reg_875 = ap_const_lv1_0))) then
                icmp_ln895_15_reg_942 <= grp_fu_391_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage15_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage15) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln17_reg_875 = ap_const_lv1_0))) then
                icmp_ln895_16_reg_946 <= grp_fu_391_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage16_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage16) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln17_reg_875 = ap_const_lv1_0))) then
                icmp_ln895_17_reg_950 <= grp_fu_391_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage17_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage17) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln17_reg_875 = ap_const_lv1_0))) then
                icmp_ln895_18_reg_954 <= grp_fu_391_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage18_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage18) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln17_reg_875 = ap_const_lv1_0))) then
                icmp_ln895_19_reg_958 <= grp_fu_391_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage19_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage19) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln17_reg_875 = ap_const_lv1_0))) then
                icmp_ln895_20_reg_962 <= grp_fu_391_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage20_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage20) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln17_reg_875 = ap_const_lv1_0))) then
                icmp_ln895_21_reg_966 <= grp_fu_391_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage21_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage21) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln17_reg_875 = ap_const_lv1_0))) then
                icmp_ln895_22_reg_970 <= grp_fu_391_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage22_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage22) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln17_reg_875 = ap_const_lv1_0))) then
                icmp_ln895_23_reg_974 <= grp_fu_391_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                icmp_ln895_24_reg_978 <= grp_fu_391_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln17_reg_875 = ap_const_lv1_0))) then
                icmp_ln895_3_reg_894 <= grp_fu_391_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln17_reg_875 = ap_const_lv1_0))) then
                icmp_ln895_4_reg_898 <= grp_fu_391_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage4) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln17_reg_875 = ap_const_lv1_0))) then
                icmp_ln895_5_reg_902 <= grp_fu_391_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage5) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln17_reg_875 = ap_const_lv1_0))) then
                icmp_ln895_6_reg_906 <= grp_fu_391_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage6) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln17_reg_875 = ap_const_lv1_0))) then
                icmp_ln895_7_reg_910 <= grp_fu_391_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage7) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln17_reg_875 = ap_const_lv1_0))) then
                icmp_ln895_8_reg_914 <= grp_fu_391_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage8_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage8) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln17_reg_875 = ap_const_lv1_0))) then
                icmp_ln895_9_reg_918 <= grp_fu_391_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (icmp_ln17_reg_875 = ap_const_lv1_0))) then
                icmp_ln895_reg_890 <= grp_fu_391_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln46_fu_597_p2 = ap_const_lv1_0))) then
                line_bases_addr_1_reg_1029 <= zext_ln47_fu_609_p1(3 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state59) and (icmp_ln53_1_fu_652_p2 = ap_const_lv1_0) and (icmp_ln53_fu_646_p2 = ap_const_lv1_0))) then
                line_bases_addr_2_reg_1091 <= sext_ln60_fu_671_p1(3 - 1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state60)) then
                line_bases_load_1_reg_1097 <= line_bases_q0;
                trunc_ln60_reg_1103 <= trunc_ln60_fu_689_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state59)) then
                smoothed_load_reg_1082 <= smoothed_q0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state53) and (icmp_ln37_fu_499_p2 = ap_const_lv1_0))) then
                tmp_reg_1004 <= tmp_fu_525_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state53)) then
                x_reg_999 <= x_fu_505_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state52)) then
                y_reg_986 <= y_fu_489_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_state52) and (icmp_ln35_fu_483_p2 = ap_const_lv1_0))) then
                    zext_ln37_reg_991(8 downto 0) <= zext_ln37_fu_495_p1(8 downto 0);
            end if;
        end if;
    end process;
    zext_ln37_reg_991(9) <= '0';
    zext_ln52_reg_1058(15 downto 9) <= "0000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp1_iter0, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_CS_fsm_state2, icmp_ln17_fu_466_p2, icmp_ln35_fu_483_p2, ap_CS_fsm_state52, ap_CS_fsm_state53, icmp_ln37_fu_499_p2, icmp_ln46_fu_597_p2, ap_enable_reg_pp2_iter0, ap_CS_fsm_state58, icmp_ln52_fu_629_p2, ap_CS_fsm_state59, icmp_ln53_fu_646_p2, icmp_ln53_1_fu_652_p2, ap_CS_fsm_state61, grp_fu_430_p2, icmp_ln71_fu_698_p2, flag_meceta_0_i_load_load_fu_719_p1, ap_block_pp1_stage0_subdone, ap_block_pp1_stage22_subdone, ap_enable_reg_pp1_iter2, ap_block_pp2_stage0_subdone, icmp_ln29_fu_449_p2, ap_block_pp1_stage1_subdone, ap_block_pp1_stage2_subdone, ap_block_pp1_stage3_subdone, ap_block_pp1_stage4_subdone, ap_block_pp1_stage5_subdone, ap_block_pp1_stage6_subdone, ap_block_pp1_stage7_subdone, ap_block_pp1_stage8_subdone, ap_block_pp1_stage9_subdone, ap_block_pp1_stage10_subdone, ap_block_pp1_stage11_subdone, ap_block_pp1_stage12_subdone, ap_block_pp1_stage13_subdone, ap_block_pp1_stage14_subdone, ap_block_pp1_stage15_subdone, ap_block_pp1_stage16_subdone, ap_block_pp1_stage17_subdone, ap_block_pp1_stage18_subdone, ap_block_pp1_stage19_subdone, ap_block_pp1_stage20_subdone, ap_block_pp1_stage21_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln29_fu_449_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
            when ap_ST_fsm_pp1_stage0 => 
                if ((not(((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (icmp_ln17_fu_466_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) and not(((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage1;
                elsif ((((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (icmp_ln17_fu_466_p2 = ap_const_lv1_1) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state51;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_pp1_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp1_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage1;
                end if;
            when ap_ST_fsm_pp1_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp1_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage2;
                end if;
            when ap_ST_fsm_pp1_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp1_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage3;
                end if;
            when ap_ST_fsm_pp1_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp1_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage4;
                end if;
            when ap_ST_fsm_pp1_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp1_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage5;
                end if;
            when ap_ST_fsm_pp1_stage6 => 
                if ((ap_const_boolean_0 = ap_block_pp1_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage6;
                end if;
            when ap_ST_fsm_pp1_stage7 => 
                if ((ap_const_boolean_0 = ap_block_pp1_stage7_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage8;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage7;
                end if;
            when ap_ST_fsm_pp1_stage8 => 
                if ((ap_const_boolean_0 = ap_block_pp1_stage8_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage9;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage8;
                end if;
            when ap_ST_fsm_pp1_stage9 => 
                if ((ap_const_boolean_0 = ap_block_pp1_stage9_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage10;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage9;
                end if;
            when ap_ST_fsm_pp1_stage10 => 
                if ((ap_const_boolean_0 = ap_block_pp1_stage10_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage11;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage10;
                end if;
            when ap_ST_fsm_pp1_stage11 => 
                if ((ap_const_boolean_0 = ap_block_pp1_stage11_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage12;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage11;
                end if;
            when ap_ST_fsm_pp1_stage12 => 
                if ((ap_const_boolean_0 = ap_block_pp1_stage12_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage13;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage12;
                end if;
            when ap_ST_fsm_pp1_stage13 => 
                if ((ap_const_boolean_0 = ap_block_pp1_stage13_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage14;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage13;
                end if;
            when ap_ST_fsm_pp1_stage14 => 
                if ((ap_const_boolean_0 = ap_block_pp1_stage14_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage15;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage14;
                end if;
            when ap_ST_fsm_pp1_stage15 => 
                if ((ap_const_boolean_0 = ap_block_pp1_stage15_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage16;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage15;
                end if;
            when ap_ST_fsm_pp1_stage16 => 
                if ((ap_const_boolean_0 = ap_block_pp1_stage16_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage17;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage16;
                end if;
            when ap_ST_fsm_pp1_stage17 => 
                if ((ap_const_boolean_0 = ap_block_pp1_stage17_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage18;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage17;
                end if;
            when ap_ST_fsm_pp1_stage18 => 
                if ((ap_const_boolean_0 = ap_block_pp1_stage18_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage19;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage18;
                end if;
            when ap_ST_fsm_pp1_stage19 => 
                if ((ap_const_boolean_0 = ap_block_pp1_stage19_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage20;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage19;
                end if;
            when ap_ST_fsm_pp1_stage20 => 
                if ((ap_const_boolean_0 = ap_block_pp1_stage20_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage21;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage20;
                end if;
            when ap_ST_fsm_pp1_stage21 => 
                if ((ap_const_boolean_0 = ap_block_pp1_stage21_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage22;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage21;
                end if;
            when ap_ST_fsm_pp1_stage22 => 
                if ((ap_const_boolean_0 = ap_block_pp1_stage22_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage22;
                end if;
            when ap_ST_fsm_state51 => 
                ap_NS_fsm <= ap_ST_fsm_state52;
            when ap_ST_fsm_state52 => 
                if (((icmp_ln35_fu_483_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state52))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state53;
                end if;
            when ap_ST_fsm_state53 => 
                if (((icmp_ln37_fu_499_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state53))) then
                    ap_NS_fsm <= ap_ST_fsm_state52;
                else
                    ap_NS_fsm <= ap_ST_fsm_state54;
                end if;
            when ap_ST_fsm_state54 => 
                ap_NS_fsm <= ap_ST_fsm_state53;
            when ap_ST_fsm_pp2_stage0 => 
                if (not(((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (icmp_ln46_fu_597_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                elsif (((ap_const_boolean_0 = ap_block_pp2_stage0_subdone) and (icmp_ln46_fu_597_p2 = ap_const_lv1_1) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state57;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp2_stage0;
                end if;
            when ap_ST_fsm_state57 => 
                ap_NS_fsm <= ap_ST_fsm_state58;
            when ap_ST_fsm_state58 => 
                if (((icmp_ln52_fu_629_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state58))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_state59;
                end if;
            when ap_ST_fsm_state59 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state59) and ((icmp_ln53_1_fu_652_p2 = ap_const_lv1_1) or (icmp_ln53_fu_646_p2 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state63;
                else
                    ap_NS_fsm <= ap_ST_fsm_state60;
                end if;
            when ap_ST_fsm_state60 => 
                ap_NS_fsm <= ap_ST_fsm_state61;
            when ap_ST_fsm_state61 => 
                if (((icmp_ln71_fu_698_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state61) and (flag_meceta_0_i_load_load_fu_719_p1 = ap_const_lv1_0) and (grp_fu_430_p2 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state62;
                else
                    ap_NS_fsm <= ap_ST_fsm_state63;
                end if;
            when ap_ST_fsm_state62 => 
                ap_NS_fsm <= ap_ST_fsm_state63;
            when ap_ST_fsm_state63 => 
                ap_NS_fsm <= ap_ST_fsm_state58;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln60_fu_665_p2 <= std_logic_vector(signed(ap_const_lv9_1FF) + signed(zext_ln60_fu_661_p1));
    add_ln85_fu_726_p2 <= std_logic_vector(unsigned(zext_ln85_fu_722_p1) + unsigned(ap_const_lv10_3FF));
    and_ln39_fu_573_p2 <= (xor_ln39_fu_562_p2 and icmp_ln39_fu_568_p2);
    and_ln85_fu_837_p2 <= (icmp_ln85_1_fu_831_p2 and grp_fu_430_p2);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(3);
    ap_CS_fsm_pp1_stage1 <= ap_CS_fsm(4);
    ap_CS_fsm_pp1_stage10 <= ap_CS_fsm(13);
    ap_CS_fsm_pp1_stage11 <= ap_CS_fsm(14);
    ap_CS_fsm_pp1_stage12 <= ap_CS_fsm(15);
    ap_CS_fsm_pp1_stage13 <= ap_CS_fsm(16);
    ap_CS_fsm_pp1_stage14 <= ap_CS_fsm(17);
    ap_CS_fsm_pp1_stage15 <= ap_CS_fsm(18);
    ap_CS_fsm_pp1_stage16 <= ap_CS_fsm(19);
    ap_CS_fsm_pp1_stage17 <= ap_CS_fsm(20);
    ap_CS_fsm_pp1_stage18 <= ap_CS_fsm(21);
    ap_CS_fsm_pp1_stage19 <= ap_CS_fsm(22);
    ap_CS_fsm_pp1_stage2 <= ap_CS_fsm(5);
    ap_CS_fsm_pp1_stage20 <= ap_CS_fsm(23);
    ap_CS_fsm_pp1_stage21 <= ap_CS_fsm(24);
    ap_CS_fsm_pp1_stage22 <= ap_CS_fsm(25);
    ap_CS_fsm_pp1_stage3 <= ap_CS_fsm(6);
    ap_CS_fsm_pp1_stage4 <= ap_CS_fsm(7);
    ap_CS_fsm_pp1_stage5 <= ap_CS_fsm(8);
    ap_CS_fsm_pp1_stage6 <= ap_CS_fsm(9);
    ap_CS_fsm_pp1_stage7 <= ap_CS_fsm(10);
    ap_CS_fsm_pp1_stage8 <= ap_CS_fsm(11);
    ap_CS_fsm_pp1_stage9 <= ap_CS_fsm(12);
    ap_CS_fsm_pp2_stage0 <= ap_CS_fsm(30);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state51 <= ap_CS_fsm(26);
    ap_CS_fsm_state52 <= ap_CS_fsm(27);
    ap_CS_fsm_state53 <= ap_CS_fsm(28);
    ap_CS_fsm_state54 <= ap_CS_fsm(29);
    ap_CS_fsm_state57 <= ap_CS_fsm(31);
    ap_CS_fsm_state58 <= ap_CS_fsm(32);
    ap_CS_fsm_state59 <= ap_CS_fsm(33);
    ap_CS_fsm_state60 <= ap_CS_fsm(34);
    ap_CS_fsm_state61 <= ap_CS_fsm(35);
    ap_CS_fsm_state62 <= ap_CS_fsm(36);
    ap_CS_fsm_state63 <= ap_CS_fsm(37);
        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage0_11001_assign_proc : process(bottom_data_V_empty_n, ap_enable_reg_pp1_iter1)
    begin
                ap_block_pp1_stage0_11001 <= ((bottom_data_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1));
    end process;


    ap_block_pp1_stage0_subdone_assign_proc : process(bottom_data_V_empty_n, ap_enable_reg_pp1_iter1)
    begin
                ap_block_pp1_stage0_subdone <= ((bottom_data_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1));
    end process;

        ap_block_pp1_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage10 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage10_11001_assign_proc : process(bottom_data_V_empty_n, ap_enable_reg_pp1_iter0, icmp_ln17_reg_875)
    begin
                ap_block_pp1_stage10_11001 <= ((bottom_data_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln17_reg_875 = ap_const_lv1_0));
    end process;


    ap_block_pp1_stage10_subdone_assign_proc : process(bottom_data_V_empty_n, ap_enable_reg_pp1_iter0, icmp_ln17_reg_875)
    begin
                ap_block_pp1_stage10_subdone <= ((bottom_data_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln17_reg_875 = ap_const_lv1_0));
    end process;

        ap_block_pp1_stage11 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage11_11001_assign_proc : process(bottom_data_V_empty_n, ap_enable_reg_pp1_iter0, icmp_ln17_reg_875)
    begin
                ap_block_pp1_stage11_11001 <= ((bottom_data_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln17_reg_875 = ap_const_lv1_0));
    end process;


    ap_block_pp1_stage11_subdone_assign_proc : process(bottom_data_V_empty_n, ap_enable_reg_pp1_iter0, icmp_ln17_reg_875)
    begin
                ap_block_pp1_stage11_subdone <= ((bottom_data_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln17_reg_875 = ap_const_lv1_0));
    end process;

        ap_block_pp1_stage12 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage12_11001_assign_proc : process(bottom_data_V_empty_n, ap_enable_reg_pp1_iter0, icmp_ln17_reg_875)
    begin
                ap_block_pp1_stage12_11001 <= ((bottom_data_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln17_reg_875 = ap_const_lv1_0));
    end process;


    ap_block_pp1_stage12_subdone_assign_proc : process(bottom_data_V_empty_n, ap_enable_reg_pp1_iter0, icmp_ln17_reg_875)
    begin
                ap_block_pp1_stage12_subdone <= ((bottom_data_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln17_reg_875 = ap_const_lv1_0));
    end process;

        ap_block_pp1_stage13 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage13_11001_assign_proc : process(bottom_data_V_empty_n, ap_enable_reg_pp1_iter0, icmp_ln17_reg_875)
    begin
                ap_block_pp1_stage13_11001 <= ((bottom_data_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln17_reg_875 = ap_const_lv1_0));
    end process;


    ap_block_pp1_stage13_subdone_assign_proc : process(bottom_data_V_empty_n, ap_enable_reg_pp1_iter0, icmp_ln17_reg_875)
    begin
                ap_block_pp1_stage13_subdone <= ((bottom_data_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln17_reg_875 = ap_const_lv1_0));
    end process;

        ap_block_pp1_stage14 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage14_11001_assign_proc : process(bottom_data_V_empty_n, ap_enable_reg_pp1_iter0, icmp_ln17_reg_875)
    begin
                ap_block_pp1_stage14_11001 <= ((bottom_data_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln17_reg_875 = ap_const_lv1_0));
    end process;


    ap_block_pp1_stage14_subdone_assign_proc : process(bottom_data_V_empty_n, ap_enable_reg_pp1_iter0, icmp_ln17_reg_875)
    begin
                ap_block_pp1_stage14_subdone <= ((bottom_data_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln17_reg_875 = ap_const_lv1_0));
    end process;

        ap_block_pp1_stage15 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage15_11001_assign_proc : process(bottom_data_V_empty_n, ap_enable_reg_pp1_iter0, icmp_ln17_reg_875)
    begin
                ap_block_pp1_stage15_11001 <= ((bottom_data_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln17_reg_875 = ap_const_lv1_0));
    end process;


    ap_block_pp1_stage15_subdone_assign_proc : process(bottom_data_V_empty_n, ap_enable_reg_pp1_iter0, icmp_ln17_reg_875)
    begin
                ap_block_pp1_stage15_subdone <= ((bottom_data_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln17_reg_875 = ap_const_lv1_0));
    end process;

        ap_block_pp1_stage16 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage16_11001_assign_proc : process(bottom_data_V_empty_n, ap_enable_reg_pp1_iter0, icmp_ln17_reg_875)
    begin
                ap_block_pp1_stage16_11001 <= ((bottom_data_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln17_reg_875 = ap_const_lv1_0));
    end process;


    ap_block_pp1_stage16_subdone_assign_proc : process(bottom_data_V_empty_n, ap_enable_reg_pp1_iter0, icmp_ln17_reg_875)
    begin
                ap_block_pp1_stage16_subdone <= ((bottom_data_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln17_reg_875 = ap_const_lv1_0));
    end process;

        ap_block_pp1_stage17 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage17_11001_assign_proc : process(bottom_data_V_empty_n, ap_enable_reg_pp1_iter0, icmp_ln17_reg_875)
    begin
                ap_block_pp1_stage17_11001 <= ((bottom_data_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln17_reg_875 = ap_const_lv1_0));
    end process;


    ap_block_pp1_stage17_subdone_assign_proc : process(bottom_data_V_empty_n, ap_enable_reg_pp1_iter0, icmp_ln17_reg_875)
    begin
                ap_block_pp1_stage17_subdone <= ((bottom_data_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln17_reg_875 = ap_const_lv1_0));
    end process;

        ap_block_pp1_stage18 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage18_11001_assign_proc : process(bottom_data_V_empty_n, ap_enable_reg_pp1_iter0, icmp_ln17_reg_875)
    begin
                ap_block_pp1_stage18_11001 <= ((bottom_data_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln17_reg_875 = ap_const_lv1_0));
    end process;


    ap_block_pp1_stage18_subdone_assign_proc : process(bottom_data_V_empty_n, ap_enable_reg_pp1_iter0, icmp_ln17_reg_875)
    begin
                ap_block_pp1_stage18_subdone <= ((bottom_data_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln17_reg_875 = ap_const_lv1_0));
    end process;

        ap_block_pp1_stage19 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage19_11001_assign_proc : process(bottom_data_V_empty_n, ap_enable_reg_pp1_iter0, icmp_ln17_reg_875)
    begin
                ap_block_pp1_stage19_11001 <= ((bottom_data_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln17_reg_875 = ap_const_lv1_0));
    end process;


    ap_block_pp1_stage19_subdone_assign_proc : process(bottom_data_V_empty_n, ap_enable_reg_pp1_iter0, icmp_ln17_reg_875)
    begin
                ap_block_pp1_stage19_subdone <= ((bottom_data_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln17_reg_875 = ap_const_lv1_0));
    end process;


    ap_block_pp1_stage1_11001_assign_proc : process(bottom_data_V_empty_n, ap_enable_reg_pp1_iter0, icmp_ln17_reg_875)
    begin
                ap_block_pp1_stage1_11001 <= ((bottom_data_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln17_reg_875 = ap_const_lv1_0));
    end process;


    ap_block_pp1_stage1_subdone_assign_proc : process(bottom_data_V_empty_n, ap_enable_reg_pp1_iter0, icmp_ln17_reg_875)
    begin
                ap_block_pp1_stage1_subdone <= ((bottom_data_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln17_reg_875 = ap_const_lv1_0));
    end process;

        ap_block_pp1_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage20 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage20_11001_assign_proc : process(bottom_data_V_empty_n, ap_enable_reg_pp1_iter0, icmp_ln17_reg_875)
    begin
                ap_block_pp1_stage20_11001 <= ((bottom_data_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln17_reg_875 = ap_const_lv1_0));
    end process;


    ap_block_pp1_stage20_subdone_assign_proc : process(bottom_data_V_empty_n, ap_enable_reg_pp1_iter0, icmp_ln17_reg_875)
    begin
                ap_block_pp1_stage20_subdone <= ((bottom_data_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln17_reg_875 = ap_const_lv1_0));
    end process;

        ap_block_pp1_stage21 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage21_11001_assign_proc : process(bottom_data_V_empty_n, ap_enable_reg_pp1_iter0, icmp_ln17_reg_875)
    begin
                ap_block_pp1_stage21_11001 <= ((bottom_data_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln17_reg_875 = ap_const_lv1_0));
    end process;


    ap_block_pp1_stage21_subdone_assign_proc : process(bottom_data_V_empty_n, ap_enable_reg_pp1_iter0, icmp_ln17_reg_875)
    begin
                ap_block_pp1_stage21_subdone <= ((bottom_data_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln17_reg_875 = ap_const_lv1_0));
    end process;

        ap_block_pp1_stage22 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage22_11001_assign_proc : process(bottom_data_V_empty_n, ap_enable_reg_pp1_iter0, icmp_ln17_reg_875)
    begin
                ap_block_pp1_stage22_11001 <= ((bottom_data_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln17_reg_875 = ap_const_lv1_0));
    end process;


    ap_block_pp1_stage22_subdone_assign_proc : process(bottom_data_V_empty_n, ap_enable_reg_pp1_iter0, icmp_ln17_reg_875)
    begin
                ap_block_pp1_stage22_subdone <= ((bottom_data_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln17_reg_875 = ap_const_lv1_0));
    end process;


    ap_block_pp1_stage2_11001_assign_proc : process(bottom_data_V_empty_n, ap_enable_reg_pp1_iter0, icmp_ln17_reg_875)
    begin
                ap_block_pp1_stage2_11001 <= ((bottom_data_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln17_reg_875 = ap_const_lv1_0));
    end process;


    ap_block_pp1_stage2_subdone_assign_proc : process(bottom_data_V_empty_n, ap_enable_reg_pp1_iter0, icmp_ln17_reg_875)
    begin
                ap_block_pp1_stage2_subdone <= ((bottom_data_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln17_reg_875 = ap_const_lv1_0));
    end process;

        ap_block_pp1_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage3_11001_assign_proc : process(bottom_data_V_empty_n, ap_enable_reg_pp1_iter0, icmp_ln17_reg_875)
    begin
                ap_block_pp1_stage3_11001 <= ((bottom_data_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln17_reg_875 = ap_const_lv1_0));
    end process;


    ap_block_pp1_stage3_subdone_assign_proc : process(bottom_data_V_empty_n, ap_enable_reg_pp1_iter0, icmp_ln17_reg_875)
    begin
                ap_block_pp1_stage3_subdone <= ((bottom_data_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln17_reg_875 = ap_const_lv1_0));
    end process;

        ap_block_pp1_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage4_11001_assign_proc : process(bottom_data_V_empty_n, ap_enable_reg_pp1_iter0, icmp_ln17_reg_875)
    begin
                ap_block_pp1_stage4_11001 <= ((bottom_data_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln17_reg_875 = ap_const_lv1_0));
    end process;


    ap_block_pp1_stage4_subdone_assign_proc : process(bottom_data_V_empty_n, ap_enable_reg_pp1_iter0, icmp_ln17_reg_875)
    begin
                ap_block_pp1_stage4_subdone <= ((bottom_data_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln17_reg_875 = ap_const_lv1_0));
    end process;

        ap_block_pp1_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage5_11001_assign_proc : process(bottom_data_V_empty_n, ap_enable_reg_pp1_iter0, icmp_ln17_reg_875)
    begin
                ap_block_pp1_stage5_11001 <= ((bottom_data_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln17_reg_875 = ap_const_lv1_0));
    end process;


    ap_block_pp1_stage5_subdone_assign_proc : process(bottom_data_V_empty_n, ap_enable_reg_pp1_iter0, icmp_ln17_reg_875)
    begin
                ap_block_pp1_stage5_subdone <= ((bottom_data_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln17_reg_875 = ap_const_lv1_0));
    end process;

        ap_block_pp1_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage6_11001_assign_proc : process(bottom_data_V_empty_n, ap_enable_reg_pp1_iter0, icmp_ln17_reg_875)
    begin
                ap_block_pp1_stage6_11001 <= ((bottom_data_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln17_reg_875 = ap_const_lv1_0));
    end process;


    ap_block_pp1_stage6_subdone_assign_proc : process(bottom_data_V_empty_n, ap_enable_reg_pp1_iter0, icmp_ln17_reg_875)
    begin
                ap_block_pp1_stage6_subdone <= ((bottom_data_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln17_reg_875 = ap_const_lv1_0));
    end process;

        ap_block_pp1_stage7 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage7_11001_assign_proc : process(bottom_data_V_empty_n, ap_enable_reg_pp1_iter0, icmp_ln17_reg_875)
    begin
                ap_block_pp1_stage7_11001 <= ((bottom_data_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln17_reg_875 = ap_const_lv1_0));
    end process;


    ap_block_pp1_stage7_subdone_assign_proc : process(bottom_data_V_empty_n, ap_enable_reg_pp1_iter0, icmp_ln17_reg_875)
    begin
                ap_block_pp1_stage7_subdone <= ((bottom_data_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln17_reg_875 = ap_const_lv1_0));
    end process;

        ap_block_pp1_stage8 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage8_11001_assign_proc : process(bottom_data_V_empty_n, ap_enable_reg_pp1_iter0, icmp_ln17_reg_875)
    begin
                ap_block_pp1_stage8_11001 <= ((bottom_data_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln17_reg_875 = ap_const_lv1_0));
    end process;


    ap_block_pp1_stage8_subdone_assign_proc : process(bottom_data_V_empty_n, ap_enable_reg_pp1_iter0, icmp_ln17_reg_875)
    begin
                ap_block_pp1_stage8_subdone <= ((bottom_data_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln17_reg_875 = ap_const_lv1_0));
    end process;

        ap_block_pp1_stage9 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage9_11001_assign_proc : process(bottom_data_V_empty_n, ap_enable_reg_pp1_iter0, icmp_ln17_reg_875)
    begin
                ap_block_pp1_stage9_11001 <= ((bottom_data_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln17_reg_875 = ap_const_lv1_0));
    end process;


    ap_block_pp1_stage9_subdone_assign_proc : process(bottom_data_V_empty_n, ap_enable_reg_pp1_iter0, icmp_ln17_reg_875)
    begin
                ap_block_pp1_stage9_subdone <= ((bottom_data_V_empty_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln17_reg_875 = ap_const_lv1_0));
    end process;

        ap_block_pp2_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp2_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state10_pp1_stage6_iter0_assign_proc : process(bottom_data_V_empty_n, icmp_ln17_reg_875)
    begin
                ap_block_state10_pp1_stage6_iter0 <= ((bottom_data_V_empty_n = ap_const_logic_0) and (icmp_ln17_reg_875 = ap_const_lv1_0));
    end process;


    ap_block_state11_pp1_stage7_iter0_assign_proc : process(bottom_data_V_empty_n, icmp_ln17_reg_875)
    begin
                ap_block_state11_pp1_stage7_iter0 <= ((bottom_data_V_empty_n = ap_const_logic_0) and (icmp_ln17_reg_875 = ap_const_lv1_0));
    end process;


    ap_block_state12_pp1_stage8_iter0_assign_proc : process(bottom_data_V_empty_n, icmp_ln17_reg_875)
    begin
                ap_block_state12_pp1_stage8_iter0 <= ((bottom_data_V_empty_n = ap_const_logic_0) and (icmp_ln17_reg_875 = ap_const_lv1_0));
    end process;


    ap_block_state13_pp1_stage9_iter0_assign_proc : process(bottom_data_V_empty_n, icmp_ln17_reg_875)
    begin
                ap_block_state13_pp1_stage9_iter0 <= ((bottom_data_V_empty_n = ap_const_logic_0) and (icmp_ln17_reg_875 = ap_const_lv1_0));
    end process;


    ap_block_state14_pp1_stage10_iter0_assign_proc : process(bottom_data_V_empty_n, icmp_ln17_reg_875)
    begin
                ap_block_state14_pp1_stage10_iter0 <= ((bottom_data_V_empty_n = ap_const_logic_0) and (icmp_ln17_reg_875 = ap_const_lv1_0));
    end process;


    ap_block_state15_pp1_stage11_iter0_assign_proc : process(bottom_data_V_empty_n, icmp_ln17_reg_875)
    begin
                ap_block_state15_pp1_stage11_iter0 <= ((bottom_data_V_empty_n = ap_const_logic_0) and (icmp_ln17_reg_875 = ap_const_lv1_0));
    end process;


    ap_block_state16_pp1_stage12_iter0_assign_proc : process(bottom_data_V_empty_n, icmp_ln17_reg_875)
    begin
                ap_block_state16_pp1_stage12_iter0 <= ((bottom_data_V_empty_n = ap_const_logic_0) and (icmp_ln17_reg_875 = ap_const_lv1_0));
    end process;


    ap_block_state17_pp1_stage13_iter0_assign_proc : process(bottom_data_V_empty_n, icmp_ln17_reg_875)
    begin
                ap_block_state17_pp1_stage13_iter0 <= ((bottom_data_V_empty_n = ap_const_logic_0) and (icmp_ln17_reg_875 = ap_const_lv1_0));
    end process;


    ap_block_state18_pp1_stage14_iter0_assign_proc : process(bottom_data_V_empty_n, icmp_ln17_reg_875)
    begin
                ap_block_state18_pp1_stage14_iter0 <= ((bottom_data_V_empty_n = ap_const_logic_0) and (icmp_ln17_reg_875 = ap_const_lv1_0));
    end process;


    ap_block_state19_pp1_stage15_iter0_assign_proc : process(bottom_data_V_empty_n, icmp_ln17_reg_875)
    begin
                ap_block_state19_pp1_stage15_iter0 <= ((bottom_data_V_empty_n = ap_const_logic_0) and (icmp_ln17_reg_875 = ap_const_lv1_0));
    end process;


    ap_block_state20_pp1_stage16_iter0_assign_proc : process(bottom_data_V_empty_n, icmp_ln17_reg_875)
    begin
                ap_block_state20_pp1_stage16_iter0 <= ((bottom_data_V_empty_n = ap_const_logic_0) and (icmp_ln17_reg_875 = ap_const_lv1_0));
    end process;


    ap_block_state21_pp1_stage17_iter0_assign_proc : process(bottom_data_V_empty_n, icmp_ln17_reg_875)
    begin
                ap_block_state21_pp1_stage17_iter0 <= ((bottom_data_V_empty_n = ap_const_logic_0) and (icmp_ln17_reg_875 = ap_const_lv1_0));
    end process;


    ap_block_state22_pp1_stage18_iter0_assign_proc : process(bottom_data_V_empty_n, icmp_ln17_reg_875)
    begin
                ap_block_state22_pp1_stage18_iter0 <= ((bottom_data_V_empty_n = ap_const_logic_0) and (icmp_ln17_reg_875 = ap_const_lv1_0));
    end process;


    ap_block_state23_pp1_stage19_iter0_assign_proc : process(bottom_data_V_empty_n, icmp_ln17_reg_875)
    begin
                ap_block_state23_pp1_stage19_iter0 <= ((bottom_data_V_empty_n = ap_const_logic_0) and (icmp_ln17_reg_875 = ap_const_lv1_0));
    end process;


    ap_block_state24_pp1_stage20_iter0_assign_proc : process(bottom_data_V_empty_n, icmp_ln17_reg_875)
    begin
                ap_block_state24_pp1_stage20_iter0 <= ((bottom_data_V_empty_n = ap_const_logic_0) and (icmp_ln17_reg_875 = ap_const_lv1_0));
    end process;


    ap_block_state25_pp1_stage21_iter0_assign_proc : process(bottom_data_V_empty_n, icmp_ln17_reg_875)
    begin
                ap_block_state25_pp1_stage21_iter0 <= ((bottom_data_V_empty_n = ap_const_logic_0) and (icmp_ln17_reg_875 = ap_const_lv1_0));
    end process;


    ap_block_state26_pp1_stage22_iter0_assign_proc : process(bottom_data_V_empty_n, icmp_ln17_reg_875)
    begin
                ap_block_state26_pp1_stage22_iter0 <= ((bottom_data_V_empty_n = ap_const_logic_0) and (icmp_ln17_reg_875 = ap_const_lv1_0));
    end process;


    ap_block_state27_pp1_stage0_iter1_assign_proc : process(bottom_data_V_empty_n)
    begin
                ap_block_state27_pp1_stage0_iter1 <= (bottom_data_V_empty_n = ap_const_logic_0);
    end process;

        ap_block_state28_pp1_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp1_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp1_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp1_stage4_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp1_stage5_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state33_pp1_stage6_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state34_pp1_stage7_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state35_pp1_stage8_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state36_pp1_stage9_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state37_pp1_stage10_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state38_pp1_stage11_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state39_pp1_stage12_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state40_pp1_stage13_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state41_pp1_stage14_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state42_pp1_stage15_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state43_pp1_stage16_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state44_pp1_stage17_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state45_pp1_stage18_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state46_pp1_stage19_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state47_pp1_stage20_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state48_pp1_stage21_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state49_pp1_stage22_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state50_pp1_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state55_pp2_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state56_pp2_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state5_pp1_stage1_iter0_assign_proc : process(bottom_data_V_empty_n, icmp_ln17_reg_875)
    begin
                ap_block_state5_pp1_stage1_iter0 <= ((bottom_data_V_empty_n = ap_const_logic_0) and (icmp_ln17_reg_875 = ap_const_lv1_0));
    end process;


    ap_block_state6_pp1_stage2_iter0_assign_proc : process(bottom_data_V_empty_n, icmp_ln17_reg_875)
    begin
                ap_block_state6_pp1_stage2_iter0 <= ((bottom_data_V_empty_n = ap_const_logic_0) and (icmp_ln17_reg_875 = ap_const_lv1_0));
    end process;


    ap_block_state7_pp1_stage3_iter0_assign_proc : process(bottom_data_V_empty_n, icmp_ln17_reg_875)
    begin
                ap_block_state7_pp1_stage3_iter0 <= ((bottom_data_V_empty_n = ap_const_logic_0) and (icmp_ln17_reg_875 = ap_const_lv1_0));
    end process;


    ap_block_state8_pp1_stage4_iter0_assign_proc : process(bottom_data_V_empty_n, icmp_ln17_reg_875)
    begin
                ap_block_state8_pp1_stage4_iter0 <= ((bottom_data_V_empty_n = ap_const_logic_0) and (icmp_ln17_reg_875 = ap_const_lv1_0));
    end process;


    ap_block_state9_pp1_stage5_iter0_assign_proc : process(bottom_data_V_empty_n, icmp_ln17_reg_875)
    begin
                ap_block_state9_pp1_stage5_iter0 <= ((bottom_data_V_empty_n = ap_const_logic_0) and (icmp_ln17_reg_875 = ap_const_lv1_0));
    end process;


    ap_condition_pp1_exit_iter0_state4_assign_proc : process(icmp_ln17_fu_466_p2)
    begin
        if ((icmp_ln17_fu_466_p2 = ap_const_lv1_1)) then 
            ap_condition_pp1_exit_iter0_state4 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state4 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp2_exit_iter0_state55_assign_proc : process(icmp_ln46_fu_597_p2)
    begin
        if ((icmp_ln46_fu_597_p2 = ap_const_lv1_1)) then 
            ap_condition_pp2_exit_iter0_state55 <= ap_const_logic_1;
        else 
            ap_condition_pp2_exit_iter0_state55 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, ap_CS_fsm_state58, icmp_ln52_fu_629_p2)
    begin
        if ((((icmp_ln52_fu_629_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state58)) or ((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);
    ap_enable_pp2 <= (ap_idle_pp2 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp2_assign_proc : process(ap_enable_reg_pp2_iter0, ap_enable_reg_pp2_iter1)
    begin
        if (((ap_enable_reg_pp2_iter1 = ap_const_logic_0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_0))) then 
            ap_idle_pp2 <= ap_const_logic_1;
        else 
            ap_idle_pp2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_h_0_i_i_phi_fu_278_p4_assign_proc : process(icmp_ln17_reg_875, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, h_0_i_i_reg_274, h_reg_879)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln17_reg_875 = ap_const_lv1_0))) then 
            ap_phi_mux_h_0_i_i_phi_fu_278_p4 <= h_reg_879;
        else 
            ap_phi_mux_h_0_i_i_phi_fu_278_p4 <= h_0_i_i_reg_274;
        end if; 
    end process;


    ap_ready_assign_proc : process(ap_CS_fsm_state58, icmp_ln52_fu_629_p2)
    begin
        if (((icmp_ln52_fu_629_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state58))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    bottom_data_V_blk_n_assign_proc : process(bottom_data_V_empty_n, ap_CS_fsm_pp1_stage1, ap_enable_reg_pp1_iter0, ap_block_pp1_stage1, icmp_ln17_reg_875, ap_CS_fsm_pp1_stage2, ap_block_pp1_stage2, ap_CS_fsm_pp1_stage3, ap_block_pp1_stage3, ap_CS_fsm_pp1_stage4, ap_block_pp1_stage4, ap_CS_fsm_pp1_stage5, ap_block_pp1_stage5, ap_CS_fsm_pp1_stage6, ap_block_pp1_stage6, ap_CS_fsm_pp1_stage7, ap_block_pp1_stage7, ap_CS_fsm_pp1_stage8, ap_block_pp1_stage8, ap_CS_fsm_pp1_stage9, ap_block_pp1_stage9, ap_CS_fsm_pp1_stage10, ap_block_pp1_stage10, ap_CS_fsm_pp1_stage11, ap_block_pp1_stage11, ap_CS_fsm_pp1_stage12, ap_block_pp1_stage12, ap_CS_fsm_pp1_stage13, ap_block_pp1_stage13, ap_CS_fsm_pp1_stage14, ap_block_pp1_stage14, ap_CS_fsm_pp1_stage15, ap_block_pp1_stage15, ap_CS_fsm_pp1_stage16, ap_block_pp1_stage16, ap_CS_fsm_pp1_stage17, ap_block_pp1_stage17, ap_CS_fsm_pp1_stage18, ap_block_pp1_stage18, ap_CS_fsm_pp1_stage19, ap_block_pp1_stage19, ap_CS_fsm_pp1_stage20, ap_block_pp1_stage20, ap_CS_fsm_pp1_stage21, ap_block_pp1_stage21, ap_CS_fsm_pp1_stage22, ap_block_pp1_stage22, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage22) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage22) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln17_reg_875 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage21) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage21) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln17_reg_875 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage20) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage20) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln17_reg_875 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage19) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage19) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln17_reg_875 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage18) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage18) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln17_reg_875 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage17) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage17) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln17_reg_875 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage16) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage16) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln17_reg_875 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage15) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage15) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln17_reg_875 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage14) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage14) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln17_reg_875 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage13) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage13) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln17_reg_875 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage12) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage12) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln17_reg_875 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage11) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage11) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln17_reg_875 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage10) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage10) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln17_reg_875 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage9) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage9) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln17_reg_875 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage8) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage8) and (icmp_ln17_reg_875 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage7) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage7) and (icmp_ln17_reg_875 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage6) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage6) and (icmp_ln17_reg_875 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage5) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage5) and (icmp_ln17_reg_875 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage4) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage4) and (icmp_ln17_reg_875 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage3) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage3) and (icmp_ln17_reg_875 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage2) and (icmp_ln17_reg_875 = ap_const_lv1_0)) or ((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (icmp_ln17_reg_875 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage1)))) then 
            bottom_data_V_blk_n <= bottom_data_V_empty_n;
        else 
            bottom_data_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    bottom_data_V_read_assign_proc : process(ap_CS_fsm_pp1_stage1, ap_enable_reg_pp1_iter0, icmp_ln17_reg_875, ap_CS_fsm_pp1_stage2, ap_CS_fsm_pp1_stage3, ap_CS_fsm_pp1_stage4, ap_CS_fsm_pp1_stage5, ap_CS_fsm_pp1_stage6, ap_CS_fsm_pp1_stage7, ap_CS_fsm_pp1_stage8, ap_CS_fsm_pp1_stage9, ap_CS_fsm_pp1_stage10, ap_CS_fsm_pp1_stage11, ap_CS_fsm_pp1_stage12, ap_CS_fsm_pp1_stage13, ap_CS_fsm_pp1_stage14, ap_CS_fsm_pp1_stage15, ap_CS_fsm_pp1_stage16, ap_CS_fsm_pp1_stage17, ap_CS_fsm_pp1_stage18, ap_CS_fsm_pp1_stage19, ap_CS_fsm_pp1_stage20, ap_CS_fsm_pp1_stage21, ap_CS_fsm_pp1_stage22, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0_11001, ap_block_pp1_stage1_11001, ap_block_pp1_stage2_11001, ap_block_pp1_stage3_11001, ap_block_pp1_stage4_11001, ap_block_pp1_stage5_11001, ap_block_pp1_stage6_11001, ap_block_pp1_stage7_11001, ap_block_pp1_stage8_11001, ap_block_pp1_stage9_11001, ap_block_pp1_stage10_11001, ap_block_pp1_stage11_11001, ap_block_pp1_stage12_11001, ap_block_pp1_stage13_11001, ap_block_pp1_stage14_11001, ap_block_pp1_stage15_11001, ap_block_pp1_stage16_11001, ap_block_pp1_stage17_11001, ap_block_pp1_stage18_11001, ap_block_pp1_stage19_11001, ap_block_pp1_stage20_11001, ap_block_pp1_stage21_11001, ap_block_pp1_stage22_11001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage22_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage22) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln17_reg_875 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage21_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage21) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln17_reg_875 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage20_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage20) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln17_reg_875 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage19_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage19) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln17_reg_875 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage18_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage18) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln17_reg_875 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage17_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage17) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln17_reg_875 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage16_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage16) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln17_reg_875 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage15_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage15) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln17_reg_875 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage14_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage14) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln17_reg_875 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage13_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage13) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln17_reg_875 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage12_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage12) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln17_reg_875 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage11_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage11) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln17_reg_875 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage10_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage10) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln17_reg_875 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage9_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage9) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln17_reg_875 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage8_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage8) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln17_reg_875 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage7) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln17_reg_875 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage6) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln17_reg_875 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage5) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln17_reg_875 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage4) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln17_reg_875 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln17_reg_875 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln17_reg_875 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (icmp_ln17_reg_875 = ap_const_lv1_0)))) then 
            bottom_data_V_read <= ap_const_logic_1;
        else 
            bottom_data_V_read <= ap_const_logic_0;
        end if; 
    end process;

    flag_meceta_0_i_load_load_fu_719_p1 <= flag_meceta_0_i_fu_118;
    gep84345_part_set_i_fu_676_p3 <= (ap_const_lv1_1 & zext_ln52_reg_1058);
    grp_fu_391_p2 <= "1" when (bottom_data_V_dout = ap_const_lv8_0) else "0";
    grp_fu_397_p2 <= std_logic_vector(unsigned(histogram_q1) + unsigned(ap_const_lv8_1));
    grp_fu_404_p2 <= std_logic_vector(unsigned(histogram_q0) + unsigned(ap_const_lv8_1));
    grp_fu_430_p2 <= "1" when (unsigned(smoothed_load_reg_1082) > unsigned(smoothed_q0)) else "0";
    grp_fu_438_p2 <= std_logic_vector(unsigned(line_counter_3_fu_122) + unsigned(ap_const_lv8_1));
    h_fu_472_p2 <= std_logic_vector(unsigned(ap_phi_mux_h_0_i_i_phi_fu_278_p4) + unsigned(ap_const_lv9_1));

    histogram_address0_assign_proc : process(ap_CS_fsm_pp1_stage1, ap_block_pp1_stage1, ap_CS_fsm_pp1_stage2, ap_block_pp1_stage2, ap_CS_fsm_pp1_stage3, ap_block_pp1_stage3, ap_CS_fsm_pp1_stage4, ap_block_pp1_stage4, ap_CS_fsm_pp1_stage5, ap_block_pp1_stage5, ap_CS_fsm_pp1_stage6, ap_block_pp1_stage6, ap_CS_fsm_pp1_stage7, ap_block_pp1_stage7, ap_CS_fsm_pp1_stage8, ap_block_pp1_stage8, ap_CS_fsm_pp1_stage9, ap_block_pp1_stage9, ap_CS_fsm_pp1_stage10, ap_block_pp1_stage10, ap_CS_fsm_pp1_stage11, ap_block_pp1_stage11, ap_CS_fsm_pp1_stage12, ap_block_pp1_stage12, ap_CS_fsm_pp1_stage13, ap_block_pp1_stage13, ap_CS_fsm_pp1_stage14, ap_block_pp1_stage14, ap_CS_fsm_pp1_stage15, ap_block_pp1_stage15, ap_CS_fsm_pp1_stage16, ap_block_pp1_stage16, ap_CS_fsm_pp1_stage17, ap_block_pp1_stage17, ap_CS_fsm_pp1_stage18, ap_block_pp1_stage18, ap_CS_fsm_pp1_stage19, ap_block_pp1_stage19, ap_CS_fsm_pp1_stage20, ap_block_pp1_stage20, ap_CS_fsm_pp1_stage21, ap_block_pp1_stage21, ap_CS_fsm_pp1_stage22, ap_block_pp1_stage22, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_block_pp1_stage0, ap_CS_fsm_state2, histogram_addr_1_reg_884, histogram_addr_1_reg_884_pp1_iter1_reg, zext_ln30_fu_461_p1)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage22) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage22)) or ((ap_const_boolean_0 = ap_block_pp1_stage21) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage21)) or ((ap_const_boolean_0 = ap_block_pp1_stage20) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage20)) or ((ap_const_boolean_0 = ap_block_pp1_stage19) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage19)) or ((ap_const_boolean_0 = ap_block_pp1_stage18) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage18)) or ((ap_const_boolean_0 = ap_block_pp1_stage17) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage17)) or ((ap_const_boolean_0 = ap_block_pp1_stage16) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage16)) or ((ap_const_boolean_0 = ap_block_pp1_stage15) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage15)) or ((ap_const_boolean_0 = ap_block_pp1_stage14) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage14)) or ((ap_const_boolean_0 = ap_block_pp1_stage13) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage13)) or ((ap_const_boolean_0 = ap_block_pp1_stage12) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage12)) or ((ap_const_boolean_0 = ap_block_pp1_stage11) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage11)) or ((ap_const_boolean_0 = ap_block_pp1_stage10) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage10)) or ((ap_const_boolean_0 = ap_block_pp1_stage9) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage9)) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage8) and (ap_const_boolean_0 = ap_block_pp1_stage8)) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage7) and (ap_const_boolean_0 = ap_block_pp1_stage7)) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage6) and (ap_const_boolean_0 = ap_block_pp1_stage6)) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage5) and (ap_const_boolean_0 = ap_block_pp1_stage5)) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage4) and (ap_const_boolean_0 = ap_block_pp1_stage4)) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3) and (ap_const_boolean_0 = ap_block_pp1_stage3)) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (ap_const_boolean_0 = ap_block_pp1_stage2)) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_const_boolean_0 = ap_block_pp1_stage1)))) then 
            histogram_address0 <= histogram_addr_1_reg_884_pp1_iter1_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            histogram_address0 <= histogram_addr_1_reg_884;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            histogram_address0 <= zext_ln30_fu_461_p1(9 - 1 downto 0);
        else 
            histogram_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    histogram_address1_assign_proc : process(ap_CS_fsm_pp1_stage1, ap_enable_reg_pp1_iter0, ap_block_pp1_stage1, ap_CS_fsm_pp1_stage2, ap_block_pp1_stage2, ap_CS_fsm_pp1_stage3, ap_block_pp1_stage3, ap_CS_fsm_pp1_stage4, ap_block_pp1_stage4, ap_CS_fsm_pp1_stage5, ap_block_pp1_stage5, ap_CS_fsm_pp1_stage6, ap_block_pp1_stage6, ap_CS_fsm_pp1_stage7, ap_block_pp1_stage7, ap_CS_fsm_pp1_stage8, ap_block_pp1_stage8, ap_CS_fsm_pp1_stage9, ap_block_pp1_stage9, ap_CS_fsm_pp1_stage10, ap_block_pp1_stage10, ap_CS_fsm_pp1_stage11, ap_block_pp1_stage11, ap_CS_fsm_pp1_stage12, ap_block_pp1_stage12, ap_CS_fsm_pp1_stage13, ap_block_pp1_stage13, ap_CS_fsm_pp1_stage14, ap_block_pp1_stage14, ap_CS_fsm_pp1_stage15, ap_block_pp1_stage15, ap_CS_fsm_pp1_stage16, ap_block_pp1_stage16, ap_CS_fsm_pp1_stage17, ap_block_pp1_stage17, ap_CS_fsm_pp1_stage18, ap_block_pp1_stage18, ap_CS_fsm_pp1_stage19, ap_block_pp1_stage19, ap_CS_fsm_pp1_stage20, ap_block_pp1_stage20, ap_CS_fsm_pp1_stage21, ap_block_pp1_stage21, ap_CS_fsm_pp1_stage22, ap_block_pp1_stage22, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0, histogram_addr_1_reg_884, histogram_addr_1_reg_884_pp1_iter1_reg, ap_CS_fsm_state53, ap_enable_reg_pp1_iter2, zext_ln40_fu_534_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            histogram_address1 <= zext_ln40_fu_534_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            histogram_address1 <= histogram_addr_1_reg_884_pp1_iter1_reg;
        elsif ((((ap_const_boolean_0 = ap_block_pp1_stage22) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage22) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage21) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage21) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage20) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage20) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage19) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage19) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage18) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage18) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage17) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage17) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage16) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage16) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage15) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage15) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage14) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage14) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage13) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage13) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage12) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage12) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage11) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage11) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage10) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage10) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage9) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage9) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage8) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage8)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage7) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage7)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage6) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage6)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage5) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage5)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage4) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage4)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage3) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage3)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage2)) or ((ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_const_boolean_0 = ap_block_pp1_stage1)))) then 
            histogram_address1 <= histogram_addr_1_reg_884;
        else 
            histogram_address1 <= "XXXXXXXXX";
        end if; 
    end process;


    histogram_ce0_assign_proc : process(ap_CS_fsm_pp1_stage1, ap_CS_fsm_pp1_stage2, ap_CS_fsm_pp1_stage3, ap_CS_fsm_pp1_stage4, ap_CS_fsm_pp1_stage5, ap_CS_fsm_pp1_stage6, ap_CS_fsm_pp1_stage7, ap_CS_fsm_pp1_stage8, ap_CS_fsm_pp1_stage9, ap_CS_fsm_pp1_stage10, ap_CS_fsm_pp1_stage11, ap_CS_fsm_pp1_stage12, ap_CS_fsm_pp1_stage13, ap_CS_fsm_pp1_stage14, ap_CS_fsm_pp1_stage15, ap_CS_fsm_pp1_stage16, ap_CS_fsm_pp1_stage17, ap_CS_fsm_pp1_stage18, ap_CS_fsm_pp1_stage19, ap_CS_fsm_pp1_stage20, ap_CS_fsm_pp1_stage21, ap_CS_fsm_pp1_stage22, ap_CS_fsm_pp1_stage0, ap_enable_reg_pp1_iter1, ap_CS_fsm_state2, ap_block_pp1_stage0_11001, ap_block_pp1_stage1_11001, ap_block_pp1_stage2_11001, ap_block_pp1_stage3_11001, ap_block_pp1_stage4_11001, ap_block_pp1_stage5_11001, ap_block_pp1_stage6_11001, ap_block_pp1_stage7_11001, ap_block_pp1_stage8_11001, ap_block_pp1_stage9_11001, ap_block_pp1_stage10_11001, ap_block_pp1_stage11_11001, ap_block_pp1_stage12_11001, ap_block_pp1_stage13_11001, ap_block_pp1_stage14_11001, ap_block_pp1_stage15_11001, ap_block_pp1_stage16_11001, ap_block_pp1_stage17_11001, ap_block_pp1_stage18_11001, ap_block_pp1_stage19_11001, ap_block_pp1_stage20_11001, ap_block_pp1_stage21_11001, ap_block_pp1_stage22_11001)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage22_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage22)) or ((ap_const_boolean_0 = ap_block_pp1_stage21_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage21)) or ((ap_const_boolean_0 = ap_block_pp1_stage20_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage20)) or ((ap_const_boolean_0 = ap_block_pp1_stage19_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage19)) or ((ap_const_boolean_0 = ap_block_pp1_stage18_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage18)) or ((ap_const_boolean_0 = ap_block_pp1_stage17_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage17)) or ((ap_const_boolean_0 = ap_block_pp1_stage16_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage16)) or ((ap_const_boolean_0 = ap_block_pp1_stage15_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage15)) or ((ap_const_boolean_0 = ap_block_pp1_stage14_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage14)) or ((ap_const_boolean_0 = ap_block_pp1_stage13_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage13)) or ((ap_const_boolean_0 = ap_block_pp1_stage12_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage12)) or ((ap_const_boolean_0 = ap_block_pp1_stage11_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage11)) or ((ap_const_boolean_0 = ap_block_pp1_stage10_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage10)) or ((ap_const_boolean_0 = ap_block_pp1_stage9_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage9)) or ((ap_const_boolean_0 = ap_block_pp1_stage8_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage8)) or ((ap_const_boolean_0 = ap_block_pp1_stage7_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage7)) or ((ap_const_boolean_0 = ap_block_pp1_stage6_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage6)) or ((ap_const_boolean_0 = ap_block_pp1_stage5_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage5)) or ((ap_const_boolean_0 = ap_block_pp1_stage4_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage4)) or ((ap_const_boolean_0 = ap_block_pp1_stage3_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3)) or ((ap_const_boolean_0 = ap_block_pp1_stage2_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2)) or ((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1)))) then 
            histogram_ce0 <= ap_const_logic_1;
        else 
            histogram_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    histogram_ce1_assign_proc : process(ap_CS_fsm_pp1_stage1, ap_enable_reg_pp1_iter0, ap_CS_fsm_pp1_stage2, ap_CS_fsm_pp1_stage3, ap_CS_fsm_pp1_stage4, ap_CS_fsm_pp1_stage5, ap_CS_fsm_pp1_stage6, ap_CS_fsm_pp1_stage7, ap_CS_fsm_pp1_stage8, ap_CS_fsm_pp1_stage9, ap_CS_fsm_pp1_stage10, ap_CS_fsm_pp1_stage11, ap_CS_fsm_pp1_stage12, ap_CS_fsm_pp1_stage13, ap_CS_fsm_pp1_stage14, ap_CS_fsm_pp1_stage15, ap_CS_fsm_pp1_stage16, ap_CS_fsm_pp1_stage17, ap_CS_fsm_pp1_stage18, ap_CS_fsm_pp1_stage19, ap_CS_fsm_pp1_stage20, ap_CS_fsm_pp1_stage21, ap_CS_fsm_pp1_stage22, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_block_pp1_stage1_11001, ap_block_pp1_stage2_11001, ap_block_pp1_stage3_11001, ap_block_pp1_stage4_11001, ap_block_pp1_stage5_11001, ap_block_pp1_stage6_11001, ap_block_pp1_stage7_11001, ap_block_pp1_stage8_11001, ap_block_pp1_stage9_11001, ap_block_pp1_stage10_11001, ap_block_pp1_stage11_11001, ap_block_pp1_stage12_11001, ap_block_pp1_stage13_11001, ap_block_pp1_stage14_11001, ap_block_pp1_stage15_11001, ap_block_pp1_stage16_11001, ap_block_pp1_stage17_11001, ap_block_pp1_stage18_11001, ap_block_pp1_stage19_11001, ap_block_pp1_stage20_11001, ap_block_pp1_stage21_11001, ap_block_pp1_stage22_11001, ap_CS_fsm_state53, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state53) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0)) or ((ap_const_boolean_0 = ap_block_pp1_stage22_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage22) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage21_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage21) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage20_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage20) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage19_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage19) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage18_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage18) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage17_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage17) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage16_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage16) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage15_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage15) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage14_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage14) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage13_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage13) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage12_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage12) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage11_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage11) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage10_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage10) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage9_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage9) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage8_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage8) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage7) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage6) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage5) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage4) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1)))) then 
            histogram_ce1 <= ap_const_logic_1;
        else 
            histogram_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    histogram_d0_assign_proc : process(ap_CS_fsm_pp1_stage1, ap_block_pp1_stage1, ap_CS_fsm_pp1_stage3, ap_block_pp1_stage3, ap_CS_fsm_pp1_stage5, ap_block_pp1_stage5, ap_CS_fsm_pp1_stage7, ap_block_pp1_stage7, ap_CS_fsm_pp1_stage9, ap_block_pp1_stage9, ap_CS_fsm_pp1_stage11, ap_block_pp1_stage11, ap_CS_fsm_pp1_stage13, ap_block_pp1_stage13, ap_CS_fsm_pp1_stage15, ap_block_pp1_stage15, ap_CS_fsm_pp1_stage17, ap_block_pp1_stage17, ap_CS_fsm_pp1_stage19, ap_block_pp1_stage19, ap_CS_fsm_pp1_stage21, ap_block_pp1_stage21, ap_enable_reg_pp1_iter1, ap_CS_fsm_state2, grp_fu_404_p2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage21) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage21)) or ((ap_const_boolean_0 = ap_block_pp1_stage19) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage19)) or ((ap_const_boolean_0 = ap_block_pp1_stage17) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage17)) or ((ap_const_boolean_0 = ap_block_pp1_stage15) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage15)) or ((ap_const_boolean_0 = ap_block_pp1_stage13) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage13)) or ((ap_const_boolean_0 = ap_block_pp1_stage11) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage11)) or ((ap_const_boolean_0 = ap_block_pp1_stage9) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage9)) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage7) and (ap_const_boolean_0 = ap_block_pp1_stage7)) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage5) and (ap_const_boolean_0 = ap_block_pp1_stage5)) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3) and (ap_const_boolean_0 = ap_block_pp1_stage3)) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (ap_const_boolean_0 = ap_block_pp1_stage1)))) then 
            histogram_d0 <= grp_fu_404_p2;
        elsif ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            histogram_d0 <= ap_const_lv8_0;
        else 
            histogram_d0 <= "XXXXXXXX";
        end if; 
    end process;


    histogram_d1_assign_proc : process(ap_enable_reg_pp1_iter0, ap_CS_fsm_pp1_stage2, ap_block_pp1_stage2, ap_CS_fsm_pp1_stage4, ap_block_pp1_stage4, ap_CS_fsm_pp1_stage6, ap_block_pp1_stage6, ap_CS_fsm_pp1_stage8, ap_block_pp1_stage8, ap_CS_fsm_pp1_stage10, ap_block_pp1_stage10, ap_CS_fsm_pp1_stage12, ap_block_pp1_stage12, ap_CS_fsm_pp1_stage14, ap_block_pp1_stage14, ap_CS_fsm_pp1_stage16, ap_block_pp1_stage16, ap_CS_fsm_pp1_stage18, ap_block_pp1_stage18, ap_CS_fsm_pp1_stage20, ap_block_pp1_stage20, ap_CS_fsm_pp1_stage22, ap_block_pp1_stage22, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0, ap_enable_reg_pp1_iter2, grp_fu_397_p2, grp_fu_404_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then 
            histogram_d1 <= grp_fu_404_p2;
        elsif ((((ap_const_boolean_0 = ap_block_pp1_stage22) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage22) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage20) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage20) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage18) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage18) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage16) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage16) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage14) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage14) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage12) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage12) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage10) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage10) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage8) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage8)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage6) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage6)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage4) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage4)) or ((ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp1_stage2)))) then 
            histogram_d1 <= grp_fu_397_p2;
        else 
            histogram_d1 <= "XXXXXXXX";
        end if; 
    end process;


    histogram_we0_assign_proc : process(ap_CS_fsm_pp1_stage1, ap_CS_fsm_pp1_stage3, ap_CS_fsm_pp1_stage5, ap_CS_fsm_pp1_stage7, ap_CS_fsm_pp1_stage9, ap_CS_fsm_pp1_stage11, ap_CS_fsm_pp1_stage13, ap_CS_fsm_pp1_stage15, ap_CS_fsm_pp1_stage17, ap_CS_fsm_pp1_stage19, ap_CS_fsm_pp1_stage21, ap_enable_reg_pp1_iter1, ap_CS_fsm_state2, ap_block_pp1_stage1_11001, ap_block_pp1_stage3_11001, ap_block_pp1_stage5_11001, ap_block_pp1_stage7_11001, ap_block_pp1_stage9_11001, ap_block_pp1_stage11_11001, icmp_ln895_13_reg_934, icmp_ln895_14_reg_938, ap_block_pp1_stage13_11001, icmp_ln895_15_reg_942, icmp_ln895_16_reg_946, ap_block_pp1_stage15_11001, icmp_ln895_17_reg_950, icmp_ln895_18_reg_954, ap_block_pp1_stage17_11001, icmp_ln895_19_reg_958, icmp_ln895_20_reg_962, ap_block_pp1_stage19_11001, icmp_ln895_21_reg_966, icmp_ln895_22_reg_970, ap_block_pp1_stage21_11001, icmp_ln895_23_reg_974, icmp_ln29_fu_449_p2)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln29_fu_449_p2 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage21_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage21) and (icmp_ln895_23_reg_974 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage19_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage19) and (icmp_ln895_22_reg_970 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage17_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage17) and (icmp_ln895_21_reg_966 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage15_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage15) and (icmp_ln895_20_reg_962 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage13_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage13) and (icmp_ln895_19_reg_958 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage11_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage11) and (icmp_ln895_18_reg_954 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage9_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage9) and (icmp_ln895_17_reg_950 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage7_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage7) and (icmp_ln895_16_reg_946 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage5_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage5) and (icmp_ln895_15_reg_942 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage3_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage3) and (icmp_ln895_14_reg_938 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage1_11001) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage1) and (icmp_ln895_13_reg_934 = ap_const_lv1_0)))) then 
            histogram_we0 <= ap_const_logic_1;
        else 
            histogram_we0 <= ap_const_logic_0;
        end if; 
    end process;


    histogram_we1_assign_proc : process(ap_enable_reg_pp1_iter0, icmp_ln17_reg_875, ap_CS_fsm_pp1_stage2, ap_CS_fsm_pp1_stage4, ap_CS_fsm_pp1_stage6, ap_CS_fsm_pp1_stage8, ap_CS_fsm_pp1_stage10, ap_CS_fsm_pp1_stage12, ap_CS_fsm_pp1_stage14, ap_CS_fsm_pp1_stage16, ap_CS_fsm_pp1_stage18, ap_CS_fsm_pp1_stage20, ap_CS_fsm_pp1_stage22, ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, icmp_ln895_reg_890, icmp_ln895_3_reg_894, ap_block_pp1_stage2_11001, icmp_ln895_4_reg_898, icmp_ln895_5_reg_902, ap_block_pp1_stage4_11001, icmp_ln895_6_reg_906, icmp_ln895_7_reg_910, ap_block_pp1_stage6_11001, icmp_ln895_8_reg_914, icmp_ln895_9_reg_918, ap_block_pp1_stage8_11001, icmp_ln895_10_reg_922, icmp_ln895_11_reg_926, ap_block_pp1_stage10_11001, icmp_ln895_12_reg_930, ap_block_pp1_stage12_11001, ap_block_pp1_stage14_11001, ap_block_pp1_stage16_11001, ap_block_pp1_stage18_11001, ap_block_pp1_stage20_11001, ap_block_pp1_stage22_11001, icmp_ln895_24_reg_978, ap_enable_reg_pp1_iter2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (icmp_ln895_24_reg_978 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage22_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage22) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln895_12_reg_930 = ap_const_lv1_0) and (icmp_ln17_reg_875 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage20_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage20) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln895_11_reg_926 = ap_const_lv1_0) and (icmp_ln17_reg_875 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage18_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage18) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln895_10_reg_922 = ap_const_lv1_0) and (icmp_ln17_reg_875 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage16_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage16) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln895_9_reg_918 = ap_const_lv1_0) and (icmp_ln17_reg_875 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage14_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage14) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln895_8_reg_914 = ap_const_lv1_0) and (icmp_ln17_reg_875 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage12_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage12) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln895_7_reg_910 = ap_const_lv1_0) and (icmp_ln17_reg_875 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage10_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage10) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln895_6_reg_906 = ap_const_lv1_0) and (icmp_ln17_reg_875 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage8_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage8) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln895_5_reg_902 = ap_const_lv1_0) and (icmp_ln17_reg_875 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage6) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln895_4_reg_898 = ap_const_lv1_0) and (icmp_ln17_reg_875 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage4) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln895_3_reg_894 = ap_const_lv1_0) and (icmp_ln17_reg_875 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage2) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln895_reg_890 = ap_const_lv1_0) and (icmp_ln17_reg_875 = ap_const_lv1_0)))) then 
            histogram_we1 <= ap_const_logic_1;
        else 
            histogram_we1 <= ap_const_logic_0;
        end if; 
    end process;

    i_4_fu_603_p2 <= std_logic_vector(unsigned(i1_0_i_reg_320) + unsigned(ap_const_lv3_1));
    i_5_fu_635_p2 <= std_logic_vector(unsigned(i2_0_i_reg_343) + unsigned(ap_const_lv9_1));
    i_fu_455_p2 <= std_logic_vector(unsigned(i_0_i_reg_263) + unsigned(ap_const_lv9_1));
    icmp_ln17_fu_466_p2 <= "1" when (ap_phi_mux_h_0_i_i_phi_fu_278_p4 = ap_const_lv9_140) else "0";
    icmp_ln29_fu_449_p2 <= "1" when (i_0_i_reg_263 = ap_const_lv9_140) else "0";
    icmp_ln35_fu_483_p2 <= "1" when (y_0_i_reg_285 = ap_const_lv9_140) else "0";
    icmp_ln37_fu_499_p2 <= "1" when (x_0_i_reg_297 = ap_const_lv5_10) else "0";
    icmp_ln39_fu_568_p2 <= "1" when (signed(tmp_reg_1004) < signed(ap_const_lv10_140)) else "0";
    icmp_ln46_fu_597_p2 <= "1" when (i1_0_i_reg_320 = ap_const_lv3_6) else "0";
    icmp_ln52_fu_629_p2 <= "1" when (i2_0_i_reg_343 = ap_const_lv9_140) else "0";
    icmp_ln53_1_fu_652_p2 <= "1" when (smoothed_q0 = ap_const_lv8_0) else "0";
    icmp_ln53_fu_646_p2 <= "1" when (line_counter_3_fu_122 = ap_const_lv8_0) else "0";
    icmp_ln61_fu_801_p2 <= "1" when (unsigned(last_max_dist_0_i_reg_331) < unsigned(ap_const_lv16_34)) else "0";
    icmp_ln71_fu_698_p2 <= "1" when (unsigned(smoothed_load_reg_1082) < unsigned(smoothed_q0)) else "0";
    icmp_ln74_fu_769_p2 <= "1" when (signed(sub_ln74_fu_763_p2) > signed(ap_const_lv17_33)) else "0";
    icmp_ln85_1_fu_831_p2 <= "1" when (unsigned(last_max_dist_0_i_reg_331) > unsigned(ap_const_lv16_33)) else "0";
    last_max_dist_fu_856_p2 <= std_logic_vector(unsigned(last_max_dist_6_i_reg_355) + unsigned(ap_const_lv16_1));
    line_bases_active_3_1_fu_812_p3 <= (ap_const_lv1_1 & zext_ln52_reg_1058);
    line_bases_active_3_2_fu_792_p3 <= (ap_const_lv1_1 & p_tmp_fu_751_p2);
    line_bases_active_3_3_fu_848_p3 <= (ap_const_lv1_1 & zext_ln52_reg_1058);

    line_bases_address0_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_enable_reg_pp2_iter0, ap_CS_fsm_state59, icmp_ln53_fu_646_p2, icmp_ln53_1_fu_652_p2, ap_CS_fsm_state62, zext_ln47_fu_609_p1, ap_block_pp2_stage0, sext_ln60_fu_671_p1, zext_ln86_fu_843_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state62)) then 
            line_bases_address0 <= zext_ln86_fu_843_p1(3 - 1 downto 0);
        elsif (((icmp_ln53_fu_646_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state59) and (icmp_ln53_1_fu_652_p2 = ap_const_lv1_0))) then 
            line_bases_address0 <= ap_const_lv64_0(3 - 1 downto 0);
        elsif (((ap_const_logic_1 = ap_CS_fsm_state59) and (icmp_ln53_1_fu_652_p2 = ap_const_lv1_0) and (icmp_ln53_fu_646_p2 = ap_const_lv1_0))) then 
            line_bases_address0 <= sext_ln60_fu_671_p1(3 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            line_bases_address0 <= zext_ln47_fu_609_p1(3 - 1 downto 0);
        else 
            line_bases_address0 <= "XXX";
        end if; 
    end process;


    line_bases_address1_assign_proc : process(ap_CS_fsm_pp2_stage0, line_bases_addr_1_reg_1029, line_bases_addr_2_reg_1091, ap_CS_fsm_state61, grp_fu_430_p2, icmp_ln71_fu_698_p2, flag_meceta_0_i_load_load_fu_719_p1, ap_enable_reg_pp2_iter1, icmp_ln61_fu_801_p2, icmp_ln74_fu_769_p2, ap_block_pp2_stage0, zext_ln75_fu_787_p1, zext_ln64_fu_807_p1)
    begin
        if (((grp_fu_430_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state61) and (icmp_ln61_fu_801_p2 = ap_const_lv1_0))) then 
            line_bases_address1 <= zext_ln64_fu_807_p1(3 - 1 downto 0);
        elsif (((icmp_ln74_fu_769_p2 = ap_const_lv1_1) and (flag_meceta_0_i_load_load_fu_719_p1 = ap_const_lv1_1) and (icmp_ln71_fu_698_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state61) and (grp_fu_430_p2 = ap_const_lv1_0))) then 
            line_bases_address1 <= zext_ln75_fu_787_p1(3 - 1 downto 0);
        elsif ((((icmp_ln61_fu_801_p2 = ap_const_lv1_1) and (grp_fu_430_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state61)) or ((flag_meceta_0_i_load_load_fu_719_p1 = ap_const_lv1_1) and (icmp_ln71_fu_698_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state61) and (icmp_ln74_fu_769_p2 = ap_const_lv1_0) and (grp_fu_430_p2 = ap_const_lv1_0)))) then 
            line_bases_address1 <= line_bases_addr_2_reg_1091;
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            line_bases_address1 <= line_bases_addr_1_reg_1029;
        else 
            line_bases_address1 <= "XXX";
        end if; 
    end process;


    line_bases_ce0_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_enable_reg_pp2_iter0, ap_CS_fsm_state59, icmp_ln53_fu_646_p2, icmp_ln53_1_fu_652_p2, ap_CS_fsm_state62)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state62) or ((icmp_ln53_fu_646_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state59) and (icmp_ln53_1_fu_652_p2 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state59) and (icmp_ln53_1_fu_652_p2 = ap_const_lv1_0) and (icmp_ln53_fu_646_p2 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)))) then 
            line_bases_ce0 <= ap_const_logic_1;
        else 
            line_bases_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    line_bases_ce1_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_CS_fsm_state61, grp_fu_430_p2, icmp_ln71_fu_698_p2, flag_meceta_0_i_load_load_fu_719_p1, ap_enable_reg_pp2_iter1, icmp_ln61_fu_801_p2, icmp_ln74_fu_769_p2)
    begin
        if ((((icmp_ln61_fu_801_p2 = ap_const_lv1_1) and (grp_fu_430_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state61)) or ((grp_fu_430_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state61) and (icmp_ln61_fu_801_p2 = ap_const_lv1_0)) or ((icmp_ln74_fu_769_p2 = ap_const_lv1_1) and (flag_meceta_0_i_load_load_fu_719_p1 = ap_const_lv1_1) and (icmp_ln71_fu_698_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state61) and (grp_fu_430_p2 = ap_const_lv1_0)) or ((flag_meceta_0_i_load_load_fu_719_p1 = ap_const_lv1_1) and (icmp_ln71_fu_698_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state61) and (icmp_ln74_fu_769_p2 = ap_const_lv1_0) and (grp_fu_430_p2 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0)))) then 
            line_bases_ce1 <= ap_const_logic_1;
        else 
            line_bases_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    line_bases_d0_assign_proc : process(ap_CS_fsm_state59, icmp_ln53_fu_646_p2, icmp_ln53_1_fu_652_p2, ap_CS_fsm_state62, gep84345_part_set_i_fu_676_p3, line_bases_active_3_3_fu_848_p3)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state62)) then 
            line_bases_d0 <= line_bases_active_3_3_fu_848_p3;
        elsif (((icmp_ln53_fu_646_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state59) and (icmp_ln53_1_fu_652_p2 = ap_const_lv1_0))) then 
            line_bases_d0 <= gep84345_part_set_i_fu_676_p3;
        else 
            line_bases_d0 <= "XXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    line_bases_d1_assign_proc : process(ap_CS_fsm_pp2_stage0, ap_CS_fsm_state61, grp_fu_430_p2, icmp_ln71_fu_698_p2, flag_meceta_0_i_load_load_fu_719_p1, ap_enable_reg_pp2_iter1, icmp_ln61_fu_801_p2, icmp_ln74_fu_769_p2, ap_block_pp2_stage0, tmp_58_fu_614_p4, line_bases_y_3_addr1_1_fu_775_p5, line_bases_active_3_2_fu_792_p3, line_bases_active_3_1_fu_812_p3, line_bases_y_3_addr1_fu_820_p5)
    begin
        if (((icmp_ln61_fu_801_p2 = ap_const_lv1_1) and (grp_fu_430_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state61))) then 
            line_bases_d1 <= line_bases_y_3_addr1_fu_820_p5;
        elsif (((grp_fu_430_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state61) and (icmp_ln61_fu_801_p2 = ap_const_lv1_0))) then 
            line_bases_d1 <= line_bases_active_3_1_fu_812_p3;
        elsif (((icmp_ln74_fu_769_p2 = ap_const_lv1_1) and (flag_meceta_0_i_load_load_fu_719_p1 = ap_const_lv1_1) and (icmp_ln71_fu_698_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state61) and (grp_fu_430_p2 = ap_const_lv1_0))) then 
            line_bases_d1 <= line_bases_active_3_2_fu_792_p3;
        elsif (((flag_meceta_0_i_load_load_fu_719_p1 = ap_const_lv1_1) and (icmp_ln71_fu_698_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state61) and (icmp_ln74_fu_769_p2 = ap_const_lv1_0) and (grp_fu_430_p2 = ap_const_lv1_0))) then 
            line_bases_d1 <= line_bases_y_3_addr1_1_fu_775_p5;
        elsif (((ap_const_boolean_0 = ap_block_pp2_stage0) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0))) then 
            line_bases_d1 <= tmp_58_fu_614_p4;
        else 
            line_bases_d1 <= "XXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    line_bases_we0_assign_proc : process(ap_CS_fsm_state59, icmp_ln53_fu_646_p2, icmp_ln53_1_fu_652_p2, ap_CS_fsm_state62, and_ln85_fu_837_p2)
    begin
        if ((((ap_const_lv1_1 = and_ln85_fu_837_p2) and (ap_const_logic_1 = ap_CS_fsm_state62)) or ((icmp_ln53_fu_646_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state59) and (icmp_ln53_1_fu_652_p2 = ap_const_lv1_0)))) then 
            line_bases_we0 <= ap_const_logic_1;
        else 
            line_bases_we0 <= ap_const_logic_0;
        end if; 
    end process;


    line_bases_we1_assign_proc : process(icmp_ln46_reg_1020, ap_CS_fsm_pp2_stage0, ap_block_pp2_stage0_11001, ap_CS_fsm_state61, grp_fu_430_p2, icmp_ln71_fu_698_p2, flag_meceta_0_i_load_load_fu_719_p1, ap_enable_reg_pp2_iter1, icmp_ln61_fu_801_p2, icmp_ln74_fu_769_p2)
    begin
        if ((((icmp_ln61_fu_801_p2 = ap_const_lv1_1) and (grp_fu_430_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state61)) or ((grp_fu_430_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state61) and (icmp_ln61_fu_801_p2 = ap_const_lv1_0)) or ((icmp_ln74_fu_769_p2 = ap_const_lv1_1) and (flag_meceta_0_i_load_load_fu_719_p1 = ap_const_lv1_1) and (icmp_ln71_fu_698_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state61) and (grp_fu_430_p2 = ap_const_lv1_0)) or ((flag_meceta_0_i_load_load_fu_719_p1 = ap_const_lv1_1) and (icmp_ln71_fu_698_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state61) and (icmp_ln74_fu_769_p2 = ap_const_lv1_0) and (grp_fu_430_p2 = ap_const_lv1_0)) or ((ap_const_boolean_0 = ap_block_pp2_stage0_11001) and (ap_enable_reg_pp2_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp2_stage0) and (icmp_ln46_reg_1020 = ap_const_lv1_0)))) then 
            line_bases_we1 <= ap_const_logic_1;
        else 
            line_bases_we1 <= ap_const_logic_0;
        end if; 
    end process;

    line_bases_y_3_addr1_1_fu_775_p5 <= (line_bases_load_1_reg_1097(16 downto 16) & p_tmp_fu_751_p2);
    line_bases_y_3_addr1_fu_820_p5 <= (line_bases_load_1_reg_1097(16 downto 16) & zext_ln52_reg_1058);
    lshr_ln_fu_737_p4 <= meceta_counter_1_fu_126(15 downto 1);
    meceta_counter_fu_703_p2 <= std_logic_vector(unsigned(meceta_counter_1_fu_126) + unsigned(ap_const_lv16_1));
    p_tmp_fu_751_p2 <= std_logic_vector(unsigned(trunc_ln60_reg_1103) + unsigned(zext_ln73_fu_747_p1));
        sext_ln38_1_fu_521_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(xor_ln38_fu_515_p2),10));

        sext_ln38_fu_530_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(tmp_fu_525_p2),32));

        sext_ln60_fu_671_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln60_fu_665_p2),64));

        sext_ln85_fu_732_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln85_fu_726_p2),64));


    smoothed_address0_assign_proc : process(ap_CS_fsm_state53, ap_CS_fsm_state58, ap_CS_fsm_state60, ap_CS_fsm_state61, zext_ln42_fu_550_p1, zext_ln53_fu_641_p1, zext_ln60_1_fu_693_p1, sext_ln85_fu_732_p1)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state61)) then 
            smoothed_address0 <= sext_ln85_fu_732_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state60)) then 
            smoothed_address0 <= zext_ln60_1_fu_693_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state58)) then 
            smoothed_address0 <= zext_ln53_fu_641_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state53)) then 
            smoothed_address0 <= zext_ln42_fu_550_p1(9 - 1 downto 0);
        else 
            smoothed_address0 <= "XXXXXXXXX";
        end if; 
    end process;


    smoothed_ce0_assign_proc : process(ap_CS_fsm_state53, ap_CS_fsm_state58, ap_CS_fsm_state60, ap_CS_fsm_state61)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state61) or (ap_const_logic_1 = ap_CS_fsm_state60) or (ap_const_logic_1 = ap_CS_fsm_state58) or (ap_const_logic_1 = ap_CS_fsm_state53))) then 
            smoothed_ce0 <= ap_const_logic_1;
        else 
            smoothed_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    smoothed_d0 <= total_0_i_reg_308(11 downto 4);

    smoothed_we0_assign_proc : process(ap_CS_fsm_state53, icmp_ln37_fu_499_p2)
    begin
        if (((icmp_ln37_fu_499_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state53))) then 
            smoothed_we0 <= ap_const_logic_1;
        else 
            smoothed_we0 <= ap_const_logic_0;
        end if; 
    end process;

    sub_ln74_fu_763_p2 <= std_logic_vector(unsigned(zext_ln74_cast_i_fu_756_p1) - unsigned(zext_ln74_fu_760_p1));
    
    tmp_58_fu_614_p4_proc : process(line_bases_q0)
    begin
        tmp_58_fu_614_p4 <= line_bases_q0;
        tmp_58_fu_614_p4(16) <= ap_const_lv1_0(0);
    end process;

    tmp_59_fu_555_p3 <= tmp_reg_1004(9 downto 9);
    tmp_fu_525_p2 <= std_logic_vector(signed(sext_ln38_1_fu_521_p1) + signed(zext_ln37_reg_991));
    total_1_fu_589_p3 <= 
        total_fu_583_p2 when (and_ln39_fu_573_p2(0) = '1') else 
        total_0_i_reg_308;
    total_fu_583_p2 <= std_logic_vector(unsigned(total_0_i_reg_308) + unsigned(zext_ln40_1_fu_579_p1));
    trunc_ln38_fu_511_p1 <= x_0_i_reg_297(4 - 1 downto 0);
    trunc_ln60_fu_689_p1 <= line_bases_q0(16 - 1 downto 0);
    x_fu_505_p2 <= std_logic_vector(unsigned(x_0_i_reg_297) + unsigned(ap_const_lv5_1));
    xor_ln38_fu_515_p2 <= (trunc_ln38_fu_511_p1 xor ap_const_lv4_8);
    xor_ln39_fu_562_p2 <= (tmp_59_fu_555_p3 xor ap_const_lv1_1);
    y_fu_489_p2 <= std_logic_vector(unsigned(y_0_i_reg_285) + unsigned(ap_const_lv9_1));
    zext_ln20_fu_478_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_h_0_i_i_phi_fu_278_p4),64));
    zext_ln30_fu_461_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i_0_i_reg_263),64));
    zext_ln37_fu_495_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_0_i_reg_285),10));
    zext_ln40_1_fu_579_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(histogram_q1),16));
    zext_ln40_fu_534_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln38_fu_530_p1),64));
    zext_ln42_fu_550_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(y_0_i_reg_285),64));
    zext_ln47_fu_609_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i1_0_i_reg_320),64));
    zext_ln52_fu_625_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i2_0_i_reg_343),16));
    zext_ln53_fu_641_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i2_0_i_reg_343),64));
    zext_ln60_1_fu_693_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln60_fu_689_p1),64));
    zext_ln60_fu_661_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(line_counter_3_fu_122),9));
    zext_ln64_fu_807_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(line_counter_3_fu_122),64));
    zext_ln73_fu_747_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(lshr_ln_fu_737_p4),16));
    zext_ln74_cast_i_fu_756_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_tmp_fu_751_p2),17));
    zext_ln74_fu_760_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(trunc_ln60_reg_1103),17));
    zext_ln75_fu_787_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(line_counter_3_fu_122),64));
    zext_ln85_fu_722_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(i2_0_i_reg_343),10));
    zext_ln86_fu_843_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(line_counter_3_fu_122),64));
end behav;
