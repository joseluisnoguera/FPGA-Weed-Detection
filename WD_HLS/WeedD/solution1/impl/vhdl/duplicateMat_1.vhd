-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity duplicateMat_1 is
port (
    p_src_data_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    p_src_data_V_empty_n : IN STD_LOGIC;
    p_src_data_V_read : OUT STD_LOGIC;
    p_dst1_data_V_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    p_dst1_data_V_ce0 : OUT STD_LOGIC;
    p_dst1_data_V_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_dst1_data_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_dst1_data_V_we0 : OUT STD_LOGIC;
    p_dst1_data_V_address1 : OUT STD_LOGIC_VECTOR (15 downto 0);
    p_dst1_data_V_ce1 : OUT STD_LOGIC;
    p_dst1_data_V_d1 : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_dst1_data_V_q1 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_dst1_data_V_we1 : OUT STD_LOGIC;
    p_dst2_data_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_dst2_data_V_full_n : IN STD_LOGIC;
    p_dst2_data_V_write : OUT STD_LOGIC;
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC );
end;


architecture behav of duplicateMat_1 is 
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_logic_1 : STD_LOGIC := '1';

    signal duplicateMat_Loop_Re_2_U0_ap_start : STD_LOGIC;
    signal duplicateMat_Loop_Re_2_U0_ap_done : STD_LOGIC;
    signal duplicateMat_Loop_Re_2_U0_ap_continue : STD_LOGIC;
    signal duplicateMat_Loop_Re_2_U0_ap_idle : STD_LOGIC;
    signal duplicateMat_Loop_Re_2_U0_ap_ready : STD_LOGIC;
    signal duplicateMat_Loop_Re_2_U0_start_out : STD_LOGIC;
    signal duplicateMat_Loop_Re_2_U0_start_write : STD_LOGIC;
    signal duplicateMat_Loop_Re_2_U0_p_src_data_V_read : STD_LOGIC;
    signal duplicateMat_Loop_Re_2_U0_src_V_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal duplicateMat_Loop_Re_2_U0_src_V_V_write : STD_LOGIC;
    signal duplicateMat_Loop_Re_2_U0_p_src_rows_read_out_din : STD_LOGIC_VECTOR (8 downto 0);
    signal duplicateMat_Loop_Re_2_U0_p_src_rows_read_out_write : STD_LOGIC;
    signal duplicateMat_Loop_Re_2_U0_p_src_cols_read_out_din : STD_LOGIC_VECTOR (9 downto 0);
    signal duplicateMat_Loop_Re_2_U0_p_src_cols_read_out_write : STD_LOGIC;
    signal duplicateMat_Loop_Re_2_U0_p_dst2_cols_read_out_din : STD_LOGIC_VECTOR (9 downto 0);
    signal duplicateMat_Loop_Re_2_U0_p_dst2_cols_read_out_write : STD_LOGIC;
    signal xFDuplicate638_U0_ap_start : STD_LOGIC;
    signal xFDuplicate638_U0_ap_done : STD_LOGIC;
    signal xFDuplicate638_U0_ap_continue : STD_LOGIC;
    signal xFDuplicate638_U0_ap_idle : STD_LOGIC;
    signal xFDuplicate638_U0_ap_ready : STD_LOGIC;
    signal xFDuplicate638_U0_start_out : STD_LOGIC;
    signal xFDuplicate638_U0_start_write : STD_LOGIC;
    signal xFDuplicate638_U0_src_V_V_read : STD_LOGIC;
    signal xFDuplicate638_U0_dst_V_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal xFDuplicate638_U0_dst_V_V_write : STD_LOGIC;
    signal xFDuplicate638_U0_dst1_V_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal xFDuplicate638_U0_dst1_V_V_write : STD_LOGIC;
    signal xFDuplicate638_U0_p_src_rows_read_read : STD_LOGIC;
    signal xFDuplicate638_U0_p_src_cols_read_read : STD_LOGIC;
    signal duplicateMat_Loop_2_2_U0_ap_start : STD_LOGIC;
    signal duplicateMat_Loop_2_2_U0_ap_done : STD_LOGIC;
    signal duplicateMat_Loop_2_2_U0_ap_continue : STD_LOGIC;
    signal duplicateMat_Loop_2_2_U0_ap_idle : STD_LOGIC;
    signal duplicateMat_Loop_2_2_U0_ap_ready : STD_LOGIC;
    signal duplicateMat_Loop_2_2_U0_dst_V_V_read : STD_LOGIC;
    signal duplicateMat_Loop_2_2_U0_p_dst1_data_V_address0 : STD_LOGIC_VECTOR (15 downto 0);
    signal duplicateMat_Loop_2_2_U0_p_dst1_data_V_ce0 : STD_LOGIC;
    signal duplicateMat_Loop_2_2_U0_p_dst1_data_V_we0 : STD_LOGIC;
    signal duplicateMat_Loop_2_2_U0_p_dst1_data_V_d0 : STD_LOGIC_VECTOR (7 downto 0);
    signal duplicateMat_Loop_2_2_U0_dst1_V_V_read : STD_LOGIC;
    signal duplicateMat_Loop_2_2_U0_p_dst2_data_V_din : STD_LOGIC_VECTOR (7 downto 0);
    signal duplicateMat_Loop_2_2_U0_p_dst2_data_V_write : STD_LOGIC;
    signal ap_sync_continue : STD_LOGIC;
    signal src_V_V_full_n : STD_LOGIC;
    signal src_V_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal src_V_V_empty_n : STD_LOGIC;
    signal p_src_rows_read_c_full_n : STD_LOGIC;
    signal p_src_rows_read_c_dout : STD_LOGIC_VECTOR (8 downto 0);
    signal p_src_rows_read_c_empty_n : STD_LOGIC;
    signal p_src_cols_read_c_full_n : STD_LOGIC;
    signal p_src_cols_read_c_dout : STD_LOGIC_VECTOR (9 downto 0);
    signal p_src_cols_read_c_empty_n : STD_LOGIC;
    signal dst_V_V_full_n : STD_LOGIC;
    signal dst_V_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal dst_V_V_empty_n : STD_LOGIC;
    signal dst1_V_V_full_n : STD_LOGIC;
    signal dst1_V_V_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal dst1_V_V_empty_n : STD_LOGIC;
    signal ap_sync_done : STD_LOGIC;
    signal ap_sync_ready : STD_LOGIC;
    signal start_for_xFDuplicate638_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_xFDuplicate638_U0_full_n : STD_LOGIC;
    signal start_for_xFDuplicate638_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_xFDuplicate638_U0_empty_n : STD_LOGIC;
    signal start_for_duplicateMat_Loop_2_2_U0_din : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_duplicateMat_Loop_2_2_U0_full_n : STD_LOGIC;
    signal start_for_duplicateMat_Loop_2_2_U0_dout : STD_LOGIC_VECTOR (0 downto 0);
    signal start_for_duplicateMat_Loop_2_2_U0_empty_n : STD_LOGIC;
    signal duplicateMat_Loop_2_2_U0_start_full_n : STD_LOGIC;
    signal duplicateMat_Loop_2_2_U0_start_write : STD_LOGIC;

    component duplicateMat_Loop_Re_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        p_src_data_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        p_src_data_V_empty_n : IN STD_LOGIC;
        p_src_data_V_read : OUT STD_LOGIC;
        src_V_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        src_V_V_full_n : IN STD_LOGIC;
        src_V_V_write : OUT STD_LOGIC;
        p_src_rows_read_out_din : OUT STD_LOGIC_VECTOR (8 downto 0);
        p_src_rows_read_out_full_n : IN STD_LOGIC;
        p_src_rows_read_out_write : OUT STD_LOGIC;
        p_src_cols_read_out_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        p_src_cols_read_out_full_n : IN STD_LOGIC;
        p_src_cols_read_out_write : OUT STD_LOGIC;
        p_dst2_cols_read_out_din : OUT STD_LOGIC_VECTOR (9 downto 0);
        p_dst2_cols_read_out_full_n : IN STD_LOGIC;
        p_dst2_cols_read_out_write : OUT STD_LOGIC );
    end component;


    component xFDuplicate638 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        start_full_n : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        start_out : OUT STD_LOGIC;
        start_write : OUT STD_LOGIC;
        src_V_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        src_V_V_empty_n : IN STD_LOGIC;
        src_V_V_read : OUT STD_LOGIC;
        dst_V_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        dst_V_V_full_n : IN STD_LOGIC;
        dst_V_V_write : OUT STD_LOGIC;
        dst1_V_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        dst1_V_V_full_n : IN STD_LOGIC;
        dst1_V_V_write : OUT STD_LOGIC;
        p_src_rows_read_dout : IN STD_LOGIC_VECTOR (8 downto 0);
        p_src_rows_read_empty_n : IN STD_LOGIC;
        p_src_rows_read_read : OUT STD_LOGIC;
        p_src_cols_read_dout : IN STD_LOGIC_VECTOR (9 downto 0);
        p_src_cols_read_empty_n : IN STD_LOGIC;
        p_src_cols_read_read : OUT STD_LOGIC );
    end component;


    component duplicateMat_Loop_2_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_continue : IN STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        dst_V_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        dst_V_V_empty_n : IN STD_LOGIC;
        dst_V_V_read : OUT STD_LOGIC;
        p_dst1_data_V_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
        p_dst1_data_V_ce0 : OUT STD_LOGIC;
        p_dst1_data_V_we0 : OUT STD_LOGIC;
        p_dst1_data_V_d0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        dst1_V_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        dst1_V_V_empty_n : IN STD_LOGIC;
        dst1_V_V_read : OUT STD_LOGIC;
        p_dst2_data_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
        p_dst2_data_V_full_n : IN STD_LOGIC;
        p_dst2_data_V_write : OUT STD_LOGIC );
    end component;


    component fifo_w8_d2_A IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (7 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (7 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w9_d2_A_x IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (8 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (8 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component fifo_w10_d2_A_x1 IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (9 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (9 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_xFDuplizec IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;


    component start_for_duplicaAem IS
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        if_read_ce : IN STD_LOGIC;
        if_write_ce : IN STD_LOGIC;
        if_din : IN STD_LOGIC_VECTOR (0 downto 0);
        if_full_n : OUT STD_LOGIC;
        if_write : IN STD_LOGIC;
        if_dout : OUT STD_LOGIC_VECTOR (0 downto 0);
        if_empty_n : OUT STD_LOGIC;
        if_read : IN STD_LOGIC );
    end component;



begin
    duplicateMat_Loop_Re_2_U0 : component duplicateMat_Loop_Re_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => duplicateMat_Loop_Re_2_U0_ap_start,
        start_full_n => start_for_xFDuplicate638_U0_full_n,
        ap_done => duplicateMat_Loop_Re_2_U0_ap_done,
        ap_continue => duplicateMat_Loop_Re_2_U0_ap_continue,
        ap_idle => duplicateMat_Loop_Re_2_U0_ap_idle,
        ap_ready => duplicateMat_Loop_Re_2_U0_ap_ready,
        start_out => duplicateMat_Loop_Re_2_U0_start_out,
        start_write => duplicateMat_Loop_Re_2_U0_start_write,
        p_src_data_V_dout => p_src_data_V_dout,
        p_src_data_V_empty_n => p_src_data_V_empty_n,
        p_src_data_V_read => duplicateMat_Loop_Re_2_U0_p_src_data_V_read,
        src_V_V_din => duplicateMat_Loop_Re_2_U0_src_V_V_din,
        src_V_V_full_n => src_V_V_full_n,
        src_V_V_write => duplicateMat_Loop_Re_2_U0_src_V_V_write,
        p_src_rows_read_out_din => duplicateMat_Loop_Re_2_U0_p_src_rows_read_out_din,
        p_src_rows_read_out_full_n => p_src_rows_read_c_full_n,
        p_src_rows_read_out_write => duplicateMat_Loop_Re_2_U0_p_src_rows_read_out_write,
        p_src_cols_read_out_din => duplicateMat_Loop_Re_2_U0_p_src_cols_read_out_din,
        p_src_cols_read_out_full_n => p_src_cols_read_c_full_n,
        p_src_cols_read_out_write => duplicateMat_Loop_Re_2_U0_p_src_cols_read_out_write,
        p_dst2_cols_read_out_din => duplicateMat_Loop_Re_2_U0_p_dst2_cols_read_out_din,
        p_dst2_cols_read_out_full_n => ap_const_logic_1,
        p_dst2_cols_read_out_write => duplicateMat_Loop_Re_2_U0_p_dst2_cols_read_out_write);

    xFDuplicate638_U0 : component xFDuplicate638
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => xFDuplicate638_U0_ap_start,
        start_full_n => start_for_duplicateMat_Loop_2_2_U0_full_n,
        ap_done => xFDuplicate638_U0_ap_done,
        ap_continue => xFDuplicate638_U0_ap_continue,
        ap_idle => xFDuplicate638_U0_ap_idle,
        ap_ready => xFDuplicate638_U0_ap_ready,
        start_out => xFDuplicate638_U0_start_out,
        start_write => xFDuplicate638_U0_start_write,
        src_V_V_dout => src_V_V_dout,
        src_V_V_empty_n => src_V_V_empty_n,
        src_V_V_read => xFDuplicate638_U0_src_V_V_read,
        dst_V_V_din => xFDuplicate638_U0_dst_V_V_din,
        dst_V_V_full_n => dst_V_V_full_n,
        dst_V_V_write => xFDuplicate638_U0_dst_V_V_write,
        dst1_V_V_din => xFDuplicate638_U0_dst1_V_V_din,
        dst1_V_V_full_n => dst1_V_V_full_n,
        dst1_V_V_write => xFDuplicate638_U0_dst1_V_V_write,
        p_src_rows_read_dout => p_src_rows_read_c_dout,
        p_src_rows_read_empty_n => p_src_rows_read_c_empty_n,
        p_src_rows_read_read => xFDuplicate638_U0_p_src_rows_read_read,
        p_src_cols_read_dout => p_src_cols_read_c_dout,
        p_src_cols_read_empty_n => p_src_cols_read_c_empty_n,
        p_src_cols_read_read => xFDuplicate638_U0_p_src_cols_read_read);

    duplicateMat_Loop_2_2_U0 : component duplicateMat_Loop_2_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => duplicateMat_Loop_2_2_U0_ap_start,
        ap_done => duplicateMat_Loop_2_2_U0_ap_done,
        ap_continue => duplicateMat_Loop_2_2_U0_ap_continue,
        ap_idle => duplicateMat_Loop_2_2_U0_ap_idle,
        ap_ready => duplicateMat_Loop_2_2_U0_ap_ready,
        dst_V_V_dout => dst_V_V_dout,
        dst_V_V_empty_n => dst_V_V_empty_n,
        dst_V_V_read => duplicateMat_Loop_2_2_U0_dst_V_V_read,
        p_dst1_data_V_address0 => duplicateMat_Loop_2_2_U0_p_dst1_data_V_address0,
        p_dst1_data_V_ce0 => duplicateMat_Loop_2_2_U0_p_dst1_data_V_ce0,
        p_dst1_data_V_we0 => duplicateMat_Loop_2_2_U0_p_dst1_data_V_we0,
        p_dst1_data_V_d0 => duplicateMat_Loop_2_2_U0_p_dst1_data_V_d0,
        dst1_V_V_dout => dst1_V_V_dout,
        dst1_V_V_empty_n => dst1_V_V_empty_n,
        dst1_V_V_read => duplicateMat_Loop_2_2_U0_dst1_V_V_read,
        p_dst2_data_V_din => duplicateMat_Loop_2_2_U0_p_dst2_data_V_din,
        p_dst2_data_V_full_n => p_dst2_data_V_full_n,
        p_dst2_data_V_write => duplicateMat_Loop_2_2_U0_p_dst2_data_V_write);

    src_V_V_U : component fifo_w8_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => duplicateMat_Loop_Re_2_U0_src_V_V_din,
        if_full_n => src_V_V_full_n,
        if_write => duplicateMat_Loop_Re_2_U0_src_V_V_write,
        if_dout => src_V_V_dout,
        if_empty_n => src_V_V_empty_n,
        if_read => xFDuplicate638_U0_src_V_V_read);

    p_src_rows_read_c_U : component fifo_w9_d2_A_x
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => duplicateMat_Loop_Re_2_U0_p_src_rows_read_out_din,
        if_full_n => p_src_rows_read_c_full_n,
        if_write => duplicateMat_Loop_Re_2_U0_p_src_rows_read_out_write,
        if_dout => p_src_rows_read_c_dout,
        if_empty_n => p_src_rows_read_c_empty_n,
        if_read => xFDuplicate638_U0_p_src_rows_read_read);

    p_src_cols_read_c_U : component fifo_w10_d2_A_x1
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => duplicateMat_Loop_Re_2_U0_p_src_cols_read_out_din,
        if_full_n => p_src_cols_read_c_full_n,
        if_write => duplicateMat_Loop_Re_2_U0_p_src_cols_read_out_write,
        if_dout => p_src_cols_read_c_dout,
        if_empty_n => p_src_cols_read_c_empty_n,
        if_read => xFDuplicate638_U0_p_src_cols_read_read);

    dst_V_V_U : component fifo_w8_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => xFDuplicate638_U0_dst_V_V_din,
        if_full_n => dst_V_V_full_n,
        if_write => xFDuplicate638_U0_dst_V_V_write,
        if_dout => dst_V_V_dout,
        if_empty_n => dst_V_V_empty_n,
        if_read => duplicateMat_Loop_2_2_U0_dst_V_V_read);

    dst1_V_V_U : component fifo_w8_d2_A
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => xFDuplicate638_U0_dst1_V_V_din,
        if_full_n => dst1_V_V_full_n,
        if_write => xFDuplicate638_U0_dst1_V_V_write,
        if_dout => dst1_V_V_dout,
        if_empty_n => dst1_V_V_empty_n,
        if_read => duplicateMat_Loop_2_2_U0_dst1_V_V_read);

    start_for_xFDuplizec_U : component start_for_xFDuplizec
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_xFDuplicate638_U0_din,
        if_full_n => start_for_xFDuplicate638_U0_full_n,
        if_write => duplicateMat_Loop_Re_2_U0_start_write,
        if_dout => start_for_xFDuplicate638_U0_dout,
        if_empty_n => start_for_xFDuplicate638_U0_empty_n,
        if_read => xFDuplicate638_U0_ap_ready);

    start_for_duplicaAem_U : component start_for_duplicaAem
    port map (
        clk => ap_clk,
        reset => ap_rst,
        if_read_ce => ap_const_logic_1,
        if_write_ce => ap_const_logic_1,
        if_din => start_for_duplicateMat_Loop_2_2_U0_din,
        if_full_n => start_for_duplicateMat_Loop_2_2_U0_full_n,
        if_write => xFDuplicate638_U0_start_write,
        if_dout => start_for_duplicateMat_Loop_2_2_U0_dout,
        if_empty_n => start_for_duplicateMat_Loop_2_2_U0_empty_n,
        if_read => duplicateMat_Loop_2_2_U0_ap_ready);




    ap_done <= duplicateMat_Loop_2_2_U0_ap_done;
    ap_idle <= (xFDuplicate638_U0_ap_idle and duplicateMat_Loop_Re_2_U0_ap_idle and duplicateMat_Loop_2_2_U0_ap_idle);
    ap_ready <= duplicateMat_Loop_Re_2_U0_ap_ready;
    ap_sync_continue <= ap_continue;
    ap_sync_done <= duplicateMat_Loop_2_2_U0_ap_done;
    ap_sync_ready <= duplicateMat_Loop_Re_2_U0_ap_ready;
    duplicateMat_Loop_2_2_U0_ap_continue <= ap_continue;
    duplicateMat_Loop_2_2_U0_ap_start <= start_for_duplicateMat_Loop_2_2_U0_empty_n;
    duplicateMat_Loop_2_2_U0_start_full_n <= ap_const_logic_1;
    duplicateMat_Loop_2_2_U0_start_write <= ap_const_logic_0;
    duplicateMat_Loop_Re_2_U0_ap_continue <= ap_const_logic_1;
    duplicateMat_Loop_Re_2_U0_ap_start <= ap_start;
    p_dst1_data_V_address0 <= duplicateMat_Loop_2_2_U0_p_dst1_data_V_address0;
    p_dst1_data_V_address1 <= ap_const_lv16_0;
    p_dst1_data_V_ce0 <= duplicateMat_Loop_2_2_U0_p_dst1_data_V_ce0;
    p_dst1_data_V_ce1 <= ap_const_logic_0;
    p_dst1_data_V_d0 <= duplicateMat_Loop_2_2_U0_p_dst1_data_V_d0;
    p_dst1_data_V_d1 <= ap_const_lv8_0;
    p_dst1_data_V_we0 <= duplicateMat_Loop_2_2_U0_p_dst1_data_V_we0;
    p_dst1_data_V_we1 <= ap_const_logic_0;
    p_dst2_data_V_din <= duplicateMat_Loop_2_2_U0_p_dst2_data_V_din;
    p_dst2_data_V_write <= duplicateMat_Loop_2_2_U0_p_dst2_data_V_write;
    p_src_data_V_read <= duplicateMat_Loop_Re_2_U0_p_src_data_V_read;
    start_for_duplicateMat_Loop_2_2_U0_din <= (0=>ap_const_logic_1, others=>'-');
    start_for_xFDuplicate638_U0_din <= (0=>ap_const_logic_1, others=>'-');
    xFDuplicate638_U0_ap_continue <= ap_const_logic_1;
    xFDuplicate638_U0_ap_start <= start_for_xFDuplicate638_U0_empty_n;
end behav;
