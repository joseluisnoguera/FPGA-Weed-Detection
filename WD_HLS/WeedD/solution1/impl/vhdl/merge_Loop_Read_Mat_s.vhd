-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity merge_Loop_Read_Mat_s is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    start_full_n : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    start_out : OUT STD_LOGIC;
    start_write : OUT STD_LOGIC;
    p_src1_cols_load7_loc_dout : IN STD_LOGIC_VECTOR (9 downto 0);
    p_src1_cols_load7_loc_empty_n : IN STD_LOGIC;
    p_src1_cols_load7_loc_read : OUT STD_LOGIC;
    p_src1_data_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    p_src1_data_V_empty_n : IN STD_LOGIC;
    p_src1_data_V_read : OUT STD_LOGIC;
    p_in1_V_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_in1_V_V_full_n : IN STD_LOGIC;
    p_in1_V_V_write : OUT STD_LOGIC;
    p_src2_data_V_dout : IN STD_LOGIC_VECTOR (7 downto 0);
    p_src2_data_V_empty_n : IN STD_LOGIC;
    p_src2_data_V_read : OUT STD_LOGIC;
    p_in2_V_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_in2_V_V_full_n : IN STD_LOGIC;
    p_in2_V_V_write : OUT STD_LOGIC;
    p_in3_V_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_in3_V_V_full_n : IN STD_LOGIC;
    p_in3_V_V_write : OUT STD_LOGIC;
    p_src1_cols_load7_loc_out_din : OUT STD_LOGIC_VECTOR (9 downto 0);
    p_src1_cols_load7_loc_out_full_n : IN STD_LOGIC;
    p_src1_cols_load7_loc_out_write : OUT STD_LOGIC );
end;


architecture behav of merge_Loop_Read_Mat_s is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (6 downto 0) := "0000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (6 downto 0) := "0000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (6 downto 0) := "0001000";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (6 downto 0) := "0010000";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (6 downto 0) := "0100000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (6 downto 0) := "1000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv18_0 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000000";
    constant ap_const_lv18_1 : STD_LOGIC_VECTOR (17 downto 0) := "000000000000000001";
    constant ap_const_lv18_B4 : STD_LOGIC_VECTOR (17 downto 0) := "000000000010110100";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";

    signal real_start : STD_LOGIC;
    signal start_once_reg : STD_LOGIC := '0';
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (6 downto 0) := "0000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal internal_ap_ready : STD_LOGIC;
    signal p_src1_cols_load7_loc_blk_n : STD_LOGIC;
    signal grp_read_r_fu_112_Mat_0_180_320_1_data_V_addr_blk_n : STD_LOGIC;
    signal p_src1_data_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal icmp_ln317_reg_157 : STD_LOGIC_VECTOR (0 downto 0);
    signal p_in1_V_V_blk_n : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal tmp_V_4_read_r_fu_118_Mat_0_180_320_1_data_V_addr_blk_n : STD_LOGIC;
    signal p_src2_data_V_blk_n : STD_LOGIC;
    signal p_in2_V_V_blk_n : STD_LOGIC;
    signal p_in3_V_V_blk_n : STD_LOGIC;
    signal p_src1_cols_load7_loc_out_blk_n : STD_LOGIC;
    signal indvar_flatten_reg_101 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal grp_fu_141_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal bound_reg_152 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal icmp_ln317_fu_130_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state5_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal add_ln317_fu_135_p2 : STD_LOGIC_VECTOR (17 downto 0);
    signal add_ln317_reg_161 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_read_r_fu_112_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_V_reg_166 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_state6_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal tmp_V_4_read_r_fu_118_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_V_4_reg_171 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state5 : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal grp_read_r_fu_112_ap_start : STD_LOGIC;
    signal grp_read_r_fu_112_ap_done : STD_LOGIC;
    signal grp_read_r_fu_112_ap_idle : STD_LOGIC;
    signal grp_read_r_fu_112_ap_ready : STD_LOGIC;
    signal grp_read_r_fu_112_Mat_0_180_320_1_data_V_addr_dout : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_read_r_fu_112_Mat_0_180_320_1_data_V_addr_empty_n : STD_LOGIC;
    signal grp_read_r_fu_112_Mat_0_180_320_1_data_V_addr_read : STD_LOGIC;
    signal grp_read_r_fu_112_ap_ce : STD_LOGIC;
    signal ap_block_state6_pp0_stage1_iter0_ignore_call4 : BOOLEAN;
    signal ap_block_pp0_stage1_11001_ignoreCallOp28 : BOOLEAN;
    signal ap_block_state5_pp0_stage0_iter0_ignore_call8 : BOOLEAN;
    signal ap_block_state7_pp0_stage0_iter1_ignore_call8 : BOOLEAN;
    signal ap_block_pp0_stage0_11001_ignoreCallOp36 : BOOLEAN;
    signal tmp_V_4_read_r_fu_118_ap_start : STD_LOGIC;
    signal tmp_V_4_read_r_fu_118_ap_done : STD_LOGIC;
    signal tmp_V_4_read_r_fu_118_ap_idle : STD_LOGIC;
    signal tmp_V_4_read_r_fu_118_ap_ready : STD_LOGIC;
    signal tmp_V_4_read_r_fu_118_Mat_0_180_320_1_data_V_addr_read : STD_LOGIC;
    signal tmp_V_4_read_r_fu_118_ap_ce : STD_LOGIC;
    signal ap_block_state6_pp0_stage1_iter0_ignore_call6 : BOOLEAN;
    signal ap_block_pp0_stage1_11001_ignoreCallOp29 : BOOLEAN;
    signal ap_phi_mux_indvar_flatten_phi_fu_105_p4 : STD_LOGIC_VECTOR (17 downto 0);
    signal grp_read_r_fu_112_ap_start_reg : STD_LOGIC := '0';
    signal tmp_V_4_read_r_fu_118_ap_start_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal grp_fu_141_p0 : STD_LOGIC_VECTOR (9 downto 0);
    signal grp_fu_141_p1 : STD_LOGIC_VECTOR (8 downto 0);
    signal grp_fu_141_ce : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal ap_CS_fsm_state8 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state8 : signal is "none";
    signal ap_NS_fsm : STD_LOGIC_VECTOR (6 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal grp_fu_141_p00 : STD_LOGIC_VECTOR (17 downto 0);
    signal ap_condition_90 : BOOLEAN;
    signal ap_condition_107 : BOOLEAN;

    component read_r IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        Mat_0_180_320_1_data_V_addr_dout : IN STD_LOGIC_VECTOR (7 downto 0);
        Mat_0_180_320_1_data_V_addr_empty_n : IN STD_LOGIC;
        Mat_0_180_320_1_data_V_addr_read : OUT STD_LOGIC;
        ap_return : OUT STD_LOGIC_VECTOR (7 downto 0);
        Mat_0_180_320_1_data_V_addr_blk_n : OUT STD_LOGIC;
        ap_ce : IN STD_LOGIC );
    end component;


    component ip_accel_app_mul_9j0 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (9 downto 0);
        din1 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (17 downto 0) );
    end component;



begin
    grp_read_r_fu_112 : component read_r
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_read_r_fu_112_ap_start,
        ap_done => grp_read_r_fu_112_ap_done,
        ap_idle => grp_read_r_fu_112_ap_idle,
        ap_ready => grp_read_r_fu_112_ap_ready,
        Mat_0_180_320_1_data_V_addr_dout => grp_read_r_fu_112_Mat_0_180_320_1_data_V_addr_dout,
        Mat_0_180_320_1_data_V_addr_empty_n => grp_read_r_fu_112_Mat_0_180_320_1_data_V_addr_empty_n,
        Mat_0_180_320_1_data_V_addr_read => grp_read_r_fu_112_Mat_0_180_320_1_data_V_addr_read,
        ap_return => grp_read_r_fu_112_ap_return,
        Mat_0_180_320_1_data_V_addr_blk_n => grp_read_r_fu_112_Mat_0_180_320_1_data_V_addr_blk_n,
        ap_ce => grp_read_r_fu_112_ap_ce);

    tmp_V_4_read_r_fu_118 : component read_r
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => tmp_V_4_read_r_fu_118_ap_start,
        ap_done => tmp_V_4_read_r_fu_118_ap_done,
        ap_idle => tmp_V_4_read_r_fu_118_ap_idle,
        ap_ready => tmp_V_4_read_r_fu_118_ap_ready,
        Mat_0_180_320_1_data_V_addr_dout => p_src2_data_V_dout,
        Mat_0_180_320_1_data_V_addr_empty_n => p_src2_data_V_empty_n,
        Mat_0_180_320_1_data_V_addr_read => tmp_V_4_read_r_fu_118_Mat_0_180_320_1_data_V_addr_read,
        ap_return => tmp_V_4_read_r_fu_118_ap_return,
        Mat_0_180_320_1_data_V_addr_blk_n => tmp_V_4_read_r_fu_118_Mat_0_180_320_1_data_V_addr_blk_n,
        ap_ce => tmp_V_4_read_r_fu_118_ap_ce);

    ip_accel_app_mul_9j0_U528 : component ip_accel_app_mul_9j0
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 10,
        din1_WIDTH => 9,
        dout_WIDTH => 18)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_141_p0,
        din1 => grp_fu_141_p1,
        ce => grp_fu_141_ce,
        dout => grp_fu_141_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state5) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) or ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone)))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    grp_read_r_fu_112_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_read_r_fu_112_ap_start_reg <= ap_const_logic_0;
            else
                if ((((icmp_ln317_fu_130_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((icmp_ln317_reg_157 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001)))) then 
                    grp_read_r_fu_112_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_read_r_fu_112_ap_ready = ap_const_logic_1)) then 
                    grp_read_r_fu_112_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    start_once_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                start_once_reg <= ap_const_logic_0;
            else
                if (((internal_ap_ready = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
                    start_once_reg <= ap_const_logic_1;
                elsif ((internal_ap_ready = ap_const_logic_1)) then 
                    start_once_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    tmp_V_4_read_r_fu_118_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                tmp_V_4_read_r_fu_118_ap_start_reg <= ap_const_logic_0;
            else
                if (((icmp_ln317_fu_130_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                    tmp_V_4_read_r_fu_118_ap_start_reg <= ap_const_logic_1;
                elsif ((tmp_V_4_read_r_fu_118_ap_ready = ap_const_logic_1)) then 
                    tmp_V_4_read_r_fu_118_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    indvar_flatten_reg_101_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln317_reg_157 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                indvar_flatten_reg_101 <= add_ln317_reg_161;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
                indvar_flatten_reg_101 <= ap_const_lv18_0;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                add_ln317_reg_161 <= add_ln317_fu_135_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state4)) then
                bound_reg_152 <= grp_fu_141_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln317_reg_157 <= icmp_ln317_fu_130_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln317_reg_157 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                tmp_V_4_reg_171 <= tmp_V_4_read_r_fu_118_ap_return;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln317_reg_157 = ap_const_lv1_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001))) then
                tmp_V_reg_166 <= grp_read_r_fu_112_ap_return;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (real_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, p_src1_cols_load7_loc_empty_n, p_src1_cols_load7_loc_out_full_n, ap_enable_reg_pp0_iter0, icmp_ln317_fu_130_p2, ap_block_pp0_stage0_subdone, ap_block_pp0_stage1_subdone)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((p_src1_cols_load7_loc_out_full_n = ap_const_logic_0) or (p_src1_cols_load7_loc_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                ap_NS_fsm <= ap_ST_fsm_state3;
            when ap_ST_fsm_state3 => 
                ap_NS_fsm <= ap_ST_fsm_state4;
            when ap_ST_fsm_state4 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (icmp_ln317_fu_130_p2 = ap_const_lv1_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                elsif (((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (icmp_ln317_fu_130_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state8;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state1;
            when others =>  
                ap_NS_fsm <= "XXXXXXX";
        end case;
    end process;
    add_ln317_fu_135_p2 <= std_logic_vector(unsigned(ap_phi_mux_indvar_flatten_phi_fu_105_p4) + unsigned(ap_const_lv18_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(5);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_CS_fsm_state8 <= ap_CS_fsm(6);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_01001_assign_proc : process(p_in1_V_V_full_n, p_in2_V_V_full_n, p_in3_V_V_full_n, grp_read_r_fu_112_Mat_0_180_320_1_data_V_addr_blk_n, icmp_ln317_reg_157, ap_enable_reg_pp0_iter1)
    begin
                ap_block_pp0_stage0_01001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((icmp_ln317_reg_157 = ap_const_lv1_0) and (p_in3_V_V_full_n = ap_const_logic_0)) or ((icmp_ln317_reg_157 = ap_const_lv1_0) and (grp_read_r_fu_112_Mat_0_180_320_1_data_V_addr_blk_n = ap_const_logic_0)) or ((icmp_ln317_reg_157 = ap_const_lv1_0) and (p_in2_V_V_full_n = ap_const_logic_0)) or ((icmp_ln317_reg_157 = ap_const_lv1_0) and (p_in1_V_V_full_n = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage0_11001_assign_proc : process(p_in1_V_V_full_n, p_in2_V_V_full_n, p_in3_V_V_full_n, grp_read_r_fu_112_Mat_0_180_320_1_data_V_addr_blk_n, icmp_ln317_reg_157, ap_enable_reg_pp0_iter1)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((icmp_ln317_reg_157 = ap_const_lv1_0) and (p_in3_V_V_full_n = ap_const_logic_0)) or ((icmp_ln317_reg_157 = ap_const_lv1_0) and (grp_read_r_fu_112_Mat_0_180_320_1_data_V_addr_blk_n = ap_const_logic_0)) or ((icmp_ln317_reg_157 = ap_const_lv1_0) and (p_in2_V_V_full_n = ap_const_logic_0)) or ((icmp_ln317_reg_157 = ap_const_lv1_0) and (p_in1_V_V_full_n = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage0_11001_ignoreCallOp36_assign_proc : process(p_in1_V_V_full_n, p_in2_V_V_full_n, p_in3_V_V_full_n, icmp_ln317_reg_157, ap_enable_reg_pp0_iter1)
    begin
                ap_block_pp0_stage0_11001_ignoreCallOp36 <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((icmp_ln317_reg_157 = ap_const_lv1_0) and (p_in3_V_V_full_n = ap_const_logic_0)) or ((icmp_ln317_reg_157 = ap_const_lv1_0) and (p_in2_V_V_full_n = ap_const_logic_0)) or ((icmp_ln317_reg_157 = ap_const_lv1_0) and (p_in1_V_V_full_n = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(p_in1_V_V_full_n, p_in2_V_V_full_n, p_in3_V_V_full_n, grp_read_r_fu_112_Mat_0_180_320_1_data_V_addr_blk_n, icmp_ln317_reg_157, ap_enable_reg_pp0_iter1)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (((icmp_ln317_reg_157 = ap_const_lv1_0) and (p_in3_V_V_full_n = ap_const_logic_0)) or ((icmp_ln317_reg_157 = ap_const_lv1_0) and (grp_read_r_fu_112_Mat_0_180_320_1_data_V_addr_blk_n = ap_const_logic_0)) or ((icmp_ln317_reg_157 = ap_const_lv1_0) and (p_in2_V_V_full_n = ap_const_logic_0)) or ((icmp_ln317_reg_157 = ap_const_lv1_0) and (p_in1_V_V_full_n = ap_const_logic_0))));
    end process;

        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage1_11001_assign_proc : process(grp_read_r_fu_112_Mat_0_180_320_1_data_V_addr_blk_n, ap_enable_reg_pp0_iter0, icmp_ln317_reg_157, tmp_V_4_read_r_fu_118_Mat_0_180_320_1_data_V_addr_blk_n)
    begin
                ap_block_pp0_stage1_11001 <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (((icmp_ln317_reg_157 = ap_const_lv1_0) and (tmp_V_4_read_r_fu_118_Mat_0_180_320_1_data_V_addr_blk_n = ap_const_logic_0)) or ((icmp_ln317_reg_157 = ap_const_lv1_0) and (grp_read_r_fu_112_Mat_0_180_320_1_data_V_addr_blk_n = ap_const_logic_0))));
    end process;


    ap_block_pp0_stage1_11001_ignoreCallOp28_assign_proc : process(ap_enable_reg_pp0_iter0, icmp_ln317_reg_157, tmp_V_4_read_r_fu_118_Mat_0_180_320_1_data_V_addr_blk_n)
    begin
                ap_block_pp0_stage1_11001_ignoreCallOp28 <= ((icmp_ln317_reg_157 = ap_const_lv1_0) and (tmp_V_4_read_r_fu_118_Mat_0_180_320_1_data_V_addr_blk_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage1_11001_ignoreCallOp29_assign_proc : process(grp_read_r_fu_112_Mat_0_180_320_1_data_V_addr_blk_n, ap_enable_reg_pp0_iter0, icmp_ln317_reg_157)
    begin
                ap_block_pp0_stage1_11001_ignoreCallOp29 <= ((icmp_ln317_reg_157 = ap_const_lv1_0) and (grp_read_r_fu_112_Mat_0_180_320_1_data_V_addr_blk_n = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1));
    end process;


    ap_block_pp0_stage1_subdone_assign_proc : process(grp_read_r_fu_112_Mat_0_180_320_1_data_V_addr_blk_n, ap_enable_reg_pp0_iter0, icmp_ln317_reg_157, tmp_V_4_read_r_fu_118_Mat_0_180_320_1_data_V_addr_blk_n)
    begin
                ap_block_pp0_stage1_subdone <= ((ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (((icmp_ln317_reg_157 = ap_const_lv1_0) and (tmp_V_4_read_r_fu_118_Mat_0_180_320_1_data_V_addr_blk_n = ap_const_logic_0)) or ((icmp_ln317_reg_157 = ap_const_lv1_0) and (grp_read_r_fu_112_Mat_0_180_320_1_data_V_addr_blk_n = ap_const_logic_0))));
    end process;


    ap_block_state1_assign_proc : process(real_start, ap_done_reg, p_src1_cols_load7_loc_empty_n, p_src1_cols_load7_loc_out_full_n)
    begin
                ap_block_state1 <= ((p_src1_cols_load7_loc_out_full_n = ap_const_logic_0) or (p_src1_cols_load7_loc_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1));
    end process;

        ap_block_state5_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage0_iter0_ignore_call8 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state6_pp0_stage1_iter0_assign_proc : process(grp_read_r_fu_112_Mat_0_180_320_1_data_V_addr_blk_n, icmp_ln317_reg_157, tmp_V_4_read_r_fu_118_Mat_0_180_320_1_data_V_addr_blk_n)
    begin
                ap_block_state6_pp0_stage1_iter0 <= (((icmp_ln317_reg_157 = ap_const_lv1_0) and (tmp_V_4_read_r_fu_118_Mat_0_180_320_1_data_V_addr_blk_n = ap_const_logic_0)) or ((icmp_ln317_reg_157 = ap_const_lv1_0) and (grp_read_r_fu_112_Mat_0_180_320_1_data_V_addr_blk_n = ap_const_logic_0)));
    end process;


    ap_block_state6_pp0_stage1_iter0_ignore_call4_assign_proc : process(icmp_ln317_reg_157, tmp_V_4_read_r_fu_118_Mat_0_180_320_1_data_V_addr_blk_n)
    begin
                ap_block_state6_pp0_stage1_iter0_ignore_call4 <= ((icmp_ln317_reg_157 = ap_const_lv1_0) and (tmp_V_4_read_r_fu_118_Mat_0_180_320_1_data_V_addr_blk_n = ap_const_logic_0));
    end process;


    ap_block_state6_pp0_stage1_iter0_ignore_call6_assign_proc : process(grp_read_r_fu_112_Mat_0_180_320_1_data_V_addr_blk_n, icmp_ln317_reg_157)
    begin
                ap_block_state6_pp0_stage1_iter0_ignore_call6 <= ((icmp_ln317_reg_157 = ap_const_lv1_0) and (grp_read_r_fu_112_Mat_0_180_320_1_data_V_addr_blk_n = ap_const_logic_0));
    end process;


    ap_block_state7_pp0_stage0_iter1_assign_proc : process(p_in1_V_V_full_n, p_in2_V_V_full_n, p_in3_V_V_full_n, grp_read_r_fu_112_Mat_0_180_320_1_data_V_addr_blk_n, icmp_ln317_reg_157)
    begin
                ap_block_state7_pp0_stage0_iter1 <= (((icmp_ln317_reg_157 = ap_const_lv1_0) and (p_in3_V_V_full_n = ap_const_logic_0)) or ((icmp_ln317_reg_157 = ap_const_lv1_0) and (grp_read_r_fu_112_Mat_0_180_320_1_data_V_addr_blk_n = ap_const_logic_0)) or ((icmp_ln317_reg_157 = ap_const_lv1_0) and (p_in2_V_V_full_n = ap_const_logic_0)) or ((icmp_ln317_reg_157 = ap_const_lv1_0) and (p_in1_V_V_full_n = ap_const_logic_0)));
    end process;


    ap_block_state7_pp0_stage0_iter1_ignore_call8_assign_proc : process(p_in1_V_V_full_n, p_in2_V_V_full_n, p_in3_V_V_full_n, icmp_ln317_reg_157)
    begin
                ap_block_state7_pp0_stage0_iter1_ignore_call8 <= (((icmp_ln317_reg_157 = ap_const_lv1_0) and (p_in3_V_V_full_n = ap_const_logic_0)) or ((icmp_ln317_reg_157 = ap_const_lv1_0) and (p_in2_V_V_full_n = ap_const_logic_0)) or ((icmp_ln317_reg_157 = ap_const_lv1_0) and (p_in1_V_V_full_n = ap_const_logic_0)));
    end process;


    ap_condition_107_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
                ap_condition_107 <= ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0));
    end process;


    ap_condition_90_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1)
    begin
                ap_condition_90 <= ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1));
    end process;


    ap_condition_pp0_exit_iter0_state5_assign_proc : process(icmp_ln317_fu_130_p2)
    begin
        if ((icmp_ln317_fu_130_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state5 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state5 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_done_reg, ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_idle_assign_proc : process(real_start, ap_CS_fsm_state1)
    begin
        if (((real_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter0 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_indvar_flatten_phi_fu_105_p4_assign_proc : process(icmp_ln317_reg_157, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0, indvar_flatten_reg_101, add_ln317_reg_161)
    begin
        if (((icmp_ln317_reg_157 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            ap_phi_mux_indvar_flatten_phi_fu_105_p4 <= add_ln317_reg_161;
        else 
            ap_phi_mux_indvar_flatten_phi_fu_105_p4 <= indvar_flatten_reg_101;
        end if; 
    end process;

    ap_ready <= internal_ap_ready;

    grp_fu_141_ce_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, p_src1_cols_load7_loc_empty_n, p_src1_cols_load7_loc_out_full_n, ap_CS_fsm_state4, ap_CS_fsm_state2, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or (ap_const_logic_1 = ap_CS_fsm_state2) or (ap_const_logic_1 = ap_CS_fsm_state4) or (not(((p_src1_cols_load7_loc_out_full_n = ap_const_logic_0) or (p_src1_cols_load7_loc_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1)))) then 
            grp_fu_141_ce <= ap_const_logic_1;
        else 
            grp_fu_141_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_fu_141_p0 <= grp_fu_141_p00(10 - 1 downto 0);
    grp_fu_141_p00 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(p_src1_cols_load7_loc_dout),18));
    grp_fu_141_p1 <= ap_const_lv18_B4(9 - 1 downto 0);

    grp_read_r_fu_112_Mat_0_180_320_1_data_V_addr_dout_assign_proc : process(p_src1_data_V_dout, p_src2_data_V_dout, icmp_ln317_reg_157, ap_condition_90, ap_condition_107)
    begin
        if ((icmp_ln317_reg_157 = ap_const_lv1_0)) then
            if ((ap_const_boolean_1 = ap_condition_107)) then 
                grp_read_r_fu_112_Mat_0_180_320_1_data_V_addr_dout <= p_src2_data_V_dout;
            elsif ((ap_const_boolean_1 = ap_condition_90)) then 
                grp_read_r_fu_112_Mat_0_180_320_1_data_V_addr_dout <= p_src1_data_V_dout;
            else 
                grp_read_r_fu_112_Mat_0_180_320_1_data_V_addr_dout <= p_src2_data_V_dout;
            end if;
        else 
            grp_read_r_fu_112_Mat_0_180_320_1_data_V_addr_dout <= p_src2_data_V_dout;
        end if; 
    end process;


    grp_read_r_fu_112_Mat_0_180_320_1_data_V_addr_empty_n_assign_proc : process(p_src1_data_V_empty_n, p_src2_data_V_empty_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            grp_read_r_fu_112_Mat_0_180_320_1_data_V_addr_empty_n <= p_src2_data_V_empty_n;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_read_r_fu_112_Mat_0_180_320_1_data_V_addr_empty_n <= p_src1_data_V_empty_n;
        else 
            grp_read_r_fu_112_Mat_0_180_320_1_data_V_addr_empty_n <= p_src2_data_V_empty_n;
        end if; 
    end process;


    grp_read_r_fu_112_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage1_11001_ignoreCallOp28, ap_block_pp0_stage0_11001_ignoreCallOp36)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001_ignoreCallOp28)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001_ignoreCallOp36) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_read_r_fu_112_ap_ce <= ap_const_logic_1;
        else 
            grp_read_r_fu_112_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    grp_read_r_fu_112_ap_start <= grp_read_r_fu_112_ap_start_reg;
    icmp_ln317_fu_130_p2 <= "1" when (ap_phi_mux_indvar_flatten_phi_fu_105_p4 = bound_reg_152) else "0";

    internal_ap_ready_assign_proc : process(ap_CS_fsm_state8)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state8)) then 
            internal_ap_ready <= ap_const_logic_1;
        else 
            internal_ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    p_in1_V_V_blk_n_assign_proc : process(p_in1_V_V_full_n, icmp_ln317_reg_157, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((icmp_ln317_reg_157 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            p_in1_V_V_blk_n <= p_in1_V_V_full_n;
        else 
            p_in1_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    p_in1_V_V_din <= tmp_V_reg_166;

    p_in1_V_V_write_assign_proc : process(icmp_ln317_reg_157, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln317_reg_157 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            p_in1_V_V_write <= ap_const_logic_1;
        else 
            p_in1_V_V_write <= ap_const_logic_0;
        end if; 
    end process;


    p_in2_V_V_blk_n_assign_proc : process(p_in2_V_V_full_n, icmp_ln317_reg_157, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((icmp_ln317_reg_157 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            p_in2_V_V_blk_n <= p_in2_V_V_full_n;
        else 
            p_in2_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    p_in2_V_V_din <= tmp_V_4_reg_171;

    p_in2_V_V_write_assign_proc : process(icmp_ln317_reg_157, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln317_reg_157 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            p_in2_V_V_write <= ap_const_logic_1;
        else 
            p_in2_V_V_write <= ap_const_logic_0;
        end if; 
    end process;


    p_in3_V_V_blk_n_assign_proc : process(p_in3_V_V_full_n, icmp_ln317_reg_157, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0)
    begin
        if (((icmp_ln317_reg_157 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0))) then 
            p_in3_V_V_blk_n <= p_in3_V_V_full_n;
        else 
            p_in3_V_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    p_in3_V_V_din <= grp_read_r_fu_112_ap_return;

    p_in3_V_V_write_assign_proc : process(icmp_ln317_reg_157, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001)
    begin
        if (((icmp_ln317_reg_157 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
            p_in3_V_V_write <= ap_const_logic_1;
        else 
            p_in3_V_V_write <= ap_const_logic_0;
        end if; 
    end process;


    p_src1_cols_load7_loc_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, p_src1_cols_load7_loc_empty_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_src1_cols_load7_loc_blk_n <= p_src1_cols_load7_loc_empty_n;
        else 
            p_src1_cols_load7_loc_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_src1_cols_load7_loc_out_blk_n_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, p_src1_cols_load7_loc_out_full_n)
    begin
        if ((not(((real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_src1_cols_load7_loc_out_blk_n <= p_src1_cols_load7_loc_out_full_n;
        else 
            p_src1_cols_load7_loc_out_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    p_src1_cols_load7_loc_out_din <= p_src1_cols_load7_loc_dout;

    p_src1_cols_load7_loc_out_write_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, p_src1_cols_load7_loc_empty_n, p_src1_cols_load7_loc_out_full_n)
    begin
        if ((not(((p_src1_cols_load7_loc_out_full_n = ap_const_logic_0) or (p_src1_cols_load7_loc_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_src1_cols_load7_loc_out_write <= ap_const_logic_1;
        else 
            p_src1_cols_load7_loc_out_write <= ap_const_logic_0;
        end if; 
    end process;


    p_src1_cols_load7_loc_read_assign_proc : process(real_start, ap_done_reg, ap_CS_fsm_state1, p_src1_cols_load7_loc_empty_n, p_src1_cols_load7_loc_out_full_n)
    begin
        if ((not(((p_src1_cols_load7_loc_out_full_n = ap_const_logic_0) or (p_src1_cols_load7_loc_empty_n = ap_const_logic_0) or (real_start = ap_const_logic_0) or (ap_done_reg = ap_const_logic_1))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            p_src1_cols_load7_loc_read <= ap_const_logic_1;
        else 
            p_src1_cols_load7_loc_read <= ap_const_logic_0;
        end if; 
    end process;


    p_src1_data_V_blk_n_assign_proc : process(grp_read_r_fu_112_Mat_0_180_320_1_data_V_addr_blk_n, ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, icmp_ln317_reg_157)
    begin
        if (((icmp_ln317_reg_157 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            p_src1_data_V_blk_n <= grp_read_r_fu_112_Mat_0_180_320_1_data_V_addr_blk_n;
        else 
            p_src1_data_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_src1_data_V_read_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_enable_reg_pp0_iter0, ap_block_pp0_stage1, icmp_ln317_reg_157, grp_read_r_fu_112_Mat_0_180_320_1_data_V_addr_read)
    begin
        if (((icmp_ln317_reg_157 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            p_src1_data_V_read <= grp_read_r_fu_112_Mat_0_180_320_1_data_V_addr_read;
        else 
            p_src1_data_V_read <= ap_const_logic_0;
        end if; 
    end process;


    p_src2_data_V_blk_n_assign_proc : process(grp_read_r_fu_112_Mat_0_180_320_1_data_V_addr_blk_n, icmp_ln317_reg_157, tmp_V_4_read_r_fu_118_Mat_0_180_320_1_data_V_addr_blk_n, ap_condition_90, ap_condition_107)
    begin
        if ((icmp_ln317_reg_157 = ap_const_lv1_0)) then
            if ((ap_const_boolean_1 = ap_condition_107)) then 
                p_src2_data_V_blk_n <= grp_read_r_fu_112_Mat_0_180_320_1_data_V_addr_blk_n;
            elsif ((ap_const_boolean_1 = ap_condition_90)) then 
                p_src2_data_V_blk_n <= tmp_V_4_read_r_fu_118_Mat_0_180_320_1_data_V_addr_blk_n;
            else 
                p_src2_data_V_blk_n <= ap_const_logic_1;
            end if;
        else 
            p_src2_data_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;


    p_src2_data_V_read_assign_proc : process(icmp_ln317_reg_157, grp_read_r_fu_112_Mat_0_180_320_1_data_V_addr_read, tmp_V_4_read_r_fu_118_Mat_0_180_320_1_data_V_addr_read, ap_condition_90, ap_condition_107)
    begin
        if ((icmp_ln317_reg_157 = ap_const_lv1_0)) then
            if ((ap_const_boolean_1 = ap_condition_90)) then 
                p_src2_data_V_read <= tmp_V_4_read_r_fu_118_Mat_0_180_320_1_data_V_addr_read;
            elsif ((ap_const_boolean_1 = ap_condition_107)) then 
                p_src2_data_V_read <= grp_read_r_fu_112_Mat_0_180_320_1_data_V_addr_read;
            else 
                p_src2_data_V_read <= ap_const_logic_0;
            end if;
        else 
            p_src2_data_V_read <= ap_const_logic_0;
        end if; 
    end process;


    real_start_assign_proc : process(ap_start, start_full_n, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (start_full_n = ap_const_logic_0))) then 
            real_start <= ap_const_logic_0;
        else 
            real_start <= ap_start;
        end if; 
    end process;

    start_out <= real_start;

    start_write_assign_proc : process(real_start, start_once_reg)
    begin
        if (((start_once_reg = ap_const_logic_0) and (real_start = ap_const_logic_1))) then 
            start_write <= ap_const_logic_1;
        else 
            start_write <= ap_const_logic_0;
        end if; 
    end process;


    tmp_V_4_read_r_fu_118_ap_ce_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001_ignoreCallOp29)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001_ignoreCallOp29) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            tmp_V_4_read_r_fu_118_ap_ce <= ap_const_logic_1;
        else 
            tmp_V_4_read_r_fu_118_ap_ce <= ap_const_logic_0;
        end if; 
    end process;

    tmp_V_4_read_r_fu_118_ap_start <= tmp_V_4_read_r_fu_118_ap_start_reg;
end behav;
