-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity xferode794 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    p_src_data_V_address0 : OUT STD_LOGIC_VECTOR (15 downto 0);
    p_src_data_V_ce0 : OUT STD_LOGIC;
    p_src_data_V_q0 : IN STD_LOGIC_VECTOR (7 downto 0);
    p_dst_data_V_din : OUT STD_LOGIC_VECTOR (7 downto 0);
    p_dst_data_V_full_n : IN STD_LOGIC;
    p_dst_data_V_write : OUT STD_LOGIC );
end;


architecture behav of xferode794 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (7 downto 0) := "00100000";
    constant ap_ST_fsm_pp1_stage0 : STD_LOGIC_VECTOR (7 downto 0) := "01000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv9_0 : STD_LOGIC_VECTOR (8 downto 0) := "000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv32_140 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000101000000";
    constant ap_const_lv2_3 : STD_LOGIC_VECTOR (1 downto 0) := "11";
    constant ap_const_lv9_140 : STD_LOGIC_VECTOR (8 downto 0) := "101000000";
    constant ap_const_lv9_1 : STD_LOGIC_VECTOR (8 downto 0) := "000000001";
    constant ap_const_lv8_B5 : STD_LOGIC_VECTOR (7 downto 0) := "10110101";
    constant ap_const_lv8_B4 : STD_LOGIC_VECTOR (7 downto 0) := "10110100";
    constant ap_const_lv9_141 : STD_LOGIC_VECTOR (8 downto 0) := "101000001";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal p_dst_data_V_blk_n : STD_LOGIC;
    signal ap_enable_reg_pp1_iter3 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0 : BOOLEAN;
    signal icmp_ln891_reg_787 : STD_LOGIC_VECTOR (0 downto 0);
    signal index_assign_reg_263 : STD_LOGIC_VECTOR (8 downto 0);
    signal src_buf_1_1_0_reg_330 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_0_1_0_reg_342 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_2_1_0_reg_354 : STD_LOGIC_VECTOR (7 downto 0);
    signal t_V_2_reg_366 : STD_LOGIC_VECTOR (8 downto 0);
    signal t_V_2_reg_366_pp1_iter1_reg : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_pp1_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp1_stage0 : signal is "none";
    signal ap_block_state8_pp1_stage0_iter0 : BOOLEAN;
    signal ap_block_state9_pp1_stage0_iter1 : BOOLEAN;
    signal ap_block_state10_pp1_stage0_iter2 : BOOLEAN;
    signal ap_block_state11_pp1_stage0_iter3 : BOOLEAN;
    signal ap_block_pp1_stage0_11001 : BOOLEAN;
    signal row_ind_2_V_load_reg_669 : STD_LOGIC_VECTOR (12 downto 0);
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal row_ind_2_V_1_load_reg_674 : STD_LOGIC_VECTOR (12 downto 0);
    signal row_ind_2_V_2_load_reg_679 : STD_LOGIC_VECTOR (12 downto 0);
    signal icmp_ln259_fu_402_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal init_row_ind_fu_408_p2 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln272_fu_433_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln272_reg_693 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_block_state3_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state4_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal add_ln278_fu_439_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC := '0';
    signal zext_ln544_fu_445_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln544_reg_702 : STD_LOGIC_VECTOR (63 downto 0);
    signal i_col_V_fu_456_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state6 : signal is "none";
    signal icmp_ln298_fu_472_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_state7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state7 : signal is "none";
    signal icmp_ln887_fu_478_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln887_reg_732 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln321_fu_484_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln321_reg_736 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln321_1_fu_488_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln321_1_reg_741 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln321_2_fu_492_p1 : STD_LOGIC_VECTOR (1 downto 0);
    signal trunc_ln321_2_reg_746 : STD_LOGIC_VECTOR (1 downto 0);
    signal icmp_ln110_fu_496_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln110_reg_751 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln110_reg_751_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln110_reg_751_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal col_V_fu_502_p2 : STD_LOGIC_VECTOR (8 downto 0);
    signal col_V_reg_755 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_enable_reg_pp1_iter0 : STD_LOGIC := '0';
    signal icmp_ln887_1_fu_508_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln887_1_reg_760 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln887_1_reg_760_pp1_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln887_1_reg_760_pp1_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln891_fu_553_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal src_buf_temp_copy_ex_xfExtractPixels_1_fu_378_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_temp_copy_ex_1_xfExtractPixels_1_fu_383_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_temp_copy_ex_2_xfExtractPixels_1_fu_388_ap_return : STD_LOGIC_VECTOR (7 downto 0);
    signal row_V_fu_645_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_pp0_exit_iter0_state3 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_block_pp1_stage0_subdone : BOOLEAN;
    signal ap_condition_pp1_exit_iter0_state8 : STD_LOGIC;
    signal ap_enable_reg_pp1_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp1_iter2 : STD_LOGIC := '0';
    signal buf_0_V_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal buf_0_V_ce0 : STD_LOGIC;
    signal buf_0_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_0_V_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal buf_0_V_ce1 : STD_LOGIC;
    signal buf_0_V_we1 : STD_LOGIC;
    signal buf_0_V_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_1_V_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal buf_1_V_ce0 : STD_LOGIC;
    signal buf_1_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_1_V_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal buf_1_V_ce1 : STD_LOGIC;
    signal buf_1_V_we1 : STD_LOGIC;
    signal buf_1_V_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_2_V_address0 : STD_LOGIC_VECTOR (8 downto 0);
    signal buf_2_V_ce0 : STD_LOGIC;
    signal buf_2_V_q0 : STD_LOGIC_VECTOR (7 downto 0);
    signal buf_2_V_address1 : STD_LOGIC_VECTOR (8 downto 0);
    signal buf_2_V_ce1 : STD_LOGIC;
    signal buf_2_V_we1 : STD_LOGIC;
    signal buf_2_V_d1 : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_temp_copy_ex_xfExtractPixels_1_fu_378_ap_ready : STD_LOGIC;
    signal src_buf_temp_copy_ex_xfExtractPixels_1_fu_378_val1_V_read : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_temp_copy_ex_1_xfExtractPixels_1_fu_383_ap_ready : STD_LOGIC;
    signal src_buf_temp_copy_ex_1_xfExtractPixels_1_fu_383_val1_V_read : STD_LOGIC_VECTOR (7 downto 0);
    signal src_buf_temp_copy_ex_2_xfExtractPixels_1_fu_388_ap_ready : STD_LOGIC;
    signal src_buf_temp_copy_ex_2_xfExtractPixels_1_fu_388_val1_V_read : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_val_assign_phi_fu_256_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal val_assign_reg_252 : STD_LOGIC_VECTOR (1 downto 0);
    signal t_V_reg_274 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_CS_fsm_state5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state5 : signal is "none";
    signal icmp_ln287_fu_450_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal row_ind_1_V_1_reg_285 : STD_LOGIC_VECTOR (12 downto 0);
    signal zero_ind_V_reg_306 : STD_LOGIC_VECTOR (12 downto 0);
    signal row_ind_0_V_reg_295 : STD_LOGIC_VECTOR (12 downto 0);
    signal t_V_1_reg_318 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_t_V_2_phi_fu_370_p4 : STD_LOGIC_VECTOR (8 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln544_1_fu_462_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal sext_ln622_fu_517_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal zext_ln544_2_fu_522_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal buf_0_V_addr_1_gep_fu_208_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal buf_1_V_addr_1_gep_fu_214_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal buf_2_V_addr_gep_fu_220_p3 : STD_LOGIC_VECTOR (8 downto 0);
    signal zext_ln544_3_fu_546_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal row_ind_2_V_fu_86 : STD_LOGIC_VECTOR (12 downto 0);
    signal row_ind_0_V_2_fu_414_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal row_ind_2_V_1_fu_90 : STD_LOGIC_VECTOR (12 downto 0);
    signal row_ind_2_V_2_fu_94 : STD_LOGIC_VECTOR (12 downto 0);
    signal rd_ind_2_fu_110 : STD_LOGIC_VECTOR (31 downto 0);
    signal rd_ind_fu_535_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_sig_allocacmp_rd_ind_2_load_1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp1_stage0_01001 : BOOLEAN;
    signal sext_ln622_fu_517_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal buf_cop_0_V_fu_559_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_5_fu_570_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_6_fu_597_p5 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln887_2_fu_616_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln62_fu_622_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal icmp_ln887_3_fu_630_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_idle_pp1 : STD_LOGIC;
    signal ap_enable_pp1 : STD_LOGIC;
    signal ap_condition_592 : BOOLEAN;

    component xfExtractPixels_1 IS
    port (
        ap_ready : OUT STD_LOGIC;
        val1_V_read : IN STD_LOGIC_VECTOR (7 downto 0);
        ap_return : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component ip_accel_app_mux_yd2 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (7 downto 0);
        din1 : IN STD_LOGIC_VECTOR (7 downto 0);
        din2 : IN STD_LOGIC_VECTOR (7 downto 0);
        din3 : IN STD_LOGIC_VECTOR (1 downto 0);
        dout : OUT STD_LOGIC_VECTOR (7 downto 0) );
    end component;


    component xferode794_buf_0_V IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (7 downto 0);
        address1 : IN STD_LOGIC_VECTOR (8 downto 0);
        ce1 : IN STD_LOGIC;
        we1 : IN STD_LOGIC;
        d1 : IN STD_LOGIC_VECTOR (7 downto 0) );
    end component;



begin
    buf_0_V_U : component xferode794_buf_0_V
    generic map (
        DataWidth => 8,
        AddressRange => 320,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_0_V_address0,
        ce0 => buf_0_V_ce0,
        q0 => buf_0_V_q0,
        address1 => buf_0_V_address1,
        ce1 => buf_0_V_ce1,
        we1 => buf_0_V_we1,
        d1 => buf_0_V_d1);

    buf_1_V_U : component xferode794_buf_0_V
    generic map (
        DataWidth => 8,
        AddressRange => 320,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_1_V_address0,
        ce0 => buf_1_V_ce0,
        q0 => buf_1_V_q0,
        address1 => buf_1_V_address1,
        ce1 => buf_1_V_ce1,
        we1 => buf_1_V_we1,
        d1 => buf_1_V_d1);

    buf_2_V_U : component xferode794_buf_0_V
    generic map (
        DataWidth => 8,
        AddressRange => 320,
        AddressWidth => 9)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => buf_2_V_address0,
        ce0 => buf_2_V_ce0,
        q0 => buf_2_V_q0,
        address1 => buf_2_V_address1,
        ce1 => buf_2_V_ce1,
        we1 => buf_2_V_we1,
        d1 => buf_2_V_d1);

    src_buf_temp_copy_ex_xfExtractPixels_1_fu_378 : component xfExtractPixels_1
    port map (
        ap_ready => src_buf_temp_copy_ex_xfExtractPixels_1_fu_378_ap_ready,
        val1_V_read => src_buf_temp_copy_ex_xfExtractPixels_1_fu_378_val1_V_read,
        ap_return => src_buf_temp_copy_ex_xfExtractPixels_1_fu_378_ap_return);

    src_buf_temp_copy_ex_1_xfExtractPixels_1_fu_383 : component xfExtractPixels_1
    port map (
        ap_ready => src_buf_temp_copy_ex_1_xfExtractPixels_1_fu_383_ap_ready,
        val1_V_read => src_buf_temp_copy_ex_1_xfExtractPixels_1_fu_383_val1_V_read,
        ap_return => src_buf_temp_copy_ex_1_xfExtractPixels_1_fu_383_ap_return);

    src_buf_temp_copy_ex_2_xfExtractPixels_1_fu_388 : component xfExtractPixels_1
    port map (
        ap_ready => src_buf_temp_copy_ex_2_xfExtractPixels_1_fu_388_ap_ready,
        val1_V_read => src_buf_temp_copy_ex_2_xfExtractPixels_1_fu_388_val1_V_read,
        ap_return => src_buf_temp_copy_ex_2_xfExtractPixels_1_fu_388_ap_return);

    ip_accel_app_mux_yd2_U298 : component ip_accel_app_mux_yd2
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => buf_0_V_q0,
        din1 => buf_1_V_q0,
        din2 => buf_2_V_q0,
        din3 => trunc_ln321_1_reg_741,
        dout => buf_cop_0_V_fu_559_p5);

    ip_accel_app_mux_yd2_U299 : component ip_accel_app_mux_yd2
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => buf_0_V_q0,
        din1 => buf_1_V_q0,
        din2 => buf_2_V_q0,
        din3 => trunc_ln321_2_reg_746,
        dout => tmp_5_fu_570_p5);

    ip_accel_app_mux_yd2_U300 : component ip_accel_app_mux_yd2
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 8,
        din1_WIDTH => 8,
        din2_WIDTH => 8,
        din3_WIDTH => 2,
        dout_WIDTH => 8)
    port map (
        din0 => buf_0_V_q0,
        din1 => buf_1_V_q0,
        din2 => buf_2_V_q0,
        din3 => trunc_ln321_reg_736,
        dout => tmp_6_fu_597_p5);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_0;
                elsif (((icmp_ln259_fu_402_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_pp0_exit_iter0_state3) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then 
                    ap_enable_reg_pp0_iter1 <= (ap_const_logic_1 xor ap_condition_pp0_exit_iter0_state3);
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage0_subdone)) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                elsif (((icmp_ln259_fu_402_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                    ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter0_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_const_logic_1 = ap_condition_pp1_exit_iter0_state8))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_0;
                elsif (((icmp_ln298_fu_472_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                    ap_enable_reg_pp1_iter0 <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter1 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then
                    if ((ap_const_logic_1 = ap_condition_pp1_exit_iter0_state8)) then 
                        ap_enable_reg_pp1_iter1 <= (ap_const_logic_1 xor ap_condition_pp1_exit_iter0_state8);
                    elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                        ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
                    end if;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter2 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter2 <= ap_enable_reg_pp1_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp1_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
            else
                if ((ap_const_boolean_0 = ap_block_pp1_stage0_subdone)) then 
                    ap_enable_reg_pp1_iter3 <= ap_enable_reg_pp1_iter2;
                elsif (((icmp_ln298_fu_472_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                    ap_enable_reg_pp1_iter3 <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;


    index_assign_reg_263_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln259_fu_402_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                index_assign_reg_263 <= ap_const_lv9_0;
            elsif (((icmp_ln272_fu_433_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then 
                index_assign_reg_263 <= add_ln278_fu_439_p2;
            end if; 
        end if;
    end process;

    rd_ind_2_fu_110_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (icmp_ln887_1_reg_760 = ap_const_lv1_1) and (icmp_ln887_reg_732 = ap_const_lv1_1))) then 
                rd_ind_2_fu_110 <= rd_ind_fu_535_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln287_fu_450_p2 = ap_const_lv1_1))) then 
                rd_ind_2_fu_110 <= ap_const_lv32_140;
            end if; 
        end if;
    end process;

    row_ind_0_V_reg_295_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                row_ind_0_V_reg_295 <= row_ind_1_V_1_reg_285;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln287_fu_450_p2 = ap_const_lv1_1))) then 
                row_ind_0_V_reg_295 <= row_ind_2_V_1_load_reg_674;
            end if; 
        end if;
    end process;

    row_ind_1_V_1_reg_285_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                row_ind_1_V_1_reg_285 <= zero_ind_V_reg_306;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln287_fu_450_p2 = ap_const_lv1_1))) then 
                row_ind_1_V_1_reg_285 <= row_ind_2_V_2_load_reg_679;
            end if; 
        end if;
    end process;

    src_buf_0_1_0_reg_342_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln110_reg_751_pp1_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
                src_buf_0_1_0_reg_342 <= src_buf_temp_copy_ex_xfExtractPixels_1_fu_378_ap_return;
            elsif (((icmp_ln298_fu_472_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                src_buf_0_1_0_reg_342 <= ap_const_lv8_FF;
            end if; 
        end if;
    end process;

    src_buf_1_1_0_reg_330_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln110_reg_751_pp1_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
                src_buf_1_1_0_reg_330 <= src_buf_temp_copy_ex_1_xfExtractPixels_1_fu_383_ap_return;
            elsif (((icmp_ln298_fu_472_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                src_buf_1_1_0_reg_330 <= ap_const_lv8_FF;
            end if; 
        end if;
    end process;

    src_buf_2_1_0_reg_354_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln110_reg_751_pp1_iter2_reg = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
                src_buf_2_1_0_reg_354 <= src_buf_temp_copy_ex_2_xfExtractPixels_1_fu_388_ap_return;
            elsif (((icmp_ln298_fu_472_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                src_buf_2_1_0_reg_354 <= ap_const_lv8_FF;
            end if; 
        end if;
    end process;

    t_V_1_reg_318_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                t_V_1_reg_318 <= row_V_fu_645_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln287_fu_450_p2 = ap_const_lv1_1))) then 
                t_V_1_reg_318 <= ap_const_lv8_1;
            end if; 
        end if;
    end process;

    t_V_2_reg_366_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln110_reg_751 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1))) then 
                t_V_2_reg_366 <= col_V_reg_755;
            elsif (((icmp_ln298_fu_472_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then 
                t_V_2_reg_366 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;

    t_V_reg_274_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln287_fu_450_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6))) then 
                t_V_reg_274 <= i_col_V_fu_456_p2;
            elsif ((ap_const_logic_1 = ap_CS_fsm_state5)) then 
                t_V_reg_274 <= ap_const_lv9_0;
            end if; 
        end if;
    end process;

    val_assign_reg_252_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln259_fu_402_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then 
                val_assign_reg_252 <= init_row_ind_fu_408_p2;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then 
                val_assign_reg_252 <= ap_const_lv2_0;
            end if; 
        end if;
    end process;

    zero_ind_V_reg_306_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state12)) then 
                zero_ind_V_reg_306 <= row_ind_0_V_reg_295;
            elsif (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln287_fu_450_p2 = ap_const_lv1_1))) then 
                zero_ind_V_reg_306 <= row_ind_2_V_load_reg_669;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then
                col_V_reg_755 <= col_V_fu_502_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                icmp_ln110_reg_751 <= icmp_ln110_fu_496_p2;
                icmp_ln110_reg_751_pp1_iter1_reg <= icmp_ln110_reg_751;
                icmp_ln887_1_reg_760_pp1_iter1_reg <= icmp_ln887_1_reg_760;
                t_V_2_reg_366_pp1_iter1_reg <= t_V_2_reg_366;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_0 = ap_block_pp1_stage0_11001)) then
                icmp_ln110_reg_751_pp1_iter2_reg <= icmp_ln110_reg_751_pp1_iter1_reg;
                icmp_ln887_1_reg_760_pp1_iter2_reg <= icmp_ln887_1_reg_760_pp1_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                icmp_ln272_reg_693 <= icmp_ln272_fu_433_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln110_fu_496_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0))) then
                icmp_ln887_1_reg_760 <= icmp_ln887_1_fu_508_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln298_fu_472_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state7))) then
                icmp_ln887_reg_732 <= icmp_ln887_fu_478_p2;
                trunc_ln321_1_reg_741 <= trunc_ln321_1_fu_488_p1;
                trunc_ln321_2_reg_746 <= trunc_ln321_2_fu_492_p1;
                trunc_ln321_reg_736 <= trunc_ln321_fu_484_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln110_reg_751_pp1_iter1_reg = ap_const_lv1_0))) then
                icmp_ln891_reg_787 <= icmp_ln891_fu_553_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln259_fu_402_p2 = ap_const_lv1_0) and (ap_phi_mux_val_assign_phi_fu_256_p4 = ap_const_lv2_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    row_ind_2_V_1_fu_90(1 downto 0) <= row_ind_0_V_2_fu_414_p1(1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                    row_ind_2_V_1_load_reg_674(1 downto 0) <= row_ind_2_V_1_fu_90(1 downto 0);
                    row_ind_2_V_2_load_reg_679(1 downto 0) <= row_ind_2_V_2_fu_94(1 downto 0);
                    row_ind_2_V_load_reg_669(1 downto 0) <= row_ind_2_V_fu_86(1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((not((ap_phi_mux_val_assign_phi_fu_256_p4 = ap_const_lv2_1)) and not((ap_phi_mux_val_assign_phi_fu_256_p4 = ap_const_lv2_0)) and (icmp_ln259_fu_402_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    row_ind_2_V_2_fu_94(1 downto 0) <= row_ind_0_V_2_fu_414_p1(1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln259_fu_402_p2 = ap_const_lv1_0) and (ap_phi_mux_val_assign_phi_fu_256_p4 = ap_const_lv2_0) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    row_ind_2_V_fu_86(1 downto 0) <= row_ind_0_V_2_fu_414_p1(1 downto 0);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln272_fu_433_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001))) then
                    zext_ln544_reg_702(8 downto 0) <= zext_ln544_fu_445_p1(8 downto 0);
            end if;
        end if;
    end process;
    row_ind_2_V_load_reg_669(12 downto 2) <= "00000000000";
    row_ind_2_V_1_load_reg_674(12 downto 2) <= "00000000000";
    row_ind_2_V_2_load_reg_679(12 downto 2) <= "00000000000";
    zext_ln544_reg_702(63 downto 9) <= "0000000000000000000000000000000000000000000000000000000";
    row_ind_2_V_fu_86(12 downto 2) <= "00000000000";
    row_ind_2_V_1_fu_90(12 downto 2) <= "00000000000";
    row_ind_2_V_2_fu_94(12 downto 2) <= "00000000000";

    ap_NS_fsm_assign_proc : process (ap_start, ap_CS_fsm, ap_CS_fsm_state1, ap_enable_reg_pp1_iter3, ap_CS_fsm_state2, icmp_ln259_fu_402_p2, icmp_ln272_fu_433_p2, ap_enable_reg_pp0_iter0, ap_CS_fsm_state6, icmp_ln298_fu_472_p2, ap_CS_fsm_state7, icmp_ln110_fu_496_p2, ap_enable_reg_pp1_iter0, ap_block_pp0_stage0_subdone, ap_block_pp1_stage0_subdone, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter2, icmp_ln287_fu_450_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state1) and (ap_start = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((icmp_ln259_fu_402_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state2))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_pp0_stage0 => 
                if (not(((icmp_ln272_fu_433_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone)))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif (((icmp_ln272_fu_433_p2 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state6) and (icmp_ln287_fu_450_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state7;
                else
                    ap_NS_fsm <= ap_ST_fsm_state6;
                end if;
            when ap_ST_fsm_state7 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln298_fu_472_p2 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_pp1_stage0 => 
                if ((not(((ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln110_fu_496_p2 = ap_const_lv1_1))) and not(((ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))))) then
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                elsif ((((ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1)) or ((ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp1_stage0_subdone) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1) and (icmp_ln110_fu_496_p2 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp1_stage0;
                end if;
            when ap_ST_fsm_state12 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when others =>  
                ap_NS_fsm <= "XXXXXXXX";
        end case;
    end process;
    add_ln278_fu_439_p2 <= std_logic_vector(unsigned(index_assign_reg_263) + unsigned(ap_const_lv9_1));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(2);
    ap_CS_fsm_pp1_stage0 <= ap_CS_fsm(6);
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state12 <= ap_CS_fsm(7);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state5 <= ap_CS_fsm(3);
    ap_CS_fsm_state6 <= ap_CS_fsm(4);
    ap_CS_fsm_state7 <= ap_CS_fsm(5);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp1_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp1_stage0_01001_assign_proc : process(p_dst_data_V_full_n, ap_enable_reg_pp1_iter3, icmp_ln891_reg_787)
    begin
                ap_block_pp1_stage0_01001 <= ((icmp_ln891_reg_787 = ap_const_lv1_0) and (p_dst_data_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1));
    end process;


    ap_block_pp1_stage0_11001_assign_proc : process(p_dst_data_V_full_n, ap_enable_reg_pp1_iter3, icmp_ln891_reg_787)
    begin
                ap_block_pp1_stage0_11001 <= ((icmp_ln891_reg_787 = ap_const_lv1_0) and (p_dst_data_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1));
    end process;


    ap_block_pp1_stage0_subdone_assign_proc : process(p_dst_data_V_full_n, ap_enable_reg_pp1_iter3, icmp_ln891_reg_787)
    begin
                ap_block_pp1_stage0_subdone <= ((icmp_ln891_reg_787 = ap_const_lv1_0) and (p_dst_data_V_full_n = ap_const_logic_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1));
    end process;

        ap_block_state10_pp1_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_state11_pp1_stage0_iter3_assign_proc : process(p_dst_data_V_full_n, icmp_ln891_reg_787)
    begin
                ap_block_state11_pp1_stage0_iter3 <= ((icmp_ln891_reg_787 = ap_const_lv1_0) and (p_dst_data_V_full_n = ap_const_logic_0));
    end process;

        ap_block_state3_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp1_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp1_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_592_assign_proc : process(ap_block_pp1_stage0, ap_CS_fsm_pp1_stage0, trunc_ln321_reg_736, icmp_ln110_reg_751, icmp_ln887_1_reg_760, ap_enable_reg_pp1_iter1)
    begin
                ap_condition_592 <= (not((trunc_ln321_reg_736 = ap_const_lv2_0)) and not((trunc_ln321_reg_736 = ap_const_lv2_1)) and (icmp_ln110_reg_751 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (icmp_ln887_1_reg_760 = ap_const_lv1_1));
    end process;


    ap_condition_pp0_exit_iter0_state3_assign_proc : process(icmp_ln272_fu_433_p2)
    begin
        if ((icmp_ln272_fu_433_p2 = ap_const_lv1_1)) then 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_1;
        else 
            ap_condition_pp0_exit_iter0_state3 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_pp1_exit_iter0_state8_assign_proc : process(icmp_ln110_fu_496_p2)
    begin
        if ((icmp_ln110_fu_496_p2 = ap_const_lv1_1)) then 
            ap_condition_pp1_exit_iter0_state8 <= ap_const_logic_1;
        else 
            ap_condition_pp1_exit_iter0_state8 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_state1, icmp_ln298_fu_472_p2, ap_CS_fsm_state7)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1)) or ((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln298_fu_472_p2 = ap_const_lv1_1)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_pp1 <= (ap_idle_pp1 xor ap_const_logic_1);

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp1_assign_proc : process(ap_enable_reg_pp1_iter3, ap_enable_reg_pp1_iter0, ap_enable_reg_pp1_iter1, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_enable_reg_pp1_iter3 = ap_const_logic_0) and (ap_enable_reg_pp1_iter2 = ap_const_logic_0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_0))) then 
            ap_idle_pp1 <= ap_const_logic_1;
        else 
            ap_idle_pp1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_t_V_2_phi_fu_370_p4_assign_proc : process(ap_block_pp1_stage0, t_V_2_reg_366, ap_CS_fsm_pp1_stage0, icmp_ln110_reg_751, col_V_reg_755, ap_enable_reg_pp1_iter1)
    begin
        if (((icmp_ln110_reg_751 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1))) then 
            ap_phi_mux_t_V_2_phi_fu_370_p4 <= col_V_reg_755;
        else 
            ap_phi_mux_t_V_2_phi_fu_370_p4 <= t_V_2_reg_366;
        end if; 
    end process;

    ap_phi_mux_val_assign_phi_fu_256_p4 <= val_assign_reg_252;

    ap_ready_assign_proc : process(icmp_ln298_fu_472_p2, ap_CS_fsm_state7)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state7) and (icmp_ln298_fu_472_p2 = ap_const_lv1_1))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_sig_allocacmp_rd_ind_2_load_1_assign_proc : process(ap_block_pp1_stage0, ap_CS_fsm_pp1_stage0, icmp_ln887_reg_732, icmp_ln887_1_reg_760, ap_enable_reg_pp1_iter1, rd_ind_2_fu_110, rd_ind_fu_535_p2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (icmp_ln887_1_reg_760 = ap_const_lv1_1) and (icmp_ln887_reg_732 = ap_const_lv1_1))) then 
            ap_sig_allocacmp_rd_ind_2_load_1 <= rd_ind_fu_535_p2;
        else 
            ap_sig_allocacmp_rd_ind_2_load_1 <= rd_ind_2_fu_110;
        end if; 
    end process;

    buf_0_V_addr_1_gep_fu_208_p3 <= zext_ln544_2_fu_522_p1(9 - 1 downto 0);
    buf_0_V_address0 <= zext_ln544_3_fu_546_p1(9 - 1 downto 0);

    buf_0_V_address1_assign_proc : process(ap_block_pp1_stage0, ap_CS_fsm_pp1_stage0, ap_CS_fsm_state6, icmp_ln887_reg_732, trunc_ln321_reg_736, icmp_ln110_reg_751, icmp_ln887_1_reg_760, ap_enable_reg_pp1_iter1, zext_ln544_1_fu_462_p1, zext_ln544_2_fu_522_p1, buf_0_V_addr_1_gep_fu_208_p3)
    begin
        if (((icmp_ln110_reg_751 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (icmp_ln887_1_reg_760 = ap_const_lv1_1) and (trunc_ln321_reg_736 = ap_const_lv2_0) and (icmp_ln887_reg_732 = ap_const_lv1_1))) then 
            buf_0_V_address1 <= buf_0_V_addr_1_gep_fu_208_p3;
        elsif (((icmp_ln110_reg_751 = ap_const_lv1_0) and (icmp_ln887_reg_732 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (icmp_ln887_1_reg_760 = ap_const_lv1_1) and (trunc_ln321_reg_736 = ap_const_lv2_0))) then 
            buf_0_V_address1 <= zext_ln544_2_fu_522_p1(9 - 1 downto 0);
        elsif ((ap_const_logic_1 = ap_CS_fsm_state6)) then 
            buf_0_V_address1 <= zext_ln544_1_fu_462_p1(9 - 1 downto 0);
        else 
            buf_0_V_address1 <= "XXXXXXXXX";
        end if; 
    end process;


    buf_0_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            buf_0_V_ce0 <= ap_const_logic_1;
        else 
            buf_0_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_0_V_ce1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_CS_fsm_state6, icmp_ln887_reg_732, trunc_ln321_reg_736, icmp_ln110_reg_751, icmp_ln887_1_reg_760, ap_enable_reg_pp1_iter1)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state6) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln110_reg_751 = ap_const_lv1_0) and (icmp_ln887_reg_732 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (icmp_ln887_1_reg_760 = ap_const_lv1_1) and (trunc_ln321_reg_736 = ap_const_lv2_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln110_reg_751 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (icmp_ln887_1_reg_760 = ap_const_lv1_1) and (trunc_ln321_reg_736 = ap_const_lv2_0) and (icmp_ln887_reg_732 = ap_const_lv1_1)))) then 
            buf_0_V_ce1 <= ap_const_logic_1;
        else 
            buf_0_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_0_V_d1_assign_proc : process(p_src_data_V_q0, ap_block_pp1_stage0, ap_CS_fsm_pp1_stage0, ap_CS_fsm_state6, icmp_ln887_reg_732, trunc_ln321_reg_736, icmp_ln110_reg_751, icmp_ln887_1_reg_760, ap_enable_reg_pp1_iter1)
    begin
        if (((icmp_ln110_reg_751 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (icmp_ln887_1_reg_760 = ap_const_lv1_1) and (trunc_ln321_reg_736 = ap_const_lv2_0) and (icmp_ln887_reg_732 = ap_const_lv1_1))) then 
            buf_0_V_d1 <= p_src_data_V_q0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state6) or ((icmp_ln110_reg_751 = ap_const_lv1_0) and (icmp_ln887_reg_732 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (icmp_ln887_1_reg_760 = ap_const_lv1_1) and (trunc_ln321_reg_736 = ap_const_lv2_0)))) then 
            buf_0_V_d1 <= ap_const_lv8_FF;
        else 
            buf_0_V_d1 <= "XXXXXXXX";
        end if; 
    end process;


    buf_0_V_we1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_CS_fsm_state6, icmp_ln887_reg_732, trunc_ln321_reg_736, icmp_ln110_reg_751, icmp_ln887_1_reg_760, ap_enable_reg_pp1_iter1, icmp_ln287_fu_450_p2)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln110_reg_751 = ap_const_lv1_0) and (icmp_ln887_reg_732 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (icmp_ln887_1_reg_760 = ap_const_lv1_1) and (trunc_ln321_reg_736 = ap_const_lv2_0)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln110_reg_751 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (icmp_ln887_1_reg_760 = ap_const_lv1_1) and (trunc_ln321_reg_736 = ap_const_lv2_0) and (icmp_ln887_reg_732 = ap_const_lv1_1)) or ((icmp_ln287_fu_450_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_state6)))) then 
            buf_0_V_we1 <= ap_const_logic_1;
        else 
            buf_0_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    buf_1_V_addr_1_gep_fu_214_p3 <= zext_ln544_2_fu_522_p1(9 - 1 downto 0);
    buf_1_V_address0 <= zext_ln544_3_fu_546_p1(9 - 1 downto 0);

    buf_1_V_address1_assign_proc : process(ap_block_pp1_stage0, ap_CS_fsm_pp1_stage0, ap_CS_fsm_pp0_stage0, zext_ln544_reg_702, icmp_ln887_reg_732, trunc_ln321_reg_736, icmp_ln110_reg_751, icmp_ln887_1_reg_760, ap_enable_reg_pp0_iter1, ap_enable_reg_pp1_iter1, ap_block_pp0_stage0, zext_ln544_2_fu_522_p1, buf_1_V_addr_1_gep_fu_214_p3)
    begin
        if (((icmp_ln110_reg_751 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (icmp_ln887_1_reg_760 = ap_const_lv1_1) and (trunc_ln321_reg_736 = ap_const_lv2_1) and (icmp_ln887_reg_732 = ap_const_lv1_1))) then 
            buf_1_V_address1 <= buf_1_V_addr_1_gep_fu_214_p3;
        elsif (((icmp_ln110_reg_751 = ap_const_lv1_0) and (icmp_ln887_reg_732 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (icmp_ln887_1_reg_760 = ap_const_lv1_1) and (trunc_ln321_reg_736 = ap_const_lv2_1))) then 
            buf_1_V_address1 <= zext_ln544_2_fu_522_p1(9 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
            buf_1_V_address1 <= zext_ln544_reg_702(9 - 1 downto 0);
        else 
            buf_1_V_address1 <= "XXXXXXXXX";
        end if; 
    end process;


    buf_1_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            buf_1_V_ce0 <= ap_const_logic_1;
        else 
            buf_1_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_1_V_ce1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln887_reg_732, trunc_ln321_reg_736, icmp_ln110_reg_751, icmp_ln887_1_reg_760, ap_enable_reg_pp0_iter1, ap_enable_reg_pp1_iter1)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln110_reg_751 = ap_const_lv1_0) and (icmp_ln887_reg_732 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (icmp_ln887_1_reg_760 = ap_const_lv1_1) and (trunc_ln321_reg_736 = ap_const_lv2_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln110_reg_751 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (icmp_ln887_1_reg_760 = ap_const_lv1_1) and (trunc_ln321_reg_736 = ap_const_lv2_1) and (icmp_ln887_reg_732 = ap_const_lv1_1)))) then 
            buf_1_V_ce1 <= ap_const_logic_1;
        else 
            buf_1_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_1_V_d1_assign_proc : process(p_src_data_V_q0, ap_block_pp1_stage0, ap_CS_fsm_pp1_stage0, ap_CS_fsm_pp0_stage0, icmp_ln887_reg_732, trunc_ln321_reg_736, icmp_ln110_reg_751, icmp_ln887_1_reg_760, ap_enable_reg_pp0_iter1, ap_enable_reg_pp1_iter1, ap_block_pp0_stage0)
    begin
        if (((icmp_ln110_reg_751 = ap_const_lv1_0) and (icmp_ln887_reg_732 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (icmp_ln887_1_reg_760 = ap_const_lv1_1) and (trunc_ln321_reg_736 = ap_const_lv2_1))) then 
            buf_1_V_d1 <= ap_const_lv8_FF;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1)) or ((icmp_ln110_reg_751 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (icmp_ln887_1_reg_760 = ap_const_lv1_1) and (trunc_ln321_reg_736 = ap_const_lv2_1) and (icmp_ln887_reg_732 = ap_const_lv1_1)))) then 
            buf_1_V_d1 <= p_src_data_V_q0;
        else 
            buf_1_V_d1 <= "XXXXXXXX";
        end if; 
    end process;


    buf_1_V_we1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, icmp_ln272_reg_693, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln887_reg_732, trunc_ln321_reg_736, icmp_ln110_reg_751, icmp_ln887_1_reg_760, ap_enable_reg_pp0_iter1, ap_enable_reg_pp1_iter1)
    begin
        if ((((icmp_ln272_reg_693 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln110_reg_751 = ap_const_lv1_0) and (icmp_ln887_reg_732 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (icmp_ln887_1_reg_760 = ap_const_lv1_1) and (trunc_ln321_reg_736 = ap_const_lv2_1)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln110_reg_751 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (icmp_ln887_1_reg_760 = ap_const_lv1_1) and (trunc_ln321_reg_736 = ap_const_lv2_1) and (icmp_ln887_reg_732 = ap_const_lv1_1)))) then 
            buf_1_V_we1 <= ap_const_logic_1;
        else 
            buf_1_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    buf_2_V_addr_gep_fu_220_p3 <= zext_ln544_2_fu_522_p1(9 - 1 downto 0);
    buf_2_V_address0 <= zext_ln544_3_fu_546_p1(9 - 1 downto 0);

    buf_2_V_address1_assign_proc : process(icmp_ln887_reg_732, zext_ln544_2_fu_522_p1, buf_2_V_addr_gep_fu_220_p3, ap_condition_592)
    begin
        if ((ap_const_boolean_1 = ap_condition_592)) then
            if ((icmp_ln887_reg_732 = ap_const_lv1_1)) then 
                buf_2_V_address1 <= buf_2_V_addr_gep_fu_220_p3;
            elsif ((icmp_ln887_reg_732 = ap_const_lv1_0)) then 
                buf_2_V_address1 <= zext_ln544_2_fu_522_p1(9 - 1 downto 0);
            else 
                buf_2_V_address1 <= "XXXXXXXXX";
            end if;
        else 
            buf_2_V_address1 <= "XXXXXXXXX";
        end if; 
    end process;


    buf_2_V_ce0_assign_proc : process(ap_block_pp1_stage0_11001, ap_enable_reg_pp1_iter2)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_enable_reg_pp1_iter2 = ap_const_logic_1))) then 
            buf_2_V_ce0 <= ap_const_logic_1;
        else 
            buf_2_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;


    buf_2_V_ce1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, icmp_ln887_reg_732, trunc_ln321_reg_736, icmp_ln110_reg_751, icmp_ln887_1_reg_760, ap_enable_reg_pp1_iter1)
    begin
        if (((not((trunc_ln321_reg_736 = ap_const_lv2_0)) and not((trunc_ln321_reg_736 = ap_const_lv2_1)) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln110_reg_751 = ap_const_lv1_0) and (icmp_ln887_reg_732 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (icmp_ln887_1_reg_760 = ap_const_lv1_1)) or (not((trunc_ln321_reg_736 = ap_const_lv2_0)) and not((trunc_ln321_reg_736 = ap_const_lv2_1)) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln110_reg_751 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (icmp_ln887_1_reg_760 = ap_const_lv1_1) and (icmp_ln887_reg_732 = ap_const_lv1_1)))) then 
            buf_2_V_ce1 <= ap_const_logic_1;
        else 
            buf_2_V_ce1 <= ap_const_logic_0;
        end if; 
    end process;


    buf_2_V_d1_assign_proc : process(p_src_data_V_q0, icmp_ln887_reg_732, ap_condition_592)
    begin
        if ((ap_const_boolean_1 = ap_condition_592)) then
            if ((icmp_ln887_reg_732 = ap_const_lv1_1)) then 
                buf_2_V_d1 <= p_src_data_V_q0;
            elsif ((icmp_ln887_reg_732 = ap_const_lv1_0)) then 
                buf_2_V_d1 <= ap_const_lv8_FF;
            else 
                buf_2_V_d1 <= "XXXXXXXX";
            end if;
        else 
            buf_2_V_d1 <= "XXXXXXXX";
        end if; 
    end process;


    buf_2_V_we1_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, icmp_ln887_reg_732, trunc_ln321_reg_736, icmp_ln110_reg_751, icmp_ln887_1_reg_760, ap_enable_reg_pp1_iter1)
    begin
        if (((not((trunc_ln321_reg_736 = ap_const_lv2_0)) and not((trunc_ln321_reg_736 = ap_const_lv2_1)) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln110_reg_751 = ap_const_lv1_0) and (icmp_ln887_reg_732 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (icmp_ln887_1_reg_760 = ap_const_lv1_1)) or (not((trunc_ln321_reg_736 = ap_const_lv2_0)) and not((trunc_ln321_reg_736 = ap_const_lv2_1)) and (ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln110_reg_751 = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter1 = ap_const_logic_1) and (icmp_ln887_1_reg_760 = ap_const_lv1_1) and (icmp_ln887_reg_732 = ap_const_lv1_1)))) then 
            buf_2_V_we1 <= ap_const_logic_1;
        else 
            buf_2_V_we1 <= ap_const_logic_0;
        end if; 
    end process;

    col_V_fu_502_p2 <= std_logic_vector(unsigned(ap_phi_mux_t_V_2_phi_fu_370_p4) + unsigned(ap_const_lv9_1));
    i_col_V_fu_456_p2 <= std_logic_vector(unsigned(t_V_reg_274) + unsigned(ap_const_lv9_1));
    icmp_ln110_fu_496_p2 <= "1" when (ap_phi_mux_t_V_2_phi_fu_370_p4 = ap_const_lv9_141) else "0";
    icmp_ln259_fu_402_p2 <= "1" when (val_assign_reg_252 = ap_const_lv2_3) else "0";
    icmp_ln272_fu_433_p2 <= "1" when (index_assign_reg_263 = ap_const_lv9_140) else "0";
    icmp_ln287_fu_450_p2 <= "1" when (t_V_reg_274 = ap_const_lv9_140) else "0";
    icmp_ln298_fu_472_p2 <= "1" when (t_V_1_reg_318 = ap_const_lv8_B5) else "0";
    icmp_ln887_1_fu_508_p2 <= "1" when (unsigned(ap_phi_mux_t_V_2_phi_fu_370_p4) < unsigned(ap_const_lv9_140)) else "0";
    icmp_ln887_2_fu_616_p2 <= "1" when (unsigned(src_buf_1_1_0_reg_330) < unsigned(src_buf_0_1_0_reg_342)) else "0";
    icmp_ln887_3_fu_630_p2 <= "1" when (unsigned(src_buf_2_1_0_reg_354) < unsigned(select_ln62_fu_622_p3)) else "0";
    icmp_ln887_fu_478_p2 <= "1" when (unsigned(t_V_1_reg_318) < unsigned(ap_const_lv8_B4)) else "0";
    icmp_ln891_fu_553_p2 <= "1" when (t_V_2_reg_366_pp1_iter1_reg = ap_const_lv9_0) else "0";
    init_row_ind_fu_408_p2 <= std_logic_vector(unsigned(val_assign_reg_252) + unsigned(ap_const_lv2_1));

    p_dst_data_V_blk_n_assign_proc : process(p_dst_data_V_full_n, ap_enable_reg_pp1_iter3, ap_block_pp1_stage0, icmp_ln891_reg_787)
    begin
        if (((icmp_ln891_reg_787 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            p_dst_data_V_blk_n <= p_dst_data_V_full_n;
        else 
            p_dst_data_V_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    p_dst_data_V_din <= 
        src_buf_2_1_0_reg_354 when (icmp_ln887_3_fu_630_p2(0) = '1') else 
        select_ln62_fu_622_p3;

    p_dst_data_V_write_assign_proc : process(ap_enable_reg_pp1_iter3, icmp_ln891_reg_787, ap_block_pp1_stage0_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (icmp_ln891_reg_787 = ap_const_lv1_0) and (ap_enable_reg_pp1_iter3 = ap_const_logic_1))) then 
            p_dst_data_V_write <= ap_const_logic_1;
        else 
            p_dst_data_V_write <= ap_const_logic_0;
        end if; 
    end process;


    p_src_data_V_address0_assign_proc : process(ap_block_pp1_stage0, ap_CS_fsm_pp1_stage0, ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, zext_ln544_fu_445_p1, ap_enable_reg_pp1_iter0, ap_block_pp0_stage0, sext_ln622_fu_517_p1)
    begin
        if (((ap_const_boolean_0 = ap_block_pp1_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1))) then 
            p_src_data_V_address0 <= sext_ln622_fu_517_p1(16 - 1 downto 0);
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1))) then 
            p_src_data_V_address0 <= zext_ln544_fu_445_p1(16 - 1 downto 0);
        else 
            p_src_data_V_address0 <= "XXXXXXXXXXXXXXXX";
        end if; 
    end process;


    p_src_data_V_ce0_assign_proc : process(ap_CS_fsm_pp1_stage0, ap_block_pp1_stage0_11001, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_enable_reg_pp0_iter0, ap_enable_reg_pp1_iter0)
    begin
        if ((((ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001)) or ((ap_const_boolean_0 = ap_block_pp1_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp1_stage0) and (ap_enable_reg_pp1_iter0 = ap_const_logic_1)))) then 
            p_src_data_V_ce0 <= ap_const_logic_1;
        else 
            p_src_data_V_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    rd_ind_fu_535_p2 <= std_logic_vector(unsigned(rd_ind_2_fu_110) + unsigned(ap_const_lv32_1));
    row_V_fu_645_p2 <= std_logic_vector(unsigned(t_V_1_reg_318) + unsigned(ap_const_lv8_1));
    row_ind_0_V_2_fu_414_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(val_assign_reg_252),13));
    select_ln62_fu_622_p3 <= 
        src_buf_1_1_0_reg_330 when (icmp_ln887_2_fu_616_p2(0) = '1') else 
        src_buf_0_1_0_reg_342;
    sext_ln622_fu_517_p0 <= ap_sig_allocacmp_rd_ind_2_load_1;
        sext_ln622_fu_517_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(sext_ln622_fu_517_p0),64));

    src_buf_temp_copy_ex_1_xfExtractPixels_1_fu_383_val1_V_read <= 
        tmp_5_fu_570_p5 when (icmp_ln887_1_reg_760_pp1_iter2_reg(0) = '1') else 
        ap_const_lv8_FF;
    src_buf_temp_copy_ex_2_xfExtractPixels_1_fu_388_val1_V_read <= 
        tmp_6_fu_597_p5 when (icmp_ln887_1_reg_760_pp1_iter2_reg(0) = '1') else 
        ap_const_lv8_FF;
    src_buf_temp_copy_ex_xfExtractPixels_1_fu_378_val1_V_read <= 
        buf_cop_0_V_fu_559_p5 when (icmp_ln887_1_reg_760_pp1_iter2_reg(0) = '1') else 
        ap_const_lv8_FF;
    trunc_ln321_1_fu_488_p1 <= zero_ind_V_reg_306(2 - 1 downto 0);
    trunc_ln321_2_fu_492_p1 <= row_ind_0_V_reg_295(2 - 1 downto 0);
    trunc_ln321_fu_484_p1 <= row_ind_1_V_1_reg_285(2 - 1 downto 0);
    zext_ln544_1_fu_462_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_reg_274),64));
    zext_ln544_2_fu_522_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_2_reg_366),64));
    zext_ln544_3_fu_546_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(t_V_2_reg_366_pp1_iter1_reg),64));
    zext_ln544_fu_445_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(index_assign_reg_263),64));
end behav;
