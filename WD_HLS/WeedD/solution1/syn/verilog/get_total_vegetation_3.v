// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module get_total_vegetation_3 (
        agg_result_V,
        img_in_data_V_address0,
        img_in_data_V_ce0,
        img_in_data_V_d0,
        img_in_data_V_q0,
        img_in_data_V_we0,
        img_in_data_V_address1,
        img_in_data_V_ce1,
        img_in_data_V_d1,
        img_in_data_V_q1,
        img_in_data_V_we1,
        ap_clk,
        ap_rst,
        ap_start,
        agg_result_V_ap_vld,
        ap_done,
        img_in_data_V_i_address0,
        img_in_data_V_i_ce0,
        img_in_data_V_i_q0,
        img_in_data_V_t_address0,
        img_in_data_V_t_ce0,
        img_in_data_V_t_q0,
        ap_ready,
        ap_idle,
        ap_continue
);


output  [23:0] agg_result_V;
output  [15:0] img_in_data_V_address0;
output   img_in_data_V_ce0;
output  [7:0] img_in_data_V_d0;
input  [7:0] img_in_data_V_q0;
output   img_in_data_V_we0;
output  [15:0] img_in_data_V_address1;
output   img_in_data_V_ce1;
output  [7:0] img_in_data_V_d1;
input  [7:0] img_in_data_V_q1;
output   img_in_data_V_we1;
input   ap_clk;
input   ap_rst;
input   ap_start;
output   agg_result_V_ap_vld;
output   ap_done;
input  [15:0] img_in_data_V_i_address0;
input   img_in_data_V_i_ce0;
output  [7:0] img_in_data_V_i_q0;
input  [15:0] img_in_data_V_t_address0;
input   img_in_data_V_t_ce0;
output  [7:0] img_in_data_V_t_q0;
output   ap_ready;
output   ap_idle;
input   ap_continue;

wire    get_total_vegetation_U0_ap_start;
wire    get_total_vegetation_U0_ap_done;
wire    get_total_vegetation_U0_ap_continue;
wire    get_total_vegetation_U0_ap_idle;
wire    get_total_vegetation_U0_ap_ready;
wire   [15:0] get_total_vegetation_U0_img_in_data_V_address0;
wire    get_total_vegetation_U0_img_in_data_V_ce0;
wire   [23:0] get_total_vegetation_U0_ap_return;
wire    ap_channel_done_p_Val2_loc_channel;
wire    p_Val2_loc_channel_full_n;
reg    ap_sync_reg_channel_write_p_Val2_loc_channel;
wire    ap_sync_channel_write_p_Val2_loc_channel;
wire    ap_channel_done_img_in_data_V;
wire    get_total_vegetation_U0_img_in_data_V_full_n;
reg    ap_sync_reg_channel_write_img_in_data_V;
wire    ap_sync_channel_write_img_in_data_V;
wire    get_total_vegetation_1_U0_ap_start;
wire    get_total_vegetation_1_U0_ap_done;
wire    get_total_vegetation_1_U0_ap_continue;
wire    get_total_vegetation_1_U0_ap_idle;
wire    get_total_vegetation_1_U0_ap_ready;
wire   [15:0] get_total_vegetation_1_U0_img_in_data_V_address0;
wire    get_total_vegetation_1_U0_img_in_data_V_ce0;
wire   [23:0] get_total_vegetation_1_U0_ap_return;
wire    ap_channel_done_p_Val2_19_loc_chan;
wire    p_Val2_19_loc_chan_full_n;
wire    get_total_vegetation_2_U0_ap_start;
wire    get_total_vegetation_2_U0_ap_done;
wire    get_total_vegetation_2_U0_ap_continue;
wire    get_total_vegetation_2_U0_ap_idle;
wire    get_total_vegetation_2_U0_ap_ready;
wire   [23:0] get_total_vegetation_2_U0_agg_result_V;
wire    get_total_vegetation_2_U0_agg_result_V_ap_vld;
wire    ap_sync_continue;
wire    img_in_data_V_i_full_n;
wire    img_in_data_V_t_empty_n;
wire   [15:0] img_in_data_V_i_address0_x;
wire    img_in_data_V_i_ce0_x;
wire   [7:0] img_in_data_V_i_d0;
wire   [7:0] img_in_data_V_i_q0_x;
wire    img_in_data_V_i_we0;
wire   [15:0] img_in_data_V_t_address0_x;
wire    img_in_data_V_t_ce0_x;
wire   [7:0] img_in_data_V_t_d0;
wire   [7:0] img_in_data_V_t_q0_x;
wire    img_in_data_V_t_we0;
wire   [23:0] p_Val2_loc_channel_dout;
wire    p_Val2_loc_channel_empty_n;
wire   [23:0] p_Val2_19_loc_chan_dout;
wire    p_Val2_19_loc_chan_empty_n;
wire    ap_sync_done;
wire    ap_sync_ready;
wire    get_total_vegetation_U0_start_full_n;
wire    get_total_vegetation_U0_start_write;
wire    get_total_vegetation_1_U0_start_full_n;
wire    get_total_vegetation_1_U0_start_write;
wire    get_total_vegetation_2_U0_start_full_n;
wire    get_total_vegetation_2_U0_start_write;

// power-on initialization
initial begin
#0 ap_sync_reg_channel_write_p_Val2_loc_channel = 1'b0;
#0 ap_sync_reg_channel_write_img_in_data_V = 1'b0;
end

get_total_vegetation get_total_vegetation_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(get_total_vegetation_U0_ap_start),
    .ap_done(get_total_vegetation_U0_ap_done),
    .ap_continue(get_total_vegetation_U0_ap_continue),
    .ap_idle(get_total_vegetation_U0_ap_idle),
    .ap_ready(get_total_vegetation_U0_ap_ready),
    .img_in_data_V_address0(get_total_vegetation_U0_img_in_data_V_address0),
    .img_in_data_V_ce0(get_total_vegetation_U0_img_in_data_V_ce0),
    .img_in_data_V_q0(img_in_data_V_i_q0_x),
    .ap_return(get_total_vegetation_U0_ap_return)
);

get_total_vegetation_1 get_total_vegetation_1_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(get_total_vegetation_1_U0_ap_start),
    .ap_done(get_total_vegetation_1_U0_ap_done),
    .ap_continue(get_total_vegetation_1_U0_ap_continue),
    .ap_idle(get_total_vegetation_1_U0_ap_idle),
    .ap_ready(get_total_vegetation_1_U0_ap_ready),
    .img_in_data_V_address0(get_total_vegetation_1_U0_img_in_data_V_address0),
    .img_in_data_V_ce0(get_total_vegetation_1_U0_img_in_data_V_ce0),
    .img_in_data_V_q0(img_in_data_V_t_q0_x),
    .ap_return(get_total_vegetation_1_U0_ap_return)
);

get_total_vegetation_2 get_total_vegetation_2_U0(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(get_total_vegetation_2_U0_ap_start),
    .ap_done(get_total_vegetation_2_U0_ap_done),
    .ap_continue(get_total_vegetation_2_U0_ap_continue),
    .ap_idle(get_total_vegetation_2_U0_ap_idle),
    .ap_ready(get_total_vegetation_2_U0_ap_ready),
    .p_read(p_Val2_loc_channel_dout),
    .p_read1(p_Val2_19_loc_chan_dout),
    .agg_result_V(get_total_vegetation_2_U0_agg_result_V),
    .agg_result_V_ap_vld(get_total_vegetation_2_U0_agg_result_V_ap_vld)
);

get_total_vegetatBew #(
    .DataWidth( 8 ),
    .AddressRange( 57600 ),
    .AddressWidth( 16 ))
img_in_data_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .i_address0(img_in_data_V_i_address0),
    .i_ce0(img_in_data_V_i_ce0),
    .i_q0(img_in_data_V_i_q0),
    .t_address0(img_in_data_V_t_address0),
    .t_ce0(img_in_data_V_t_ce0),
    .t_q0(img_in_data_V_t_q0),
    .i_ce(1'b1),
    .t_ce(1'b1),
    .i_full_n(img_in_data_V_i_full_n),
    .i_write(get_total_vegetation_U0_ap_done),
    .t_empty_n(img_in_data_V_t_empty_n),
    .t_read(get_total_vegetation_1_U0_ap_ready)
);

fifo_w24_d2_A_x2 p_Val2_loc_channel_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(get_total_vegetation_U0_ap_return),
    .if_full_n(p_Val2_loc_channel_full_n),
    .if_write(ap_channel_done_p_Val2_loc_channel),
    .if_dout(p_Val2_loc_channel_dout),
    .if_empty_n(p_Val2_loc_channel_empty_n),
    .if_read(get_total_vegetation_2_U0_ap_ready)
);

fifo_w24_d2_A_x2 p_Val2_19_loc_chan_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .if_read_ce(1'b1),
    .if_write_ce(1'b1),
    .if_din(get_total_vegetation_1_U0_ap_return),
    .if_full_n(p_Val2_19_loc_chan_full_n),
    .if_write(get_total_vegetation_1_U0_ap_done),
    .if_dout(p_Val2_19_loc_chan_dout),
    .if_empty_n(p_Val2_19_loc_chan_empty_n),
    .if_read(get_total_vegetation_2_U0_ap_ready)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_img_in_data_V <= 1'b0;
    end else begin
        if (((get_total_vegetation_U0_ap_done & get_total_vegetation_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_img_in_data_V <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_img_in_data_V <= ap_sync_channel_write_img_in_data_V;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_sync_reg_channel_write_p_Val2_loc_channel <= 1'b0;
    end else begin
        if (((get_total_vegetation_U0_ap_done & get_total_vegetation_U0_ap_continue) == 1'b1)) begin
            ap_sync_reg_channel_write_p_Val2_loc_channel <= 1'b0;
        end else begin
            ap_sync_reg_channel_write_p_Val2_loc_channel <= ap_sync_channel_write_p_Val2_loc_channel;
        end
    end
end

assign agg_result_V = get_total_vegetation_2_U0_agg_result_V;

assign agg_result_V_ap_vld = get_total_vegetation_2_U0_agg_result_V_ap_vld;

assign ap_channel_done_img_in_data_V = (get_total_vegetation_U0_ap_done & (ap_sync_reg_channel_write_img_in_data_V ^ 1'b1));

assign ap_channel_done_p_Val2_19_loc_chan = get_total_vegetation_1_U0_ap_done;

assign ap_channel_done_p_Val2_loc_channel = (get_total_vegetation_U0_ap_done & (ap_sync_reg_channel_write_p_Val2_loc_channel ^ 1'b1));

assign ap_done = get_total_vegetation_2_U0_ap_done;

assign ap_idle = (get_total_vegetation_U0_ap_idle & get_total_vegetation_2_U0_ap_idle & get_total_vegetation_1_U0_ap_idle & (img_in_data_V_t_empty_n ^ 1'b1) & (p_Val2_19_loc_chan_empty_n ^ 1'b1) & (p_Val2_loc_channel_empty_n ^ 1'b1));

assign ap_ready = get_total_vegetation_2_U0_ap_done;

assign ap_sync_channel_write_img_in_data_V = ((get_total_vegetation_U0_img_in_data_V_full_n & ap_channel_done_img_in_data_V) | ap_sync_reg_channel_write_img_in_data_V);

assign ap_sync_channel_write_p_Val2_loc_channel = ((p_Val2_loc_channel_full_n & ap_channel_done_p_Val2_loc_channel) | ap_sync_reg_channel_write_p_Val2_loc_channel);

assign ap_sync_continue = ap_continue;

assign ap_sync_done = get_total_vegetation_2_U0_ap_done;

assign ap_sync_ready = ap_sync_done;

assign get_total_vegetation_1_U0_ap_continue = p_Val2_19_loc_chan_full_n;

assign get_total_vegetation_1_U0_ap_start = img_in_data_V_t_empty_n;

assign get_total_vegetation_1_U0_start_full_n = 1'b1;

assign get_total_vegetation_1_U0_start_write = 1'b0;

assign get_total_vegetation_2_U0_ap_continue = ap_continue;

assign get_total_vegetation_2_U0_ap_start = (p_Val2_loc_channel_empty_n & p_Val2_19_loc_chan_empty_n);

assign get_total_vegetation_2_U0_start_full_n = 1'b1;

assign get_total_vegetation_2_U0_start_write = 1'b0;

assign get_total_vegetation_U0_ap_continue = (ap_sync_channel_write_p_Val2_loc_channel & ap_sync_channel_write_img_in_data_V);

assign get_total_vegetation_U0_ap_start = 1'b1;

assign get_total_vegetation_U0_img_in_data_V_full_n = img_in_data_V_i_full_n;

assign get_total_vegetation_U0_start_full_n = 1'b1;

assign get_total_vegetation_U0_start_write = 1'b0;

assign img_in_data_V_address0 = 16'd0;

assign img_in_data_V_address1 = 16'd0;

assign img_in_data_V_ce0 = 1'b0;

assign img_in_data_V_ce1 = 1'b0;

assign img_in_data_V_d0 = 8'd0;

assign img_in_data_V_d1 = 8'd0;

assign img_in_data_V_i_address0_x = get_total_vegetation_U0_img_in_data_V_address0;

assign img_in_data_V_i_ce0_x = get_total_vegetation_U0_img_in_data_V_ce0;

assign img_in_data_V_i_d0 = 8'd0;

assign img_in_data_V_i_q0_x = 8'd0;

assign img_in_data_V_i_we0 = 1'b0;

assign img_in_data_V_t_address0_x = get_total_vegetation_1_U0_img_in_data_V_address0;

assign img_in_data_V_t_ce0_x = get_total_vegetation_1_U0_img_in_data_V_ce0;

assign img_in_data_V_t_d0 = 8'd0;

assign img_in_data_V_t_q0_x = 8'd0;

assign img_in_data_V_t_we0 = 1'b0;

assign img_in_data_V_we0 = 1'b0;

assign img_in_data_V_we1 = 1'b0;

endmodule //get_total_vegetation_3
