// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module xfOtsuKernel (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        p_hist_address0,
        p_hist_ce0,
        p_hist_q0,
        ap_return
);

parameter    ap_ST_fsm_state1 = 9'd1;
parameter    ap_ST_fsm_state2 = 9'd2;
parameter    ap_ST_fsm_pp0_stage0 = 9'd4;
parameter    ap_ST_fsm_state5 = 9'd8;
parameter    ap_ST_fsm_pp1_stage0 = 9'd16;
parameter    ap_ST_fsm_state8 = 9'd32;
parameter    ap_ST_fsm_pp2_stage0 = 9'd64;
parameter    ap_ST_fsm_pp2_stage1 = 9'd128;
parameter    ap_ST_fsm_state14 = 9'd256;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [7:0] p_hist_address0;
output   p_hist_ce0;
input  [31:0] p_hist_q0;
output  [7:0] ap_return;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg p_hist_ce0;

(* fsm_encoding = "none" *) reg   [8:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [8:0] i_0_reg_168;
reg   [31:0] i_op_assign_1_reg_179;
reg   [8:0] i_op_assign_reg_191;
reg   [31:0] i_op_assign_2_reg_203;
reg   [8:0] i_op_assign_3_reg_215;
wire  signed [7:0] sext_ln88_1_fu_497_p1;
reg  signed [7:0] sext_ln88_1_reg_1072;
wire    ap_CS_fsm_state2;
wire  signed [8:0] sext_ln89_1_fu_517_p1;
reg  signed [8:0] sext_ln89_1_reg_1078;
wire  signed [7:0] sext_ln89_2_fu_521_p1;
reg  signed [7:0] sext_ln89_2_reg_1083;
wire   [24:0] total_V_fu_539_p2;
reg   [24:0] total_V_reg_1088;
wire   [63:0] zext_ln1500_fu_545_p1;
reg   [63:0] zext_ln1500_reg_1094;
reg   [0:0] tmp_3_reg_1099;
wire   [63:0] zext_ln215_fu_557_p1;
reg   [63:0] zext_ln215_reg_1104;
wire   [76:0] rhs_V_fu_561_p1;
reg   [76:0] rhs_V_reg_1109;
reg   [0:0] tmp_4_reg_1114;
wire   [76:0] zext_ln1500_1_fu_573_p1;
reg   [76:0] zext_ln1500_1_reg_1119;
wire   [76:0] zext_ln1500_2_fu_587_p1;
reg   [76:0] zext_ln1500_2_reg_1124;
wire   [76:0] zext_ln1500_3_fu_601_p1;
reg   [76:0] zext_ln1500_3_reg_1129;
wire   [0:0] icmp_ln93_fu_605_p2;
reg   [0:0] icmp_ln93_reg_1134;
wire    ap_CS_fsm_pp0_stage0;
wire    ap_block_state3_pp0_stage0_iter0;
wire    ap_block_state4_pp0_stage0_iter1;
wire    ap_block_pp0_stage0_11001;
wire   [8:0] i_fu_611_p2;
reg    ap_enable_reg_pp0_iter0;
wire   [63:0] zext_ln96_fu_617_p1;
reg   [63:0] zext_ln96_reg_1143;
wire   [0:0] icmp_ln101_fu_695_p2;
reg   [0:0] icmp_ln101_reg_1153;
wire    ap_CS_fsm_pp1_stage0;
wire    ap_block_state6_pp1_stage0_iter0;
wire    ap_block_state7_pp1_stage0_iter1;
wire    ap_block_pp1_stage0_11001;
wire   [8:0] i_1_fu_701_p2;
reg   [8:0] i_1_reg_1157;
reg    ap_enable_reg_pp1_iter0;
wire   [31:0] sum_fu_726_p2;
reg    ap_enable_reg_pp1_iter1;
wire  signed [31:0] sext_ln115_fu_736_p1;
reg  signed [31:0] sext_ln115_reg_1205;
wire    ap_CS_fsm_state8;
wire   [63:0] zext_ln121_fu_740_p1;
reg   [63:0] zext_ln121_reg_1210;
wire   [63:0] zext_ln121_1_fu_743_p1;
reg   [63:0] zext_ln121_1_reg_1215;
wire   [63:0] zext_ln123_fu_747_p1;
reg   [63:0] zext_ln123_reg_1221;
wire   [63:0] zext_ln127_fu_769_p1;
reg   [63:0] zext_ln127_reg_1226;
wire   [0:0] icmp_ln108_fu_788_p2;
reg   [0:0] icmp_ln108_reg_1231;
wire    ap_CS_fsm_pp2_stage0;
wire    ap_block_state9_pp2_stage0_iter0;
wire    ap_block_state11_pp2_stage0_iter1;
wire    ap_block_state13_pp2_stage0_iter2;
wire    ap_block_pp2_stage0_11001;
reg   [0:0] icmp_ln108_reg_1231_pp2_iter1_reg;
wire   [8:0] i_2_fu_794_p2;
reg   [8:0] i_2_reg_1235;
reg    ap_enable_reg_pp2_iter0;
wire   [31:0] wB_fu_817_p2;
reg   [31:0] wB_reg_1245;
wire    ap_CS_fsm_pp2_stage1;
wire    ap_block_state10_pp2_stage1_iter0;
wire    ap_block_state12_pp2_stage1_iter1;
wire    ap_block_pp2_stage1_11001;
wire   [24:0] add_ln112_1_fu_823_p2;
reg   [24:0] add_ln112_1_reg_1250;
wire   [0:0] icmp_ln113_fu_829_p2;
reg   [0:0] icmp_ln113_reg_1256;
reg   [0:0] icmp_ln113_reg_1256_pp2_iter1_reg;
wire   [0:0] icmp_ln115_fu_840_p2;
reg   [0:0] icmp_ln115_reg_1260;
reg   [0:0] icmp_ln115_reg_1260_pp2_iter1_reg;
wire  signed [63:0] d_1_fu_917_p3;
reg  signed [63:0] d_1_reg_1264;
wire   [7:0] max_val_fu_925_p1;
reg   [7:0] max_val_reg_1270;
reg   [7:0] max_val_reg_1270_pp2_iter1_reg;
wire   [31:0] res_fu_951_p1;
reg   [31:0] res_reg_1275;
reg   [15:0] x_inv2_reg_1280;
reg   [31:0] val1_reg_1285;
reg    ap_enable_reg_pp2_iter1;
reg  signed [7:0] n1_reg_1290;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_pp0_exit_iter0_state3;
reg    ap_enable_reg_pp0_iter1;
wire    ap_CS_fsm_state5;
wire    ap_block_pp1_stage0_subdone;
reg    ap_condition_pp1_exit_iter0_state6;
wire    ap_block_pp2_stage1_subdone;
reg    ap_predicate_tran12to14_state10;
reg    ap_condition_pp2_exit_iter1_state12;
reg    ap_enable_reg_pp2_iter2;
reg   [7:0] HistArray_V_address0;
reg    HistArray_V_ce0;
reg    HistArray_V_we0;
reg   [32:0] HistArray_V_d0;
wire   [32:0] HistArray_V_q0;
reg    grp_Inverse_fu_227_ap_start;
wire    grp_Inverse_fu_227_ap_done;
wire    grp_Inverse_fu_227_ap_idle;
wire    grp_Inverse_fu_227_ap_ready;
reg   [15:0] grp_Inverse_fu_227_x;
reg   [5:0] grp_Inverse_fu_227_M;
reg   [7:0] grp_Inverse_fu_227_N_read;
wire   [31:0] grp_Inverse_fu_227_ap_return_0;
wire   [7:0] grp_Inverse_fu_227_ap_return_1;
reg    grp_Inverse_fu_239_ap_start;
wire    grp_Inverse_fu_239_ap_done;
wire    grp_Inverse_fu_239_ap_idle;
wire    grp_Inverse_fu_239_ap_ready;
wire   [31:0] grp_Inverse_fu_239_ap_return_0;
wire   [7:0] grp_Inverse_fu_239_ap_return_1;
wire    ap_block_pp1_stage0;
reg   [8:0] ap_phi_mux_i_op_assign_phi_fu_195_p4;
reg   [31:0] ap_phi_mux_i_op_assign_2_phi_fu_207_p4;
wire    ap_block_pp2_stage1;
reg   [8:0] ap_phi_mux_i_op_assign_3_phi_fu_219_p4;
wire    ap_block_pp2_stage0;
reg    grp_Inverse_fu_227_ap_start_reg;
reg    ap_predicate_op198_call_state11_state10;
reg    ap_predicate_op208_call_state12_state11;
wire    ap_block_pp0_stage0;
wire   [63:0] zext_ln104_fu_707_p1;
wire   [63:0] zext_ln112_fu_800_p1;
reg   [63:0] varMax_0_fu_100;
wire   [63:0] select_ln138_1_fu_1049_p3;
reg   [63:0] i_op_assign_4_fu_104;
wire  signed [63:0] sumB_fu_867_p2;
reg   [7:0] thresh_write_assign_fu_108;
wire   [7:0] select_ln138_fu_1042_p3;
wire    ap_CS_fsm_state14;
reg   [7:0] n2_1_fu_112;
reg   [7:0] n1_1_fu_116;
wire   [32:0] select_ln1500_fu_687_p3;
wire   [6:0] trunc_ln67_fu_277_p1;
wire   [6:0] add_ln67_fu_281_p2;
wire   [31:0] zext_ln67_fu_287_p1;
wire   [6:0] tmp_1_fu_297_p4;
wire   [7:0] and_ln_fu_307_p3;
wire   [7:0] sub_ln72_fu_321_p2;
wire   [31:0] zext_ln72_fu_327_p1;
wire   [0:0] icmp_ln65_fu_271_p2;
wire   [0:0] icmp_ln70_fu_315_p2;
wire   [0:0] xor_ln65_fu_337_p2;
wire   [31:0] wdt_1_fu_291_p2;
wire   [31:0] wdt_2_fu_331_p2;
wire   [0:0] and_ln70_fu_343_p2;
wire   [31:0] wdt_3_fu_349_p3;
wire   [6:0] trunc_ln77_fu_371_p1;
wire   [6:0] add_ln77_fu_375_p2;
wire   [31:0] zext_ln77_fu_381_p1;
wire   [6:0] tmp_2_fu_391_p4;
wire   [7:0] and_ln1_fu_401_p3;
wire   [7:0] sub_ln82_fu_415_p2;
wire   [31:0] zext_ln82_fu_421_p1;
wire   [0:0] icmp_ln75_fu_365_p2;
wire   [0:0] icmp_ln80_fu_409_p2;
wire   [0:0] xor_ln75_fu_431_p2;
wire   [31:0] hgt_1_fu_385_p2;
wire   [31:0] hgt_2_fu_425_p2;
wire   [0:0] and_ln80_fu_437_p2;
wire   [31:0] hgt_3_fu_443_p3;
wire   [31:0] wdt_4_fu_357_p3;
wire   [31:0] shl_ln88_fu_475_p2;
wire   [31:0] shl_ln88_1_fu_481_p2;
wire  signed [6:0] select_ln70_fu_459_p3;
wire   [31:0] add_ln88_fu_487_p2;
wire  signed [31:0] sext_ln88_fu_493_p1;
wire  signed [31:0] hgt_4_fu_451_p3;
wire  signed [6:0] select_ln80_fu_467_p3;
wire   [31:0] mul_ln89_fu_507_p2;
wire  signed [31:0] sext_ln89_fu_513_p1;
wire   [31:0] lshr_ln88_fu_501_p2;
wire   [31:0] lshr_ln89_fu_525_p2;
wire  signed [24:0] trunc_ln209_1_fu_535_p1;
wire  signed [24:0] trunc_ln209_fu_531_p1;
wire   [7:0] sub_ln1500_fu_577_p2;
wire  signed [31:0] sext_ln1500_fu_583_p1;
wire   [7:0] sub_ln1500_1_fu_591_p2;
wire  signed [31:0] sext_ln1500_1_fu_597_p1;
wire   [31:0] ret_V_fu_626_p0;
wire   [31:0] ret_V_fu_626_p1;
wire   [63:0] ret_V_fu_626_p2;
wire   [76:0] zext_ln1352_fu_631_p1;
wire   [63:0] lshr_ln1500_fu_635_p2;
wire   [76:0] shl_ln1500_fu_640_p2;
wire   [44:0] trunc_ln1500_1_fu_649_p1;
wire   [44:0] trunc_ln1500_fu_645_p1;
wire   [44:0] tmp2_V_fu_653_p3;
wire   [31:0] ret_V_1_fu_664_p0;
wire   [44:0] ret_V_1_fu_664_p1;
wire   [76:0] ret_V_1_fu_664_p2;
wire   [76:0] shl_ln1500_1_fu_674_p2;
wire   [76:0] lshr_ln1500_1_fu_669_p2;
wire   [32:0] trunc_ln1500_2_fu_679_p1;
wire   [32:0] trunc_ln1500_3_fu_683_p1;
wire  signed [31:0] trunc_ln104_fu_716_p1;
wire   [8:0] mul_ln104_fu_720_p1;
wire   [31:0] mul_ln104_fu_720_p2;
wire   [7:0] add_ln115_fu_732_p2;
wire   [7:0] add_ln127_fu_751_p2;
wire  signed [8:0] sext_ln127_fu_756_p1;
wire   [8:0] add_ln127_1_fu_760_p2;
wire  signed [31:0] sext_ln127_1_fu_765_p1;
wire   [31:0] trunc_ln112_fu_805_p1;
wire   [24:0] trunc_ln112_2_fu_813_p1;
wire   [24:0] trunc_ln112_1_fu_809_p1;
wire   [31:0] lshr_ln115_fu_835_p2;
wire   [8:0] ret_V_2_fu_857_p0;
wire   [32:0] ret_V_2_fu_857_p1;
wire   [41:0] ret_V_2_fu_857_p2;
wire   [63:0] zext_ln544_fu_863_p1;
wire   [24:0] mul_ln121_fu_873_p0;
wire   [63:0] mul_ln121_fu_873_p2;
wire   [31:0] mul_ln123_fu_887_p0;
wire   [31:0] mul_ln123_fu_887_p1;
wire   [63:0] mul_ln123_fu_887_p2;
wire   [63:0] a1_fu_878_p2;
wire   [63:0] c1_fu_892_p2;
wire   [63:0] d_fu_897_p2;
wire   [0:0] tmp_5_fu_903_p3;
wire   [63:0] sub_ln125_fu_911_p2;
wire   [63:0] mul_ln127_fu_942_p2;
wire   [63:0] ashr_ln127_fu_946_p2;
wire   [24:0] wF_fu_938_p2;
wire   [31:0] mul_ln135_fu_993_p0;
wire   [31:0] mul_ln135_fu_993_p1;
wire  signed [31:0] sext_ln135_fu_999_p1;
wire   [63:0] mul_ln135_fu_993_p2;
wire   [63:0] zext_ln135_2_fu_1002_p1;
wire   [31:0] mul_ln136_fu_1016_p0;
wire  signed [63:0] maxtmp_fu_1006_p2;
wire  signed [7:0] sext_ln136_fu_1022_p0;
wire  signed [31:0] sext_ln136_fu_1022_p1;
wire   [63:0] mul_ln136_fu_1016_p2;
wire   [63:0] zext_ln136_1_fu_1026_p1;
wire   [63:0] varMax_fu_1030_p2;
wire   [0:0] icmp_ln138_fu_1036_p2;
reg   [8:0] ap_NS_fsm;
wire    ap_block_pp2_stage0_subdone;
reg    ap_idle_pp0;
wire    ap_enable_pp0;
reg    ap_idle_pp1;
wire    ap_enable_pp1;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
wire   [31:0] mul_ln104_fu_720_p10;
wire   [63:0] mul_ln123_fu_887_p10;
wire   [63:0] mul_ln135_fu_993_p00;
wire   [63:0] mul_ln135_fu_993_p10;
wire   [63:0] mul_ln136_fu_1016_p00;
wire   [76:0] ret_V_1_fu_664_p10;
wire   [41:0] ret_V_2_fu_857_p00;
wire   [41:0] ret_V_2_fu_857_p10;
wire   [63:0] ret_V_fu_626_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 9'd1;
#0 ap_enable_reg_pp0_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter0 = 1'b0;
#0 ap_enable_reg_pp1_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 grp_Inverse_fu_227_ap_start_reg = 1'b0;
end

xfOtsuKernel_HistxdS #(
    .DataWidth( 33 ),
    .AddressRange( 256 ),
    .AddressWidth( 8 ))
HistArray_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(HistArray_V_address0),
    .ce0(HistArray_V_ce0),
    .we0(HistArray_V_we0),
    .d0(HistArray_V_d0),
    .q0(HistArray_V_q0)
);

Inverse grp_Inverse_fu_227(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_Inverse_fu_227_ap_start),
    .ap_done(grp_Inverse_fu_227_ap_done),
    .ap_idle(grp_Inverse_fu_227_ap_idle),
    .ap_ready(grp_Inverse_fu_227_ap_ready),
    .ap_ce(1'b1),
    .x(grp_Inverse_fu_227_x),
    .M(grp_Inverse_fu_227_M),
    .N_read(grp_Inverse_fu_227_N_read),
    .ap_return_0(grp_Inverse_fu_227_ap_return_0),
    .ap_return_1(grp_Inverse_fu_227_ap_return_1)
);

Inverse grp_Inverse_fu_239(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_Inverse_fu_239_ap_start),
    .ap_done(grp_Inverse_fu_239_ap_done),
    .ap_idle(grp_Inverse_fu_239_ap_idle),
    .ap_ready(grp_Inverse_fu_239_ap_ready),
    .ap_ce(1'b1),
    .x(16'd180),
    .M(6'd16),
    .N_read(8'd0),
    .ap_return_0(grp_Inverse_fu_239_ap_return_0),
    .ap_return_1(grp_Inverse_fu_239_ap_return_1)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_CS_fsm_pp0_stage0) & (1'b1 == ap_condition_pp0_exit_iter0_state3))) begin
            ap_enable_reg_pp0_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state2)) begin
            ap_enable_reg_pp0_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (1'b1 == ap_condition_pp0_exit_iter0_state3))) begin
            ap_enable_reg_pp0_iter1 <= (1'b1 ^ ap_condition_pp0_exit_iter0_state3);
        end else if ((1'b0 == ap_block_pp0_stage0_subdone)) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end else if ((1'b1 == ap_CS_fsm_state2)) begin
            ap_enable_reg_pp0_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state6) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
            ap_enable_reg_pp1_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state5)) begin
            ap_enable_reg_pp1_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp1_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp1_stage0_subdone) & (1'b1 == ap_condition_pp1_exit_iter0_state6))) begin
            ap_enable_reg_pp1_iter1 <= (1'b1 ^ ap_condition_pp1_exit_iter0_state6);
        end else if ((1'b0 == ap_block_pp1_stage0_subdone)) begin
            ap_enable_reg_pp1_iter1 <= ap_enable_reg_pp1_iter0;
        end else if ((1'b1 == ap_CS_fsm_state5)) begin
            ap_enable_reg_pp1_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage1_subdone) & (1'b1 == ap_CS_fsm_pp2_stage1) & (ap_predicate_tran12to14_state10 == 1'b1))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if ((1'b1 == ap_CS_fsm_state8)) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage1_subdone) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
            ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
        end else if (((1'b1 == ap_CS_fsm_state8) | ((1'b0 == ap_block_pp2_stage1_subdone) & (1'b1 == ap_condition_pp2_exit_iter1_state12) & (1'b1 == ap_CS_fsm_pp2_stage1)))) begin
            ap_enable_reg_pp2_iter1 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage1_subdone) & (1'b1 == ap_condition_pp2_exit_iter1_state12) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter0;
        end else if (((1'b0 == ap_block_pp2_stage1_subdone) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end else if ((1'b1 == ap_CS_fsm_state8)) begin
            ap_enable_reg_pp2_iter2 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_Inverse_fu_227_ap_start_reg <= 1'b0;
    end else begin
        if ((((1'b1 == ap_CS_fsm_pp2_stage1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage1_11001) & (ap_predicate_op198_call_state11_state10 == 1'b1)) | ((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_predicate_op208_call_state12_state11 == 1'b1) & (1'b0 == ap_block_pp2_stage0_11001)))) begin
            grp_Inverse_fu_227_ap_start_reg <= 1'b1;
        end else if ((grp_Inverse_fu_227_ap_ready == 1'b1)) begin
            grp_Inverse_fu_227_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln93_fu_605_p2 == 1'd0) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        i_0_reg_168 <= i_fu_611_p2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        i_0_reg_168 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        i_op_assign_1_reg_179 <= 32'd0;
    end else if (((icmp_ln101_reg_1153 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        i_op_assign_1_reg_179 <= sum_fu_726_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1_11001) & (((icmp_ln108_reg_1231_pp2_iter1_reg == 1'd0) & (icmp_ln113_reg_1256 == 1'd1)) | ((icmp_ln115_reg_1260 == 1'd0) & (icmp_ln108_reg_1231_pp2_iter1_reg == 1'd0))))) begin
        i_op_assign_2_reg_203 <= wB_reg_1245;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        i_op_assign_2_reg_203 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001) & (((icmp_ln108_reg_1231 == 1'd0) & (icmp_ln113_reg_1256 == 1'd1)) | ((icmp_ln115_reg_1260 == 1'd0) & (icmp_ln108_reg_1231 == 1'd0))))) begin
        i_op_assign_3_reg_215 <= i_2_reg_1235;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        i_op_assign_3_reg_215 <= 9'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln115_fu_840_p2 == 1'd0) & (icmp_ln113_fu_829_p2 == 1'd0) & (icmp_ln108_reg_1231 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage1_11001))) begin
        i_op_assign_4_fu_104 <= sumB_fu_867_p2;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        i_op_assign_4_fu_104 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        i_op_assign_reg_191 <= 9'd0;
    end else if (((icmp_ln101_reg_1153 == 1'd0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        i_op_assign_reg_191 <= i_1_reg_1157;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln115_reg_1260_pp2_iter1_reg == 1'd0) & (icmp_ln113_reg_1256_pp2_iter1_reg == 1'd0) & (ap_enable_reg_pp2_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        thresh_write_assign_fu_108 <= select_ln138_fu_1042_p3;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        thresh_write_assign_fu_108 <= 8'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln115_reg_1260_pp2_iter1_reg == 1'd0) & (icmp_ln113_reg_1256_pp2_iter1_reg == 1'd0) & (ap_enable_reg_pp2_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        varMax_0_fu_100 <= select_ln138_1_fu_1049_p3;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        varMax_0_fu_100 <= 64'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln108_reg_1231 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1_11001))) begin
        add_ln112_1_reg_1250 <= add_ln112_1_fu_823_p2;
        icmp_ln113_reg_1256 <= icmp_ln113_fu_829_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln115_fu_840_p2 == 1'd0) & (icmp_ln113_fu_829_p2 == 1'd0) & (icmp_ln108_reg_1231 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1_11001))) begin
        d_1_reg_1264 <= d_1_fu_917_p3;
        max_val_reg_1270 <= max_val_fu_925_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        i_1_reg_1157 <= i_1_fu_701_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        i_2_reg_1235 <= i_2_fu_794_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001))) begin
        icmp_ln101_reg_1153 <= icmp_ln101_fu_695_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        icmp_ln108_reg_1231 <= icmp_ln108_fu_788_p2;
        icmp_ln108_reg_1231_pp2_iter1_reg <= icmp_ln108_reg_1231;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1_11001))) begin
        icmp_ln113_reg_1256_pp2_iter1_reg <= icmp_ln113_reg_1256;
        icmp_ln115_reg_1260_pp2_iter1_reg <= icmp_ln115_reg_1260;
        max_val_reg_1270_pp2_iter1_reg <= max_val_reg_1270;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln113_fu_829_p2 == 1'd0) & (icmp_ln108_reg_1231 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1_11001))) begin
        icmp_ln115_reg_1260 <= icmp_ln115_fu_840_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln93_reg_1134 <= icmp_ln93_fu_605_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln115_reg_1260 == 1'd0) & (icmp_ln113_reg_1256 == 1'd0) & (icmp_ln108_reg_1231_pp2_iter1_reg == 1'd0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (1'b0 == ap_block_pp2_stage1_11001))) begin
        n1_1_fu_116 <= grp_Inverse_fu_227_ap_return_1;
        n1_reg_1290 <= grp_Inverse_fu_227_ap_return_1;
        val1_reg_1285 <= grp_Inverse_fu_227_ap_return_0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln115_reg_1260_pp2_iter1_reg == 1'd0) & (icmp_ln113_reg_1256_pp2_iter1_reg == 1'd0) & (ap_enable_reg_pp2_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        n2_1_fu_112 <= grp_Inverse_fu_227_ap_return_1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln115_reg_1260 == 1'd0) & (icmp_ln113_reg_1256 == 1'd0) & (icmp_ln108_reg_1231 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        res_reg_1275 <= res_fu_951_p1;
        x_inv2_reg_1280 <= {{wF_fu_938_p2[24:9]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        rhs_V_reg_1109[31 : 0] <= rhs_V_fu_561_p1[31 : 0];
        sext_ln88_1_reg_1072 <= sext_ln88_1_fu_497_p1;
        sext_ln89_1_reg_1078 <= sext_ln89_1_fu_517_p1;
        sext_ln89_2_reg_1083 <= sext_ln89_2_fu_521_p1;
        tmp_3_reg_1099 <= select_ln70_fu_459_p3[32'd6];
        tmp_4_reg_1114 <= select_ln80_fu_467_p3[32'd6];
        total_V_reg_1088 <= total_V_fu_539_p2;
        zext_ln1500_1_reg_1119[31 : 0] <= zext_ln1500_1_fu_573_p1[31 : 0];
        zext_ln1500_2_reg_1124[31 : 0] <= zext_ln1500_2_fu_587_p1[31 : 0];
        zext_ln1500_3_reg_1129[31 : 0] <= zext_ln1500_3_fu_601_p1[31 : 0];
        zext_ln1500_reg_1094[31 : 0] <= zext_ln1500_fu_545_p1[31 : 0];
        zext_ln215_reg_1104[31 : 0] <= zext_ln215_fu_557_p1[31 : 0];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        sext_ln115_reg_1205 <= sext_ln115_fu_736_p1;
        zext_ln121_1_reg_1215[31 : 0] <= zext_ln121_1_fu_743_p1[31 : 0];
        zext_ln121_reg_1210[24 : 0] <= zext_ln121_fu_740_p1[24 : 0];
        zext_ln123_reg_1221[31 : 0] <= zext_ln123_fu_747_p1[31 : 0];
        zext_ln127_reg_1226[31 : 0] <= zext_ln127_fu_769_p1[31 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln108_reg_1231 == 1'd0) & (1'b1 == ap_CS_fsm_pp2_stage1) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b0 == ap_block_pp2_stage1_11001))) begin
        wB_reg_1245 <= wB_fu_817_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln93_fu_605_p2 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        zext_ln96_reg_1143[8 : 0] <= zext_ln96_fu_617_p1[8 : 0];
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        HistArray_V_address0 = zext_ln112_fu_800_p1;
    end else if (((1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        HistArray_V_address0 = zext_ln104_fu_707_p1;
    end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        HistArray_V_address0 = zext_ln96_reg_1143;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        HistArray_V_address0 = 64'd0;
    end else begin
        HistArray_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)) | ((ap_enable_reg_pp2_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (1'b0 == ap_block_pp2_stage0_11001)) | ((ap_enable_reg_pp1_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0) & (1'b0 == ap_block_pp1_stage0_11001)))) begin
        HistArray_V_ce0 = 1'b1;
    end else begin
        HistArray_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
        HistArray_V_d0 = select_ln1500_fu_687_p3;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        HistArray_V_d0 = 33'd0;
    end else begin
        HistArray_V_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) | ((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln93_reg_1134 == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1)))) begin
        HistArray_V_we0 = 1'b1;
    end else begin
        HistArray_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln93_fu_605_p2 == 1'd1)) begin
        ap_condition_pp0_exit_iter0_state3 = 1'b1;
    end else begin
        ap_condition_pp0_exit_iter0_state3 = 1'b0;
    end
end

always @ (*) begin
    if ((icmp_ln101_fu_695_p2 == 1'd1)) begin
        ap_condition_pp1_exit_iter0_state6 = 1'b1;
    end else begin
        ap_condition_pp1_exit_iter0_state6 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter1 == 1'b1) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_condition_pp2_exit_iter1_state12 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter1_state12 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state14) | ((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter0 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp1_iter1 == 1'b0) & (ap_enable_reg_pp1_iter0 == 1'b0))) begin
        ap_idle_pp1 = 1'b1;
    end else begin
        ap_idle_pp1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter2 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage1) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (((icmp_ln108_reg_1231_pp2_iter1_reg == 1'd0) & (icmp_ln113_reg_1256 == 1'd1)) | ((icmp_ln115_reg_1260 == 1'd0) & (icmp_ln108_reg_1231_pp2_iter1_reg == 1'd0))))) begin
        ap_phi_mux_i_op_assign_2_phi_fu_207_p4 = wB_reg_1245;
    end else begin
        ap_phi_mux_i_op_assign_2_phi_fu_207_p4 = i_op_assign_2_reg_203;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0) & (((icmp_ln108_reg_1231 == 1'd0) & (icmp_ln113_reg_1256 == 1'd1)) | ((icmp_ln115_reg_1260 == 1'd0) & (icmp_ln108_reg_1231 == 1'd0))))) begin
        ap_phi_mux_i_op_assign_3_phi_fu_219_p4 = i_2_reg_1235;
    end else begin
        ap_phi_mux_i_op_assign_3_phi_fu_219_p4 = i_op_assign_3_reg_215;
    end
end

always @ (*) begin
    if (((icmp_ln101_reg_1153 == 1'd0) & (1'b0 == ap_block_pp1_stage0) & (ap_enable_reg_pp1_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp1_stage0))) begin
        ap_phi_mux_i_op_assign_phi_fu_195_p4 = i_1_reg_1157;
    end else begin
        ap_phi_mux_i_op_assign_phi_fu_195_p4 = i_op_assign_reg_191;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln115_reg_1260 == 1'd0) & (icmp_ln113_reg_1256 == 1'd0) & (icmp_ln108_reg_1231_pp2_iter1_reg == 1'd0) & (1'b0 == ap_block_pp2_stage1) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1)) | ((icmp_ln115_reg_1260 == 1'd0) & (icmp_ln113_reg_1256 == 1'd0) & (icmp_ln108_reg_1231 == 1'd0) & (1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0)))) begin
        grp_Inverse_fu_227_M = 6'd0;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_Inverse_fu_227_M = 6'd16;
    end else begin
        grp_Inverse_fu_227_M = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln115_reg_1260 == 1'd0) & (icmp_ln113_reg_1256 == 1'd0) & (icmp_ln108_reg_1231_pp2_iter1_reg == 1'd0) & (1'b0 == ap_block_pp2_stage1) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
        grp_Inverse_fu_227_N_read = n2_1_fu_112;
    end else if (((icmp_ln115_reg_1260 == 1'd0) & (icmp_ln113_reg_1256 == 1'd0) & (icmp_ln108_reg_1231 == 1'd0) & (1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        grp_Inverse_fu_227_N_read = n1_1_fu_116;
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_Inverse_fu_227_N_read = 8'd0;
    end else begin
        grp_Inverse_fu_227_N_read = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        grp_Inverse_fu_227_ap_start = 1'b1;
    end else begin
        grp_Inverse_fu_227_ap_start = grp_Inverse_fu_227_ap_start_reg;
    end
end

always @ (*) begin
    if (((icmp_ln115_reg_1260 == 1'd0) & (icmp_ln113_reg_1256 == 1'd0) & (icmp_ln108_reg_1231_pp2_iter1_reg == 1'd0) & (1'b0 == ap_block_pp2_stage1) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1))) begin
        grp_Inverse_fu_227_x = x_inv2_reg_1280;
    end else if (((icmp_ln115_reg_1260 == 1'd0) & (icmp_ln113_reg_1256 == 1'd0) & (icmp_ln108_reg_1231 == 1'd0) & (1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        grp_Inverse_fu_227_x = {{add_ln112_1_reg_1250[24:9]}};
    end else if ((1'b1 == ap_CS_fsm_state1)) begin
        grp_Inverse_fu_227_x = 16'd320;
    end else begin
        grp_Inverse_fu_227_x = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
        grp_Inverse_fu_239_ap_start = 1'b1;
    end else begin
        grp_Inverse_fu_239_ap_start = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        p_hist_ce0 = 1'b1;
    end else begin
        p_hist_ce0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((1'b1 == ap_CS_fsm_state1) & (ap_start == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
        end
        ap_ST_fsm_pp0_stage0 : begin
            if (~((icmp_ln93_fu_605_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if (((icmp_ln93_fu_605_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_pp1_stage0;
        end
        ap_ST_fsm_pp1_stage0 : begin
            if (~((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln101_fu_695_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end else if (((1'b0 == ap_block_pp1_stage0_subdone) & (ap_enable_reg_pp1_iter0 == 1'b1) & (icmp_ln101_fu_695_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_pp2_stage0;
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_pp2_stage1 : begin
            if ((~((1'b0 == ap_block_pp2_stage1_subdone) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (ap_enable_reg_pp2_iter0 == 1'b0)) & (1'b0 == ap_block_pp2_stage1_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if (((1'b0 == ap_block_pp2_stage1_subdone) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage1) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage1;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a1_fu_878_p2 = mul_ln121_fu_873_p2 >> zext_ln121_1_reg_1215;

assign add_ln112_1_fu_823_p2 = (trunc_ln112_2_fu_813_p1 + trunc_ln112_1_fu_809_p1);

assign add_ln115_fu_732_p2 = ($signed(sext_ln89_2_reg_1083) + $signed(sext_ln88_1_reg_1072));

assign add_ln127_1_fu_760_p2 = ($signed(sext_ln127_fu_756_p1) + $signed(sext_ln89_1_reg_1078));

assign add_ln127_fu_751_p2 = ($signed(sext_ln88_1_reg_1072) + $signed(8'd10));

assign add_ln67_fu_281_p2 = ($signed(7'd104) + $signed(trunc_ln67_fu_277_p1));

assign add_ln77_fu_375_p2 = ($signed(7'd104) + $signed(trunc_ln77_fu_371_p1));

assign add_ln88_fu_487_p2 = (shl_ln88_fu_475_p2 + shl_ln88_1_fu_481_p2);

assign and_ln1_fu_401_p3 = {{tmp_2_fu_391_p4}, {1'd0}};

assign and_ln70_fu_343_p2 = (xor_ln65_fu_337_p2 & icmp_ln70_fu_315_p2);

assign and_ln80_fu_437_p2 = (xor_ln75_fu_431_p2 & icmp_ln80_fu_409_p2);

assign and_ln_fu_307_p3 = {{tmp_1_fu_297_p4}, {1'd0}};

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp1_stage0 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp2_stage1 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd8];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd5];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp1_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp2_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp2_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp2_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp2_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp2_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp1_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp1_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_enable_pp1 = (ap_idle_pp1 ^ 1'b1);

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

always @ (*) begin
    ap_predicate_op198_call_state11_state10 = ((icmp_ln115_fu_840_p2 == 1'd0) & (icmp_ln113_fu_829_p2 == 1'd0) & (icmp_ln108_reg_1231 == 1'd0));
end

always @ (*) begin
    ap_predicate_op208_call_state12_state11 = ((icmp_ln115_reg_1260 == 1'd0) & (icmp_ln113_reg_1256 == 1'd0) & (icmp_ln108_reg_1231 == 1'd0));
end

always @ (*) begin
    ap_predicate_tran12to14_state10 = ((icmp_ln108_reg_1231 == 1'd1) | ((icmp_ln113_fu_829_p2 == 1'd0) & (icmp_ln115_fu_840_p2 == 1'd1)));
end

assign ap_return = thresh_write_assign_fu_108;

assign ashr_ln127_fu_946_p2 = $signed(mul_ln127_fu_942_p2) >>> zext_ln127_reg_1226;

assign c1_fu_892_p2 = mul_ln123_fu_887_p2 >> zext_ln121_1_reg_1215;

assign d_1_fu_917_p3 = ((tmp_5_fu_903_p3[0:0] === 1'b1) ? sub_ln125_fu_911_p2 : d_fu_897_p2);

assign d_fu_897_p2 = (a1_fu_878_p2 - c1_fu_892_p2);

assign hgt_1_fu_385_p2 = grp_Inverse_fu_239_ap_return_0 >> zext_ln77_fu_381_p1;

assign hgt_2_fu_425_p2 = grp_Inverse_fu_239_ap_return_0 << zext_ln82_fu_421_p1;

assign hgt_3_fu_443_p3 = ((icmp_ln75_fu_365_p2[0:0] === 1'b1) ? hgt_1_fu_385_p2 : hgt_2_fu_425_p2);

assign hgt_4_fu_451_p3 = ((and_ln80_fu_437_p2[0:0] === 1'b1) ? grp_Inverse_fu_239_ap_return_0 : hgt_3_fu_443_p3);

assign i_1_fu_701_p2 = (ap_phi_mux_i_op_assign_phi_fu_195_p4 + 9'd1);

assign i_2_fu_794_p2 = (ap_phi_mux_i_op_assign_3_phi_fu_219_p4 + 9'd1);

assign i_fu_611_p2 = (i_0_reg_168 + 9'd1);

assign icmp_ln101_fu_695_p2 = ((ap_phi_mux_i_op_assign_phi_fu_195_p4 == 9'd256) ? 1'b1 : 1'b0);

assign icmp_ln108_fu_788_p2 = ((ap_phi_mux_i_op_assign_3_phi_fu_219_p4 == 9'd256) ? 1'b1 : 1'b0);

assign icmp_ln113_fu_829_p2 = ((wB_fu_817_p2 == 32'd0) ? 1'b1 : 1'b0);

assign icmp_ln115_fu_840_p2 = ((lshr_ln115_fu_835_p2 == 32'd1) ? 1'b1 : 1'b0);

assign icmp_ln138_fu_1036_p2 = ((varMax_fu_1030_p2 > varMax_0_fu_100) ? 1'b1 : 1'b0);

assign icmp_ln65_fu_271_p2 = (($signed(grp_Inverse_fu_227_ap_return_1) > $signed(8'd24)) ? 1'b1 : 1'b0);

assign icmp_ln70_fu_315_p2 = ((and_ln_fu_307_p3 == grp_Inverse_fu_227_ap_return_1) ? 1'b1 : 1'b0);

assign icmp_ln75_fu_365_p2 = (($signed(grp_Inverse_fu_239_ap_return_1) > $signed(8'd24)) ? 1'b1 : 1'b0);

assign icmp_ln80_fu_409_p2 = ((and_ln1_fu_401_p3 == grp_Inverse_fu_239_ap_return_1) ? 1'b1 : 1'b0);

assign icmp_ln93_fu_605_p2 = ((i_0_reg_168 == 9'd256) ? 1'b1 : 1'b0);

assign lshr_ln115_fu_835_p2 = wB_fu_817_p2 >> sext_ln115_reg_1205;

assign lshr_ln1500_1_fu_669_p2 = ret_V_1_fu_664_p2 >> zext_ln1500_1_reg_1119;

assign lshr_ln1500_fu_635_p2 = ret_V_fu_626_p2 >> zext_ln215_reg_1104;

assign lshr_ln88_fu_501_p2 = add_ln88_fu_487_p2 >> sext_ln88_fu_493_p1;

assign lshr_ln89_fu_525_p2 = mul_ln89_fu_507_p2 >> sext_ln89_fu_513_p1;

assign max_val_fu_925_p1 = i_op_assign_3_reg_215[7:0];

assign maxtmp_fu_1006_p2 = mul_ln135_fu_993_p2 >> zext_ln135_2_fu_1002_p1;

assign mul_ln104_fu_720_p1 = mul_ln104_fu_720_p10;

assign mul_ln104_fu_720_p10 = i_op_assign_reg_191;

assign mul_ln104_fu_720_p2 = ($signed(trunc_ln104_fu_716_p1) * $signed({{1'b0}, {mul_ln104_fu_720_p1}}));

assign mul_ln121_fu_873_p0 = zext_ln121_reg_1210;

assign mul_ln121_fu_873_p2 = ($signed({{1'b0}, {mul_ln121_fu_873_p0}}) * $signed(sumB_fu_867_p2));

assign mul_ln123_fu_887_p0 = zext_ln123_reg_1221;

assign mul_ln123_fu_887_p1 = mul_ln123_fu_887_p10;

assign mul_ln123_fu_887_p10 = wB_fu_817_p2;

assign mul_ln123_fu_887_p2 = (mul_ln123_fu_887_p0 * mul_ln123_fu_887_p1);

assign mul_ln127_fu_942_p2 = ($signed(d_1_reg_1264) * $signed(d_1_reg_1264));

assign mul_ln135_fu_993_p0 = mul_ln135_fu_993_p00;

assign mul_ln135_fu_993_p00 = res_reg_1275;

assign mul_ln135_fu_993_p1 = mul_ln135_fu_993_p10;

assign mul_ln135_fu_993_p10 = val1_reg_1285;

assign mul_ln135_fu_993_p2 = (mul_ln135_fu_993_p0 * mul_ln135_fu_993_p1);

assign mul_ln136_fu_1016_p0 = mul_ln136_fu_1016_p00;

assign mul_ln136_fu_1016_p00 = grp_Inverse_fu_227_ap_return_0;

assign mul_ln136_fu_1016_p2 = ($signed({{1'b0}, {mul_ln136_fu_1016_p0}}) * $signed(maxtmp_fu_1006_p2));

assign mul_ln89_fu_507_p2 = ($signed({{1'b0}, {32'd180}}) * $signed(hgt_4_fu_451_p3));

assign p_hist_address0 = zext_ln96_fu_617_p1;

assign res_fu_951_p1 = ashr_ln127_fu_946_p2[31:0];

assign ret_V_1_fu_664_p0 = rhs_V_reg_1109;

assign ret_V_1_fu_664_p1 = ret_V_1_fu_664_p10;

assign ret_V_1_fu_664_p10 = tmp2_V_fu_653_p3;

assign ret_V_1_fu_664_p2 = (ret_V_1_fu_664_p0 * ret_V_1_fu_664_p1);

assign ret_V_2_fu_857_p0 = ret_V_2_fu_857_p00;

assign ret_V_2_fu_857_p00 = i_op_assign_3_reg_215;

assign ret_V_2_fu_857_p1 = ret_V_2_fu_857_p10;

assign ret_V_2_fu_857_p10 = HistArray_V_q0;

assign ret_V_2_fu_857_p2 = (ret_V_2_fu_857_p0 * ret_V_2_fu_857_p1);

assign ret_V_fu_626_p0 = zext_ln1500_reg_1094;

assign ret_V_fu_626_p1 = ret_V_fu_626_p10;

assign ret_V_fu_626_p10 = p_hist_q0;

assign ret_V_fu_626_p2 = (ret_V_fu_626_p0 * ret_V_fu_626_p1);

assign rhs_V_fu_561_p1 = $unsigned(hgt_4_fu_451_p3);

assign select_ln138_1_fu_1049_p3 = ((icmp_ln138_fu_1036_p2[0:0] === 1'b1) ? varMax_fu_1030_p2 : varMax_0_fu_100);

assign select_ln138_fu_1042_p3 = ((icmp_ln138_fu_1036_p2[0:0] === 1'b1) ? max_val_reg_1270_pp2_iter1_reg : thresh_write_assign_fu_108);

assign select_ln1500_fu_687_p3 = ((tmp_4_reg_1114[0:0] === 1'b1) ? trunc_ln1500_2_fu_679_p1 : trunc_ln1500_3_fu_683_p1);

assign select_ln70_fu_459_p3 = ((and_ln70_fu_343_p2[0:0] === 1'b1) ? tmp_1_fu_297_p4 : 7'd12);

assign select_ln80_fu_467_p3 = ((and_ln80_fu_437_p2[0:0] === 1'b1) ? tmp_2_fu_391_p4 : 7'd12);

assign sext_ln115_fu_736_p1 = $signed(add_ln115_fu_732_p2);

assign sext_ln127_1_fu_765_p1 = $signed(add_ln127_1_fu_760_p2);

assign sext_ln127_fu_756_p1 = $signed(add_ln127_fu_751_p2);

assign sext_ln135_fu_999_p1 = n1_reg_1290;

assign sext_ln136_fu_1022_p0 = grp_Inverse_fu_227_ap_return_1;

assign sext_ln136_fu_1022_p1 = sext_ln136_fu_1022_p0;

assign sext_ln1500_1_fu_597_p1 = $signed(sub_ln1500_1_fu_591_p2);

assign sext_ln1500_fu_583_p1 = $signed(sub_ln1500_fu_577_p2);

assign sext_ln88_1_fu_497_p1 = select_ln70_fu_459_p3;

assign sext_ln88_fu_493_p1 = select_ln70_fu_459_p3;

assign sext_ln89_1_fu_517_p1 = select_ln80_fu_467_p3;

assign sext_ln89_2_fu_521_p1 = select_ln80_fu_467_p3;

assign sext_ln89_fu_513_p1 = select_ln80_fu_467_p3;

assign shl_ln1500_1_fu_674_p2 = ret_V_1_fu_664_p2 << zext_ln1500_2_reg_1124;

assign shl_ln1500_fu_640_p2 = zext_ln1352_fu_631_p1 << zext_ln1500_3_reg_1129;

assign shl_ln88_1_fu_481_p2 = wdt_4_fu_357_p3 << 32'd6;

assign shl_ln88_fu_475_p2 = wdt_4_fu_357_p3 << 32'd8;

assign sub_ln125_fu_911_p2 = (64'd0 - d_fu_897_p2);

assign sub_ln1500_1_fu_591_p2 = ($signed(8'd0) - $signed(sext_ln88_1_fu_497_p1));

assign sub_ln1500_fu_577_p2 = ($signed(8'd0) - $signed(sext_ln89_2_fu_521_p1));

assign sub_ln72_fu_321_p2 = (8'd24 - grp_Inverse_fu_227_ap_return_1);

assign sub_ln82_fu_415_p2 = (8'd24 - grp_Inverse_fu_239_ap_return_1);

assign sumB_fu_867_p2 = (zext_ln544_fu_863_p1 + i_op_assign_4_fu_104);

assign sum_fu_726_p2 = (mul_ln104_fu_720_p2 + i_op_assign_1_reg_179);

assign tmp2_V_fu_653_p3 = ((tmp_3_reg_1099[0:0] === 1'b1) ? trunc_ln1500_1_fu_649_p1 : trunc_ln1500_fu_645_p1);

assign tmp_1_fu_297_p4 = {{grp_Inverse_fu_227_ap_return_1[7:1]}};

assign tmp_2_fu_391_p4 = {{grp_Inverse_fu_239_ap_return_1[7:1]}};

assign tmp_5_fu_903_p3 = d_fu_897_p2[32'd63];

assign total_V_fu_539_p2 = ($signed(trunc_ln209_1_fu_535_p1) * $signed(trunc_ln209_fu_531_p1));

assign trunc_ln104_fu_716_p1 = HistArray_V_q0[31:0];

assign trunc_ln112_1_fu_809_p1 = HistArray_V_q0[24:0];

assign trunc_ln112_2_fu_813_p1 = ap_phi_mux_i_op_assign_2_phi_fu_207_p4[24:0];

assign trunc_ln112_fu_805_p1 = HistArray_V_q0[31:0];

assign trunc_ln1500_1_fu_649_p1 = shl_ln1500_fu_640_p2[44:0];

assign trunc_ln1500_2_fu_679_p1 = shl_ln1500_1_fu_674_p2[32:0];

assign trunc_ln1500_3_fu_683_p1 = lshr_ln1500_1_fu_669_p2[32:0];

assign trunc_ln1500_fu_645_p1 = lshr_ln1500_fu_635_p2[44:0];

assign trunc_ln209_1_fu_535_p1 = lshr_ln89_fu_525_p2[24:0];

assign trunc_ln209_fu_531_p1 = lshr_ln88_fu_501_p2[24:0];

assign trunc_ln67_fu_277_p1 = grp_Inverse_fu_227_ap_return_1[6:0];

assign trunc_ln77_fu_371_p1 = grp_Inverse_fu_239_ap_return_1[6:0];

assign varMax_fu_1030_p2 = mul_ln136_fu_1016_p2 >> zext_ln136_1_fu_1026_p1;

assign wB_fu_817_p2 = (trunc_ln112_fu_805_p1 + ap_phi_mux_i_op_assign_2_phi_fu_207_p4);

assign wF_fu_938_p2 = (total_V_reg_1088 - add_ln112_1_reg_1250);

assign wdt_1_fu_291_p2 = grp_Inverse_fu_227_ap_return_0 >> zext_ln67_fu_287_p1;

assign wdt_2_fu_331_p2 = grp_Inverse_fu_227_ap_return_0 << zext_ln72_fu_327_p1;

assign wdt_3_fu_349_p3 = ((icmp_ln65_fu_271_p2[0:0] === 1'b1) ? wdt_1_fu_291_p2 : wdt_2_fu_331_p2);

assign wdt_4_fu_357_p3 = ((and_ln70_fu_343_p2[0:0] === 1'b1) ? grp_Inverse_fu_227_ap_return_0 : wdt_3_fu_349_p3);

assign xor_ln65_fu_337_p2 = (icmp_ln65_fu_271_p2 ^ 1'd1);

assign xor_ln75_fu_431_p2 = (icmp_ln75_fu_365_p2 ^ 1'd1);

assign zext_ln104_fu_707_p1 = ap_phi_mux_i_op_assign_phi_fu_195_p4;

assign zext_ln112_fu_800_p1 = ap_phi_mux_i_op_assign_3_phi_fu_219_p4;

assign zext_ln121_1_fu_743_p1 = $unsigned(sext_ln115_fu_736_p1);

assign zext_ln121_fu_740_p1 = total_V_reg_1088;

assign zext_ln123_fu_747_p1 = i_op_assign_1_reg_179;

assign zext_ln127_fu_769_p1 = $unsigned(sext_ln127_1_fu_765_p1);

assign zext_ln1352_fu_631_p1 = ret_V_fu_626_p2;

assign zext_ln135_2_fu_1002_p1 = $unsigned(sext_ln135_fu_999_p1);

assign zext_ln136_1_fu_1026_p1 = $unsigned(sext_ln136_fu_1022_p1);

assign zext_ln1500_1_fu_573_p1 = $unsigned(sext_ln89_fu_513_p1);

assign zext_ln1500_2_fu_587_p1 = $unsigned(sext_ln1500_fu_583_p1);

assign zext_ln1500_3_fu_601_p1 = $unsigned(sext_ln1500_1_fu_597_p1);

assign zext_ln1500_fu_545_p1 = wdt_4_fu_357_p3;

assign zext_ln215_fu_557_p1 = $unsigned(sext_ln88_fu_493_p1);

assign zext_ln544_fu_863_p1 = ret_V_2_fu_857_p2;

assign zext_ln67_fu_287_p1 = add_ln67_fu_281_p2;

assign zext_ln72_fu_327_p1 = sub_ln72_fu_321_p2;

assign zext_ln77_fu_381_p1 = add_ln77_fu_375_p2;

assign zext_ln82_fu_421_p1 = sub_ln82_fu_415_p2;

assign zext_ln96_fu_617_p1 = i_0_reg_168;

always @ (posedge ap_clk) begin
    zext_ln1500_reg_1094[63:32] <= 32'b00000000000000000000000000000000;
    zext_ln215_reg_1104[63:32] <= 32'b00000000000000000000000000000000;
    rhs_V_reg_1109[76:32] <= 45'b000000000000000000000000000000000000000000000;
    zext_ln1500_1_reg_1119[76:32] <= 45'b000000000000000000000000000000000000000000000;
    zext_ln1500_2_reg_1124[76:32] <= 45'b000000000000000000000000000000000000000000000;
    zext_ln1500_3_reg_1129[76:32] <= 45'b000000000000000000000000000000000000000000000;
    zext_ln96_reg_1143[63:9] <= 55'b0000000000000000000000000000000000000000000000000000000;
    zext_ln121_reg_1210[63:25] <= 39'b000000000000000000000000000000000000000;
    zext_ln121_1_reg_1215[63:32] <= 32'b00000000000000000000000000000000;
    zext_ln123_reg_1221[63:32] <= 32'b00000000000000000000000000000000;
    zext_ln127_reg_1226[63:32] <= 32'b00000000000000000000000000000000;
end

endmodule //xfOtsuKernel
