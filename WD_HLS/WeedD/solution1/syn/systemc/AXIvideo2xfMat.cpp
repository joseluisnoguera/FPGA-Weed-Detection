// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "AXIvideo2xfMat.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic AXIvideo2xfMat::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic AXIvideo2xfMat::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<8> AXIvideo2xfMat::ap_ST_fsm_state1 = "1";
const sc_lv<8> AXIvideo2xfMat::ap_ST_fsm_state2 = "10";
const sc_lv<8> AXIvideo2xfMat::ap_ST_fsm_state3 = "100";
const sc_lv<8> AXIvideo2xfMat::ap_ST_fsm_state4 = "1000";
const sc_lv<8> AXIvideo2xfMat::ap_ST_fsm_pp1_stage0 = "10000";
const sc_lv<8> AXIvideo2xfMat::ap_ST_fsm_state7 = "100000";
const sc_lv<8> AXIvideo2xfMat::ap_ST_fsm_state8 = "1000000";
const sc_lv<8> AXIvideo2xfMat::ap_ST_fsm_state9 = "10000000";
const sc_lv<32> AXIvideo2xfMat::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool AXIvideo2xfMat::ap_const_boolean_1 = true;
const sc_lv<32> AXIvideo2xfMat::ap_const_lv32_1 = "1";
const sc_lv<32> AXIvideo2xfMat::ap_const_lv32_4 = "100";
const bool AXIvideo2xfMat::ap_const_boolean_0 = false;
const sc_lv<1> AXIvideo2xfMat::ap_const_lv1_1 = "1";
const sc_lv<1> AXIvideo2xfMat::ap_const_lv1_0 = "0";
const sc_lv<32> AXIvideo2xfMat::ap_const_lv32_6 = "110";
const sc_lv<32> AXIvideo2xfMat::ap_const_lv32_3 = "11";
const sc_lv<32> AXIvideo2xfMat::ap_const_lv32_7 = "111";
const sc_lv<32> AXIvideo2xfMat::ap_const_lv32_2 = "10";
const sc_lv<10> AXIvideo2xfMat::ap_const_lv10_0 = "0000000000";
const sc_lv<11> AXIvideo2xfMat::ap_const_lv11_0 = "00000000000";
const sc_lv<32> AXIvideo2xfMat::ap_const_lv32_5 = "101";
const sc_lv<10> AXIvideo2xfMat::ap_const_lv10_2D0 = "1011010000";
const sc_lv<10> AXIvideo2xfMat::ap_const_lv10_1 = "1";
const sc_lv<11> AXIvideo2xfMat::ap_const_lv11_500 = "10100000000";
const sc_lv<11> AXIvideo2xfMat::ap_const_lv11_1 = "1";

AXIvideo2xfMat::AXIvideo2xfMat(sc_module_name name) : sc_module(name), mVcdFile(0) {
    regslice_both_AXI_video_strm_V_data_V_U = new regslice_both<32>("regslice_both_AXI_video_strm_V_data_V_U");
    regslice_both_AXI_video_strm_V_data_V_U->ap_clk(ap_clk);
    regslice_both_AXI_video_strm_V_data_V_U->ap_rst(ap_rst);
    regslice_both_AXI_video_strm_V_data_V_U->data_in(stream_in_TDATA);
    regslice_both_AXI_video_strm_V_data_V_U->vld_in(stream_in_TVALID);
    regslice_both_AXI_video_strm_V_data_V_U->ack_in(regslice_both_AXI_video_strm_V_data_V_U_ack_in);
    regslice_both_AXI_video_strm_V_data_V_U->data_out(stream_in_TDATA_int);
    regslice_both_AXI_video_strm_V_data_V_U->vld_out(stream_in_TVALID_int);
    regslice_both_AXI_video_strm_V_data_V_U->ack_out(stream_in_TREADY_int);
    regslice_both_AXI_video_strm_V_data_V_U->apdone_blk(regslice_both_AXI_video_strm_V_data_V_U_apdone_blk);
    regslice_both_AXI_video_strm_V_keep_V_U = new regslice_both<4>("regslice_both_AXI_video_strm_V_keep_V_U");
    regslice_both_AXI_video_strm_V_keep_V_U->ap_clk(ap_clk);
    regslice_both_AXI_video_strm_V_keep_V_U->ap_rst(ap_rst);
    regslice_both_AXI_video_strm_V_keep_V_U->data_in(stream_in_TKEEP);
    regslice_both_AXI_video_strm_V_keep_V_U->vld_in(stream_in_TVALID);
    regslice_both_AXI_video_strm_V_keep_V_U->ack_in(regslice_both_AXI_video_strm_V_keep_V_U_ack_in);
    regslice_both_AXI_video_strm_V_keep_V_U->data_out(stream_in_TKEEP_int);
    regslice_both_AXI_video_strm_V_keep_V_U->vld_out(regslice_both_AXI_video_strm_V_keep_V_U_vld_out);
    regslice_both_AXI_video_strm_V_keep_V_U->ack_out(stream_in_TREADY_int);
    regslice_both_AXI_video_strm_V_keep_V_U->apdone_blk(regslice_both_AXI_video_strm_V_keep_V_U_apdone_blk);
    regslice_both_AXI_video_strm_V_strb_V_U = new regslice_both<4>("regslice_both_AXI_video_strm_V_strb_V_U");
    regslice_both_AXI_video_strm_V_strb_V_U->ap_clk(ap_clk);
    regslice_both_AXI_video_strm_V_strb_V_U->ap_rst(ap_rst);
    regslice_both_AXI_video_strm_V_strb_V_U->data_in(stream_in_TSTRB);
    regslice_both_AXI_video_strm_V_strb_V_U->vld_in(stream_in_TVALID);
    regslice_both_AXI_video_strm_V_strb_V_U->ack_in(regslice_both_AXI_video_strm_V_strb_V_U_ack_in);
    regslice_both_AXI_video_strm_V_strb_V_U->data_out(stream_in_TSTRB_int);
    regslice_both_AXI_video_strm_V_strb_V_U->vld_out(regslice_both_AXI_video_strm_V_strb_V_U_vld_out);
    regslice_both_AXI_video_strm_V_strb_V_U->ack_out(stream_in_TREADY_int);
    regslice_both_AXI_video_strm_V_strb_V_U->apdone_blk(regslice_both_AXI_video_strm_V_strb_V_U_apdone_blk);
    regslice_both_AXI_video_strm_V_user_V_U = new regslice_both<1>("regslice_both_AXI_video_strm_V_user_V_U");
    regslice_both_AXI_video_strm_V_user_V_U->ap_clk(ap_clk);
    regslice_both_AXI_video_strm_V_user_V_U->ap_rst(ap_rst);
    regslice_both_AXI_video_strm_V_user_V_U->data_in(stream_in_TUSER);
    regslice_both_AXI_video_strm_V_user_V_U->vld_in(stream_in_TVALID);
    regslice_both_AXI_video_strm_V_user_V_U->ack_in(regslice_both_AXI_video_strm_V_user_V_U_ack_in);
    regslice_both_AXI_video_strm_V_user_V_U->data_out(stream_in_TUSER_int);
    regslice_both_AXI_video_strm_V_user_V_U->vld_out(regslice_both_AXI_video_strm_V_user_V_U_vld_out);
    regslice_both_AXI_video_strm_V_user_V_U->ack_out(stream_in_TREADY_int);
    regslice_both_AXI_video_strm_V_user_V_U->apdone_blk(regslice_both_AXI_video_strm_V_user_V_U_apdone_blk);
    regslice_both_AXI_video_strm_V_last_V_U = new regslice_both<1>("regslice_both_AXI_video_strm_V_last_V_U");
    regslice_both_AXI_video_strm_V_last_V_U->ap_clk(ap_clk);
    regslice_both_AXI_video_strm_V_last_V_U->ap_rst(ap_rst);
    regslice_both_AXI_video_strm_V_last_V_U->data_in(stream_in_TLAST);
    regslice_both_AXI_video_strm_V_last_V_U->vld_in(stream_in_TVALID);
    regslice_both_AXI_video_strm_V_last_V_U->ack_in(regslice_both_AXI_video_strm_V_last_V_U_ack_in);
    regslice_both_AXI_video_strm_V_last_V_U->data_out(stream_in_TLAST_int);
    regslice_both_AXI_video_strm_V_last_V_U->vld_out(regslice_both_AXI_video_strm_V_last_V_U_vld_out);
    regslice_both_AXI_video_strm_V_last_V_U->ack_out(stream_in_TREADY_int);
    regslice_both_AXI_video_strm_V_last_V_U->apdone_blk(regslice_both_AXI_video_strm_V_last_V_U_apdone_blk);
    regslice_both_AXI_video_strm_V_id_V_U = new regslice_both<1>("regslice_both_AXI_video_strm_V_id_V_U");
    regslice_both_AXI_video_strm_V_id_V_U->ap_clk(ap_clk);
    regslice_both_AXI_video_strm_V_id_V_U->ap_rst(ap_rst);
    regslice_both_AXI_video_strm_V_id_V_U->data_in(stream_in_TID);
    regslice_both_AXI_video_strm_V_id_V_U->vld_in(stream_in_TVALID);
    regslice_both_AXI_video_strm_V_id_V_U->ack_in(regslice_both_AXI_video_strm_V_id_V_U_ack_in);
    regslice_both_AXI_video_strm_V_id_V_U->data_out(stream_in_TID_int);
    regslice_both_AXI_video_strm_V_id_V_U->vld_out(regslice_both_AXI_video_strm_V_id_V_U_vld_out);
    regslice_both_AXI_video_strm_V_id_V_U->ack_out(stream_in_TREADY_int);
    regslice_both_AXI_video_strm_V_id_V_U->apdone_blk(regslice_both_AXI_video_strm_V_id_V_U_apdone_blk);
    regslice_both_AXI_video_strm_V_dest_V_U = new regslice_both<1>("regslice_both_AXI_video_strm_V_dest_V_U");
    regslice_both_AXI_video_strm_V_dest_V_U->ap_clk(ap_clk);
    regslice_both_AXI_video_strm_V_dest_V_U->ap_rst(ap_rst);
    regslice_both_AXI_video_strm_V_dest_V_U->data_in(stream_in_TDEST);
    regslice_both_AXI_video_strm_V_dest_V_U->vld_in(stream_in_TVALID);
    regslice_both_AXI_video_strm_V_dest_V_U->ack_in(regslice_both_AXI_video_strm_V_dest_V_U_ack_in);
    regslice_both_AXI_video_strm_V_dest_V_U->data_out(stream_in_TDEST_int);
    regslice_both_AXI_video_strm_V_dest_V_U->vld_out(regslice_both_AXI_video_strm_V_dest_V_U_vld_out);
    regslice_both_AXI_video_strm_V_dest_V_U->ack_out(stream_in_TREADY_int);
    regslice_both_AXI_video_strm_V_dest_V_U->apdone_blk(regslice_both_AXI_video_strm_V_dest_V_U_apdone_blk);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp1_stage0);

    SC_METHOD(thread_ap_block_pp1_stage0_01001);
    sensitive << ( img_data_V_full_n );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( icmp_ln129_reg_330 );
    sensitive << ( ap_predicate_op48_read_state5 );
    sensitive << ( stream_in_TVALID_int );

    SC_METHOD(thread_ap_block_pp1_stage0_11001);
    sensitive << ( img_data_V_full_n );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( icmp_ln129_reg_330 );
    sensitive << ( ap_predicate_op48_read_state5 );
    sensitive << ( stream_in_TVALID_int );

    SC_METHOD(thread_ap_block_pp1_stage0_subdone);
    sensitive << ( img_data_V_full_n );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( icmp_ln129_reg_330 );
    sensitive << ( ap_predicate_op48_read_state5 );
    sensitive << ( stream_in_TVALID_int );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_block_state5_pp1_stage0_iter0);
    sensitive << ( ap_predicate_op48_read_state5 );
    sensitive << ( stream_in_TVALID_int );

    SC_METHOD(thread_ap_block_state6_pp1_stage0_iter1);
    sensitive << ( img_data_V_full_n );
    sensitive << ( icmp_ln129_reg_330 );

    SC_METHOD(thread_ap_block_state8);
    sensitive << ( eol_2_reg_230 );
    sensitive << ( stream_in_TVALID_int );

    SC_METHOD(thread_ap_condition_132);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_block_pp1_stage0_11001 );

    SC_METHOD(thread_ap_condition_pp1_exit_iter0_state5);
    sensitive << ( icmp_ln129_fu_271_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( icmp_ln127_fu_259_p2 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_ap_enable_pp1);
    sensitive << ( ap_idle_pp1 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp1);
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );

    SC_METHOD(thread_ap_phi_mux_axi_data_V_1_phi_fu_150_p4);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( icmp_ln129_reg_330 );
    sensitive << ( axi_data_V_1_reg_147 );
    sensitive << ( p_Val2_s_reg_194 );

    SC_METHOD(thread_ap_phi_mux_eol_0_phi_fu_162_p4);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( icmp_ln129_reg_330 );
    sensitive << ( eol_0_reg_158 );
    sensitive << ( axi_last_V_2_reg_181 );

    SC_METHOD(thread_ap_phi_mux_eol_2_phi_fu_233_p4);
    sensitive << ( eol_2_reg_230 );

    SC_METHOD(thread_ap_phi_mux_eol_phi_fu_139_p4);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( icmp_ln129_reg_330 );
    sensitive << ( eol_reg_136 );
    sensitive << ( axi_last_V_2_reg_181 );

    SC_METHOD(thread_ap_phi_mux_p_Val2_s_phi_fu_198_p4);
    sensitive << ( icmp_ln129_fu_271_p2 );
    sensitive << ( or_ln132_fu_286_p2 );
    sensitive << ( ap_phi_mux_axi_data_V_1_phi_fu_150_p4 );
    sensitive << ( ap_phi_reg_pp1_iter0_p_Val2_s_reg_194 );
    sensitive << ( stream_in_TDATA_int );

    SC_METHOD(thread_ap_phi_reg_pp1_iter0_axi_last_V_2_reg_181);

    SC_METHOD(thread_ap_phi_reg_pp1_iter0_p_Val2_s_reg_194);

    SC_METHOD(thread_ap_predicate_op48_read_state5);
    sensitive << ( icmp_ln129_fu_271_p2 );
    sensitive << ( or_ln132_fu_286_p2 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( icmp_ln127_fu_259_p2 );
    sensitive << ( ap_CS_fsm_state4 );

    SC_METHOD(thread_i_fu_265_p2);
    sensitive << ( i_0_reg_125 );

    SC_METHOD(thread_icmp_ln127_fu_259_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( i_0_reg_125 );

    SC_METHOD(thread_icmp_ln129_fu_271_p2);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( j_0_reg_170 );
    sensitive << ( ap_block_pp1_stage0_11001 );

    SC_METHOD(thread_img_data_V_blk_n);
    sensitive << ( img_data_V_full_n );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( icmp_ln129_reg_330 );

    SC_METHOD(thread_img_data_V_din);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( icmp_ln129_reg_330 );
    sensitive << ( trunc_ln647_reg_343 );
    sensitive << ( ap_block_pp1_stage0_01001 );

    SC_METHOD(thread_img_data_V_write);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( icmp_ln129_reg_330 );
    sensitive << ( ap_block_pp1_stage0_11001 );

    SC_METHOD(thread_j_fu_277_p2);
    sensitive << ( j_0_reg_170 );

    SC_METHOD(thread_or_ln132_fu_286_p2);
    sensitive << ( ap_phi_mux_eol_0_phi_fu_162_p4 );
    sensitive << ( sof_1_fu_76 );

    SC_METHOD(thread_stream_in_TDATA_blk_n);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( icmp_ln129_fu_271_p2 );
    sensitive << ( or_ln132_fu_286_p2 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( eol_2_reg_230 );
    sensitive << ( stream_in_TVALID_int );

    SC_METHOD(thread_stream_in_TREADY);
    sensitive << ( stream_in_TVALID );
    sensitive << ( regslice_both_AXI_video_strm_V_data_V_U_ack_in );

    SC_METHOD(thread_stream_in_TREADY_int);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_predicate_op48_read_state5 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( eol_2_reg_230 );
    sensitive << ( stream_in_TVALID_int );

    SC_METHOD(thread_tmp_user_V_fu_250_p1);
    sensitive << ( stream_in_TUSER_int );

    SC_METHOD(thread_trunc_ln647_fu_292_p1);
    sensitive << ( ap_phi_mux_p_Val2_s_phi_fu_198_p4 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( icmp_ln129_fu_271_p2 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( ap_phi_mux_eol_2_phi_fu_233_p4 );
    sensitive << ( icmp_ln127_fu_259_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_block_pp1_stage0_subdone );
    sensitive << ( eol_2_reg_230 );
    sensitive << ( tmp_user_V_fu_250_p1 );
    sensitive << ( stream_in_TVALID_int );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "00000001";
    ap_enable_reg_pp1_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter1 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "AXIvideo2xfMat_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, stream_in_TDATA, "(port)stream_in_TDATA");
    sc_trace(mVcdFile, stream_in_TVALID, "(port)stream_in_TVALID");
    sc_trace(mVcdFile, stream_in_TREADY, "(port)stream_in_TREADY");
    sc_trace(mVcdFile, stream_in_TKEEP, "(port)stream_in_TKEEP");
    sc_trace(mVcdFile, stream_in_TSTRB, "(port)stream_in_TSTRB");
    sc_trace(mVcdFile, stream_in_TUSER, "(port)stream_in_TUSER");
    sc_trace(mVcdFile, stream_in_TLAST, "(port)stream_in_TLAST");
    sc_trace(mVcdFile, stream_in_TID, "(port)stream_in_TID");
    sc_trace(mVcdFile, stream_in_TDEST, "(port)stream_in_TDEST");
    sc_trace(mVcdFile, img_data_V_din, "(port)img_data_V_din");
    sc_trace(mVcdFile, img_data_V_full_n, "(port)img_data_V_full_n");
    sc_trace(mVcdFile, img_data_V_write, "(port)img_data_V_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, stream_in_TDATA_blk_n, "stream_in_TDATA_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage0, "ap_CS_fsm_pp1_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter0, "ap_enable_reg_pp1_iter0");
    sc_trace(mVcdFile, ap_block_pp1_stage0, "ap_block_pp1_stage0");
    sc_trace(mVcdFile, icmp_ln129_fu_271_p2, "icmp_ln129_fu_271_p2");
    sc_trace(mVcdFile, or_ln132_fu_286_p2, "or_ln132_fu_286_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, ap_phi_mux_eol_2_phi_fu_233_p4, "ap_phi_mux_eol_2_phi_fu_233_p4");
    sc_trace(mVcdFile, img_data_V_blk_n, "img_data_V_blk_n");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter1, "ap_enable_reg_pp1_iter1");
    sc_trace(mVcdFile, icmp_ln129_reg_330, "icmp_ln129_reg_330");
    sc_trace(mVcdFile, eol_reg_136, "eol_reg_136");
    sc_trace(mVcdFile, axi_data_V_1_reg_147, "axi_data_V_1_reg_147");
    sc_trace(mVcdFile, eol_0_reg_158, "eol_0_reg_158");
    sc_trace(mVcdFile, j_0_reg_170, "j_0_reg_170");
    sc_trace(mVcdFile, axi_last_V_2_reg_181, "axi_last_V_2_reg_181");
    sc_trace(mVcdFile, p_Val2_s_reg_194, "p_Val2_s_reg_194");
    sc_trace(mVcdFile, tmp_data_V_reg_301, "tmp_data_V_reg_301");
    sc_trace(mVcdFile, tmp_last_V_reg_309, "tmp_last_V_reg_309");
    sc_trace(mVcdFile, icmp_ln127_fu_259_p2, "icmp_ln127_fu_259_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, i_fu_265_p2, "i_fu_265_p2");
    sc_trace(mVcdFile, i_reg_325, "i_reg_325");
    sc_trace(mVcdFile, ap_predicate_op48_read_state5, "ap_predicate_op48_read_state5");
    sc_trace(mVcdFile, ap_block_state5_pp1_stage0_iter0, "ap_block_state5_pp1_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state6_pp1_stage0_iter1, "ap_block_state6_pp1_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp1_stage0_11001, "ap_block_pp1_stage0_11001");
    sc_trace(mVcdFile, j_fu_277_p2, "j_fu_277_p2");
    sc_trace(mVcdFile, trunc_ln647_fu_292_p1, "trunc_ln647_fu_292_p1");
    sc_trace(mVcdFile, trunc_ln647_reg_343, "trunc_ln647_reg_343");
    sc_trace(mVcdFile, ap_block_state8, "ap_block_state8");
    sc_trace(mVcdFile, ap_block_pp1_stage0_subdone, "ap_block_pp1_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp1_exit_iter0_state5, "ap_condition_pp1_exit_iter0_state5");
    sc_trace(mVcdFile, axi_last_V_3_reg_206, "axi_last_V_3_reg_206");
    sc_trace(mVcdFile, axi_last_V_0_reg_105, "axi_last_V_0_reg_105");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, axi_data_V_3_reg_218, "axi_data_V_3_reg_218");
    sc_trace(mVcdFile, axi_data_V_0_reg_115, "axi_data_V_0_reg_115");
    sc_trace(mVcdFile, i_0_reg_125, "i_0_reg_125");
    sc_trace(mVcdFile, ap_phi_mux_eol_phi_fu_139_p4, "ap_phi_mux_eol_phi_fu_139_p4");
    sc_trace(mVcdFile, ap_phi_mux_axi_data_V_1_phi_fu_150_p4, "ap_phi_mux_axi_data_V_1_phi_fu_150_p4");
    sc_trace(mVcdFile, ap_phi_mux_eol_0_phi_fu_162_p4, "ap_phi_mux_eol_0_phi_fu_162_p4");
    sc_trace(mVcdFile, ap_phi_reg_pp1_iter0_axi_last_V_2_reg_181, "ap_phi_reg_pp1_iter0_axi_last_V_2_reg_181");
    sc_trace(mVcdFile, ap_phi_mux_p_Val2_s_phi_fu_198_p4, "ap_phi_mux_p_Val2_s_phi_fu_198_p4");
    sc_trace(mVcdFile, ap_phi_reg_pp1_iter0_p_Val2_s_reg_194, "ap_phi_reg_pp1_iter0_p_Val2_s_reg_194");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, eol_2_reg_230, "eol_2_reg_230");
    sc_trace(mVcdFile, sof_1_fu_76, "sof_1_fu_76");
    sc_trace(mVcdFile, ap_block_pp1_stage0_01001, "ap_block_pp1_stage0_01001");
    sc_trace(mVcdFile, tmp_user_V_fu_250_p1, "tmp_user_V_fu_250_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, ap_idle_pp1, "ap_idle_pp1");
    sc_trace(mVcdFile, ap_enable_pp1, "ap_enable_pp1");
    sc_trace(mVcdFile, regslice_both_AXI_video_strm_V_data_V_U_apdone_blk, "regslice_both_AXI_video_strm_V_data_V_U_apdone_blk");
    sc_trace(mVcdFile, stream_in_TDATA_int, "stream_in_TDATA_int");
    sc_trace(mVcdFile, stream_in_TVALID_int, "stream_in_TVALID_int");
    sc_trace(mVcdFile, stream_in_TREADY_int, "stream_in_TREADY_int");
    sc_trace(mVcdFile, regslice_both_AXI_video_strm_V_data_V_U_ack_in, "regslice_both_AXI_video_strm_V_data_V_U_ack_in");
    sc_trace(mVcdFile, regslice_both_AXI_video_strm_V_keep_V_U_apdone_blk, "regslice_both_AXI_video_strm_V_keep_V_U_apdone_blk");
    sc_trace(mVcdFile, stream_in_TKEEP_int, "stream_in_TKEEP_int");
    sc_trace(mVcdFile, regslice_both_AXI_video_strm_V_keep_V_U_vld_out, "regslice_both_AXI_video_strm_V_keep_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_AXI_video_strm_V_keep_V_U_ack_in, "regslice_both_AXI_video_strm_V_keep_V_U_ack_in");
    sc_trace(mVcdFile, regslice_both_AXI_video_strm_V_strb_V_U_apdone_blk, "regslice_both_AXI_video_strm_V_strb_V_U_apdone_blk");
    sc_trace(mVcdFile, stream_in_TSTRB_int, "stream_in_TSTRB_int");
    sc_trace(mVcdFile, regslice_both_AXI_video_strm_V_strb_V_U_vld_out, "regslice_both_AXI_video_strm_V_strb_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_AXI_video_strm_V_strb_V_U_ack_in, "regslice_both_AXI_video_strm_V_strb_V_U_ack_in");
    sc_trace(mVcdFile, regslice_both_AXI_video_strm_V_user_V_U_apdone_blk, "regslice_both_AXI_video_strm_V_user_V_U_apdone_blk");
    sc_trace(mVcdFile, stream_in_TUSER_int, "stream_in_TUSER_int");
    sc_trace(mVcdFile, regslice_both_AXI_video_strm_V_user_V_U_vld_out, "regslice_both_AXI_video_strm_V_user_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_AXI_video_strm_V_user_V_U_ack_in, "regslice_both_AXI_video_strm_V_user_V_U_ack_in");
    sc_trace(mVcdFile, regslice_both_AXI_video_strm_V_last_V_U_apdone_blk, "regslice_both_AXI_video_strm_V_last_V_U_apdone_blk");
    sc_trace(mVcdFile, stream_in_TLAST_int, "stream_in_TLAST_int");
    sc_trace(mVcdFile, regslice_both_AXI_video_strm_V_last_V_U_vld_out, "regslice_both_AXI_video_strm_V_last_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_AXI_video_strm_V_last_V_U_ack_in, "regslice_both_AXI_video_strm_V_last_V_U_ack_in");
    sc_trace(mVcdFile, regslice_both_AXI_video_strm_V_id_V_U_apdone_blk, "regslice_both_AXI_video_strm_V_id_V_U_apdone_blk");
    sc_trace(mVcdFile, stream_in_TID_int, "stream_in_TID_int");
    sc_trace(mVcdFile, regslice_both_AXI_video_strm_V_id_V_U_vld_out, "regslice_both_AXI_video_strm_V_id_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_AXI_video_strm_V_id_V_U_ack_in, "regslice_both_AXI_video_strm_V_id_V_U_ack_in");
    sc_trace(mVcdFile, regslice_both_AXI_video_strm_V_dest_V_U_apdone_blk, "regslice_both_AXI_video_strm_V_dest_V_U_apdone_blk");
    sc_trace(mVcdFile, stream_in_TDEST_int, "stream_in_TDEST_int");
    sc_trace(mVcdFile, regslice_both_AXI_video_strm_V_dest_V_U_vld_out, "regslice_both_AXI_video_strm_V_dest_V_U_vld_out");
    sc_trace(mVcdFile, regslice_both_AXI_video_strm_V_dest_V_U_ack_in, "regslice_both_AXI_video_strm_V_dest_V_U_ack_in");
    sc_trace(mVcdFile, ap_condition_132, "ap_condition_132");
#endif

    }
}

AXIvideo2xfMat::~AXIvideo2xfMat() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete regslice_both_AXI_video_strm_V_data_V_U;
    delete regslice_both_AXI_video_strm_V_keep_V_U;
    delete regslice_both_AXI_video_strm_V_strb_V_U;
    delete regslice_both_AXI_video_strm_V_user_V_U;
    delete regslice_both_AXI_video_strm_V_last_V_U;
    delete regslice_both_AXI_video_strm_V_id_V_U;
    delete regslice_both_AXI_video_strm_V_dest_V_U;
}

void AXIvideo2xfMat::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln127_fu_259_p2.read()))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp1_exit_iter0_state5.read()))) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln127_fu_259_p2.read()))) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp1_exit_iter0_state5.read()))) {
            ap_enable_reg_pp1_iter1 = (ap_condition_pp1_exit_iter0_state5.read() ^ ap_const_logic_1);
        } else if (esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp1_iter1 = ap_enable_reg_pp1_iter0.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln127_fu_259_p2.read()))) {
            ap_enable_reg_pp1_iter1 = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        axi_data_V_0_reg_115 = tmp_data_V_reg_301.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        axi_data_V_0_reg_115 = axi_data_V_3_reg_218.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln129_reg_330.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        axi_data_V_1_reg_147 = p_Val2_s_reg_194.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln127_fu_259_p2.read()))) {
        axi_data_V_1_reg_147 = axi_data_V_0_reg_115.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        axi_data_V_3_reg_218 = axi_data_V_1_reg_147.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, eol_2_reg_230.read()) && 
                !(esl_seteq<1,1,1>(ap_const_lv1_0, eol_2_reg_230.read()) && esl_seteq<1,1,1>(ap_const_logic_0, stream_in_TVALID_int.read())))) {
        axi_data_V_3_reg_218 = stream_in_TDATA_int.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        axi_last_V_0_reg_105 = tmp_last_V_reg_309.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        axi_last_V_0_reg_105 = axi_last_V_3_reg_206.read();
    }
    if (esl_seteq<1,1,1>(ap_condition_132.read(), ap_const_boolean_1)) {
        if ((esl_seteq<1,1,1>(icmp_ln129_fu_271_p2.read(), ap_const_lv1_1) && 
             esl_seteq<1,1,1>(ap_const_lv1_1, or_ln132_fu_286_p2.read()))) {
            axi_last_V_2_reg_181 = ap_phi_mux_eol_phi_fu_139_p4.read();
        } else if ((esl_seteq<1,1,1>(icmp_ln129_fu_271_p2.read(), ap_const_lv1_1) && 
                    esl_seteq<1,1,1>(or_ln132_fu_286_p2.read(), ap_const_lv1_0))) {
            axi_last_V_2_reg_181 = stream_in_TLAST_int.read();
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
            axi_last_V_2_reg_181 = ap_phi_reg_pp1_iter0_axi_last_V_2_reg_181.read();
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        axi_last_V_3_reg_206 = eol_reg_136.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, eol_2_reg_230.read()) && 
                !(esl_seteq<1,1,1>(ap_const_lv1_0, eol_2_reg_230.read()) && esl_seteq<1,1,1>(ap_const_logic_0, stream_in_TVALID_int.read())))) {
        axi_last_V_3_reg_206 = stream_in_TLAST_int.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln129_reg_330.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        eol_0_reg_158 = axi_last_V_2_reg_181.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln127_fu_259_p2.read()))) {
        eol_0_reg_158 = ap_const_lv1_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
        eol_2_reg_230 = eol_0_reg_158.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, eol_2_reg_230.read()) && 
                !(esl_seteq<1,1,1>(ap_const_lv1_0, eol_2_reg_230.read()) && esl_seteq<1,1,1>(ap_const_logic_0, stream_in_TVALID_int.read())))) {
        eol_2_reg_230 = stream_in_TLAST_int.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln129_reg_330.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        eol_reg_136 = axi_last_V_2_reg_181.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln127_fu_259_p2.read()))) {
        eol_reg_136 = axi_last_V_0_reg_105.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        i_0_reg_125 = ap_const_lv10_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
        i_0_reg_125 = i_reg_325.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(icmp_ln129_fu_271_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        j_0_reg_170 = j_fu_277_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln127_fu_259_p2.read()))) {
        j_0_reg_170 = ap_const_lv11_0;
    }
    if (esl_seteq<1,1,1>(ap_condition_132.read(), ap_const_boolean_1)) {
        if ((esl_seteq<1,1,1>(icmp_ln129_fu_271_p2.read(), ap_const_lv1_1) && 
             esl_seteq<1,1,1>(ap_const_lv1_1, or_ln132_fu_286_p2.read()))) {
            p_Val2_s_reg_194 = ap_phi_mux_axi_data_V_1_phi_fu_150_p4.read();
        } else if ((esl_seteq<1,1,1>(icmp_ln129_fu_271_p2.read(), ap_const_lv1_1) && 
                    esl_seteq<1,1,1>(or_ln132_fu_286_p2.read(), ap_const_lv1_0))) {
            p_Val2_s_reg_194 = stream_in_TDATA_int.read();
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
            p_Val2_s_reg_194 = ap_phi_reg_pp1_iter0_p_Val2_s_reg_194.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(icmp_ln129_fu_271_p2.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        sof_1_fu_76 = ap_const_lv1_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        sof_1_fu_76 = ap_const_lv1_1;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        i_reg_325 = i_fu_265_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln129_reg_330 = icmp_ln129_fu_271_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(stream_in_TVALID_int.read(), ap_const_logic_1))) {
        tmp_data_V_reg_301 = stream_in_TDATA_int.read();
        tmp_last_V_reg_309 = stream_in_TLAST_int.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(icmp_ln129_fu_271_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        trunc_ln647_reg_343 = trunc_ln647_fu_292_p1.read();
    }
}

void AXIvideo2xfMat::thread_ap_CS_fsm_pp1_stage0() {
    ap_CS_fsm_pp1_stage0 = ap_CS_fsm.read()[4];
}

void AXIvideo2xfMat::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void AXIvideo2xfMat::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void AXIvideo2xfMat::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void AXIvideo2xfMat::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void AXIvideo2xfMat::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[5];
}

void AXIvideo2xfMat::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[6];
}

void AXIvideo2xfMat::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[7];
}

void AXIvideo2xfMat::thread_ap_block_pp1_stage0() {
    ap_block_pp1_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void AXIvideo2xfMat::thread_ap_block_pp1_stage0_01001() {
    ap_block_pp1_stage0_01001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln129_reg_330.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, img_data_V_full_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op48_read_state5.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, stream_in_TVALID_int.read())));
}

void AXIvideo2xfMat::thread_ap_block_pp1_stage0_11001() {
    ap_block_pp1_stage0_11001 = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln129_reg_330.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, img_data_V_full_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op48_read_state5.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, stream_in_TVALID_int.read())));
}

void AXIvideo2xfMat::thread_ap_block_pp1_stage0_subdone() {
    ap_block_pp1_stage0_subdone = ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
  esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln129_reg_330.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, img_data_V_full_n.read())) || (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op48_read_state5.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_0, stream_in_TVALID_int.read())));
}

void AXIvideo2xfMat::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void AXIvideo2xfMat::thread_ap_block_state5_pp1_stage0_iter0() {
    ap_block_state5_pp1_stage0_iter0 = (esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op48_read_state5.read()) && esl_seteq<1,1,1>(ap_const_logic_0, stream_in_TVALID_int.read()));
}

void AXIvideo2xfMat::thread_ap_block_state6_pp1_stage0_iter1() {
    ap_block_state6_pp1_stage0_iter1 = (esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln129_reg_330.read()) && esl_seteq<1,1,1>(ap_const_logic_0, img_data_V_full_n.read()));
}

void AXIvideo2xfMat::thread_ap_block_state8() {
    ap_block_state8 = (esl_seteq<1,1,1>(ap_const_lv1_0, eol_2_reg_230.read()) && esl_seteq<1,1,1>(ap_const_logic_0, stream_in_TVALID_int.read()));
}

void AXIvideo2xfMat::thread_ap_condition_132() {
    ap_condition_132 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0));
}

void AXIvideo2xfMat::thread_ap_condition_pp1_exit_iter0_state5() {
    if (esl_seteq<1,1,1>(icmp_ln129_fu_271_p2.read(), ap_const_lv1_0)) {
        ap_condition_pp1_exit_iter0_state5 = ap_const_logic_1;
    } else {
        ap_condition_pp1_exit_iter0_state5 = ap_const_logic_0;
    }
}

void AXIvideo2xfMat::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln127_fu_259_p2.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void AXIvideo2xfMat::thread_ap_enable_pp1() {
    ap_enable_pp1 = (ap_idle_pp1.read() ^ ap_const_logic_1);
}

void AXIvideo2xfMat::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void AXIvideo2xfMat::thread_ap_idle_pp1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter1.read()))) {
        ap_idle_pp1 = ap_const_logic_1;
    } else {
        ap_idle_pp1 = ap_const_logic_0;
    }
}

void AXIvideo2xfMat::thread_ap_phi_mux_axi_data_V_1_phi_fu_150_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln129_reg_330.read()))) {
        ap_phi_mux_axi_data_V_1_phi_fu_150_p4 = p_Val2_s_reg_194.read();
    } else {
        ap_phi_mux_axi_data_V_1_phi_fu_150_p4 = axi_data_V_1_reg_147.read();
    }
}

void AXIvideo2xfMat::thread_ap_phi_mux_eol_0_phi_fu_162_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln129_reg_330.read()))) {
        ap_phi_mux_eol_0_phi_fu_162_p4 = axi_last_V_2_reg_181.read();
    } else {
        ap_phi_mux_eol_0_phi_fu_162_p4 = eol_0_reg_158.read();
    }
}

void AXIvideo2xfMat::thread_ap_phi_mux_eol_2_phi_fu_233_p4() {
    ap_phi_mux_eol_2_phi_fu_233_p4 = eol_2_reg_230.read();
}

void AXIvideo2xfMat::thread_ap_phi_mux_eol_phi_fu_139_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln129_reg_330.read()))) {
        ap_phi_mux_eol_phi_fu_139_p4 = axi_last_V_2_reg_181.read();
    } else {
        ap_phi_mux_eol_phi_fu_139_p4 = eol_reg_136.read();
    }
}

void AXIvideo2xfMat::thread_ap_phi_mux_p_Val2_s_phi_fu_198_p4() {
    if (esl_seteq<1,1,1>(icmp_ln129_fu_271_p2.read(), ap_const_lv1_1)) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, or_ln132_fu_286_p2.read())) {
            ap_phi_mux_p_Val2_s_phi_fu_198_p4 = ap_phi_mux_axi_data_V_1_phi_fu_150_p4.read();
        } else if (esl_seteq<1,1,1>(or_ln132_fu_286_p2.read(), ap_const_lv1_0)) {
            ap_phi_mux_p_Val2_s_phi_fu_198_p4 = stream_in_TDATA_int.read();
        } else {
            ap_phi_mux_p_Val2_s_phi_fu_198_p4 = ap_phi_reg_pp1_iter0_p_Val2_s_reg_194.read();
        }
    } else {
        ap_phi_mux_p_Val2_s_phi_fu_198_p4 = ap_phi_reg_pp1_iter0_p_Val2_s_reg_194.read();
    }
}

void AXIvideo2xfMat::thread_ap_phi_reg_pp1_iter0_axi_last_V_2_reg_181() {
    ap_phi_reg_pp1_iter0_axi_last_V_2_reg_181 =  (sc_lv<1>) ("X");
}

void AXIvideo2xfMat::thread_ap_phi_reg_pp1_iter0_p_Val2_s_reg_194() {
    ap_phi_reg_pp1_iter0_p_Val2_s_reg_194 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
}

void AXIvideo2xfMat::thread_ap_predicate_op48_read_state5() {
    ap_predicate_op48_read_state5 = (esl_seteq<1,1,1>(icmp_ln129_fu_271_p2.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(or_ln132_fu_286_p2.read(), ap_const_lv1_0));
}

void AXIvideo2xfMat::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln127_fu_259_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void AXIvideo2xfMat::thread_i_fu_265_p2() {
    i_fu_265_p2 = (!i_0_reg_125.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(i_0_reg_125.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void AXIvideo2xfMat::thread_icmp_ln127_fu_259_p2() {
    icmp_ln127_fu_259_p2 = (!i_0_reg_125.read().is_01() || !ap_const_lv10_2D0.is_01())? sc_lv<1>(): (sc_biguint<10>(i_0_reg_125.read()) < sc_biguint<10>(ap_const_lv10_2D0));
}

void AXIvideo2xfMat::thread_icmp_ln129_fu_271_p2() {
    icmp_ln129_fu_271_p2 = (!j_0_reg_170.read().is_01() || !ap_const_lv11_500.is_01())? sc_lv<1>(): (sc_biguint<11>(j_0_reg_170.read()) < sc_biguint<11>(ap_const_lv11_500));
}

void AXIvideo2xfMat::thread_img_data_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln129_reg_330.read()))) {
        img_data_V_blk_n = img_data_V_full_n.read();
    } else {
        img_data_V_blk_n = ap_const_logic_1;
    }
}

void AXIvideo2xfMat::thread_img_data_V_din() {
    img_data_V_din = trunc_ln647_reg_343.read();
}

void AXIvideo2xfMat::thread_img_data_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln129_reg_330.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        img_data_V_write = ap_const_logic_1;
    } else {
        img_data_V_write = ap_const_logic_0;
    }
}

void AXIvideo2xfMat::thread_j_fu_277_p2() {
    j_fu_277_p2 = (!j_0_reg_170.read().is_01() || !ap_const_lv11_1.is_01())? sc_lv<11>(): (sc_biguint<11>(j_0_reg_170.read()) + sc_biguint<11>(ap_const_lv11_1));
}

void AXIvideo2xfMat::thread_or_ln132_fu_286_p2() {
    or_ln132_fu_286_p2 = (sof_1_fu_76.read() | ap_phi_mux_eol_0_phi_fu_162_p4.read());
}

void AXIvideo2xfMat::thread_stream_in_TDATA_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(icmp_ln129_fu_271_p2.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(or_ln132_fu_286_p2.read(), ap_const_lv1_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, eol_2_reg_230.read())))) {
        stream_in_TDATA_blk_n = stream_in_TVALID_int.read();
    } else {
        stream_in_TDATA_blk_n = ap_const_logic_1;
    }
}

void AXIvideo2xfMat::thread_stream_in_TREADY() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, stream_in_TVALID.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, regslice_both_AXI_video_strm_V_data_V_U_ack_in.read()))) {
        stream_in_TREADY = ap_const_logic_1;
    } else {
        stream_in_TREADY = ap_const_logic_0;
    }
}

void AXIvideo2xfMat::thread_stream_in_TREADY_int() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
          esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op48_read_state5.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, eol_2_reg_230.read()) && 
          !(esl_seteq<1,1,1>(ap_const_lv1_0, eol_2_reg_230.read()) && esl_seteq<1,1,1>(ap_const_logic_0, stream_in_TVALID_int.read()))) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(stream_in_TVALID_int.read(), ap_const_logic_1)))) {
        stream_in_TREADY_int = ap_const_logic_1;
    } else {
        stream_in_TREADY_int = ap_const_logic_0;
    }
}

void AXIvideo2xfMat::thread_tmp_user_V_fu_250_p1() {
    tmp_user_V_fu_250_p1 = stream_in_TUSER_int.read();
}

void AXIvideo2xfMat::thread_trunc_ln647_fu_292_p1() {
    trunc_ln647_fu_292_p1 = ap_phi_mux_p_Val2_s_phi_fu_198_p4.read().range(24-1, 0);
}

void AXIvideo2xfMat::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, tmp_user_V_fu_250_p1.read()) && esl_seteq<1,1,1>(stream_in_TVALID_int.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, tmp_user_V_fu_250_p1.read()) && esl_seteq<1,1,1>(stream_in_TVALID_int.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln127_fu_259_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            }
            break;
        case 16 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln129_fu_271_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln129_fu_271_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            }
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, eol_2_reg_230.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_0, eol_2_reg_230.read()) && esl_seteq<1,1,1>(ap_const_logic_0, stream_in_TVALID_int.read())))) {
                ap_NS_fsm = ap_ST_fsm_state8;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, ap_phi_mux_eol_2_phi_fu_233_p4.read()) && !(esl_seteq<1,1,1>(ap_const_lv1_0, eol_2_reg_230.read()) && esl_seteq<1,1,1>(ap_const_logic_0, stream_in_TVALID_int.read())))) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        default : 
            ap_NS_fsm = "XXXXXXXX";
            break;
    }
}

}

