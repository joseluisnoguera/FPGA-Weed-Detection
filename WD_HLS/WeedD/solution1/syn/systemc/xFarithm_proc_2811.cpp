// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "xFarithm_proc_2811.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic xFarithm_proc_2811::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic xFarithm_proc_2811::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<4> xFarithm_proc_2811::ap_ST_fsm_state1 = "1";
const sc_lv<4> xFarithm_proc_2811::ap_ST_fsm_state2 = "10";
const sc_lv<4> xFarithm_proc_2811::ap_ST_fsm_pp0_stage0 = "100";
const sc_lv<4> xFarithm_proc_2811::ap_ST_fsm_state5 = "1000";
const bool xFarithm_proc_2811::ap_const_boolean_1 = true;
const sc_lv<32> xFarithm_proc_2811::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> xFarithm_proc_2811::ap_const_lv32_2 = "10";
const bool xFarithm_proc_2811::ap_const_boolean_0 = false;
const sc_lv<1> xFarithm_proc_2811::ap_const_lv1_0 = "0";
const sc_lv<32> xFarithm_proc_2811::ap_const_lv32_1 = "1";
const sc_lv<1> xFarithm_proc_2811::ap_const_lv1_1 = "1";
const sc_lv<10> xFarithm_proc_2811::ap_const_lv10_0 = "0000000000";
const sc_lv<32> xFarithm_proc_2811::ap_const_lv32_3 = "11";
const sc_lv<11> xFarithm_proc_2811::ap_const_lv11_0 = "00000000000";
const sc_lv<10> xFarithm_proc_2811::ap_const_lv10_2D0 = "1011010000";
const sc_lv<10> xFarithm_proc_2811::ap_const_lv10_1 = "1";
const sc_lv<11> xFarithm_proc_2811::ap_const_lv11_500 = "10100000000";
const sc_lv<11> xFarithm_proc_2811::ap_const_lv11_1 = "1";
const sc_lv<32> xFarithm_proc_2811::ap_const_lv32_8 = "1000";
const sc_lv<8> xFarithm_proc_2811::ap_const_lv8_FF = "11111111";
const sc_lv<32> xFarithm_proc_2811::ap_const_lv32_F = "1111";
const sc_lv<32> xFarithm_proc_2811::ap_const_lv32_10 = "10000";
const sc_lv<32> xFarithm_proc_2811::ap_const_lv32_17 = "10111";

xFarithm_proc_2811::xFarithm_proc_2811(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln1353_1_fu_207_p2);
    sensitive << ( zext_ln1353_1_fu_203_p1 );
    sensitive << ( zext_ln215_6_fu_199_p1 );

    SC_METHOD(thread_add_ln1353_2_fu_263_p2);
    sensitive << ( zext_ln1353_2_fu_259_p1 );
    sensitive << ( zext_ln215_7_fu_255_p1 );

    SC_METHOD(thread_add_ln1353_fu_151_p2);
    sensitive << ( zext_ln1353_fu_147_p1 );
    sensitive << ( zext_ln215_fu_143_p1 );

    SC_METHOD(thread_add_ln1597_fu_129_p2);
    sensitive << ( t_V_4_reg_100 );

    SC_METHOD(thread_add_ln209_1_fu_221_p2);
    sensitive << ( p_Result_s_fu_179_p4 );
    sensitive << ( p_Result_1_1_fu_189_p4 );

    SC_METHOD(thread_add_ln209_2_fu_277_p2);
    sensitive << ( p_Result_2_fu_235_p4 );
    sensitive << ( p_Result_1_2_fu_245_p4 );

    SC_METHOD(thread_add_ln209_fu_165_p2);
    sensitive << ( trunc_ln647_fu_135_p1 );
    sensitive << ( trunc_ln647_1_fu_139_p1 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( p_src1_data_V_empty_n );
    sensitive << ( p_src2_data_V_empty_n );
    sensitive << ( p_dst_data_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln98_reg_311 );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( p_src1_data_V_empty_n );
    sensitive << ( p_src2_data_V_empty_n );
    sensitive << ( p_dst_data_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln98_reg_311 );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( p_src1_data_V_empty_n );
    sensitive << ( p_src2_data_V_empty_n );
    sensitive << ( p_dst_data_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln98_reg_311 );

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter1);
    sensitive << ( p_src1_data_V_empty_n );
    sensitive << ( p_src2_data_V_empty_n );
    sensitive << ( p_dst_data_V_full_n );
    sensitive << ( icmp_ln98_reg_311 );

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state3);
    sensitive << ( icmp_ln98_fu_123_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( icmp_ln887_fu_111_p2 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( icmp_ln887_fu_111_p2 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_i_V_fu_117_p2);
    sensitive << ( t_V_reg_89 );

    SC_METHOD(thread_icmp_ln887_fu_111_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( t_V_reg_89 );

    SC_METHOD(thread_icmp_ln98_fu_123_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( t_V_4_reg_100 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_p_Result_1_1_fu_189_p4);
    sensitive << ( p_src2_data_V_dout );

    SC_METHOD(thread_p_Result_1_2_fu_245_p4);
    sensitive << ( p_src2_data_V_dout );

    SC_METHOD(thread_p_Result_2_fu_235_p4);
    sensitive << ( p_src1_data_V_dout );

    SC_METHOD(thread_p_Result_s_fu_179_p4);
    sensitive << ( p_src1_data_V_dout );

    SC_METHOD(thread_p_dst_data_V_blk_n);
    sensitive << ( p_dst_data_V_full_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln98_reg_311 );

    SC_METHOD(thread_p_dst_data_V_din);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln98_reg_311 );
    sensitive << ( ap_block_pp0_stage0_01001 );
    sensitive << ( select_ln209_2_fu_283_p3 );
    sensitive << ( select_ln209_1_fu_227_p3 );
    sensitive << ( select_ln209_fu_171_p3 );

    SC_METHOD(thread_p_dst_data_V_write);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln98_reg_311 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_p_src1_data_V_blk_n);
    sensitive << ( p_src1_data_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln98_reg_311 );

    SC_METHOD(thread_p_src1_data_V_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln98_reg_311 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_p_src2_data_V_blk_n);
    sensitive << ( p_src2_data_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln98_reg_311 );

    SC_METHOD(thread_p_src2_data_V_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln98_reg_311 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_select_ln209_1_fu_227_p3);
    sensitive << ( tmp_8_fu_213_p3 );
    sensitive << ( add_ln209_1_fu_221_p2 );

    SC_METHOD(thread_select_ln209_2_fu_283_p3);
    sensitive << ( tmp_9_fu_269_p3 );
    sensitive << ( add_ln209_2_fu_277_p2 );

    SC_METHOD(thread_select_ln209_fu_171_p3);
    sensitive << ( tmp_7_fu_157_p3 );
    sensitive << ( add_ln209_fu_165_p2 );

    SC_METHOD(thread_tmp_7_fu_157_p3);
    sensitive << ( add_ln1353_fu_151_p2 );

    SC_METHOD(thread_tmp_8_fu_213_p3);
    sensitive << ( add_ln1353_1_fu_207_p2 );

    SC_METHOD(thread_tmp_9_fu_269_p3);
    sensitive << ( add_ln1353_2_fu_263_p2 );

    SC_METHOD(thread_trunc_ln647_1_fu_139_p1);
    sensitive << ( p_src2_data_V_dout );

    SC_METHOD(thread_trunc_ln647_fu_135_p1);
    sensitive << ( p_src1_data_V_dout );

    SC_METHOD(thread_zext_ln1353_1_fu_203_p1);
    sensitive << ( p_Result_1_1_fu_189_p4 );

    SC_METHOD(thread_zext_ln1353_2_fu_259_p1);
    sensitive << ( p_Result_1_2_fu_245_p4 );

    SC_METHOD(thread_zext_ln1353_fu_147_p1);
    sensitive << ( trunc_ln647_1_fu_139_p1 );

    SC_METHOD(thread_zext_ln215_6_fu_199_p1);
    sensitive << ( p_Result_s_fu_179_p4 );

    SC_METHOD(thread_zext_ln215_7_fu_255_p1);
    sensitive << ( p_Result_2_fu_235_p4 );

    SC_METHOD(thread_zext_ln215_fu_143_p1);
    sensitive << ( trunc_ln647_fu_135_p1 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( icmp_ln887_fu_111_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln98_fu_123_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );

    ap_CS_fsm = "0001";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "xFarithm_proc_2811_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, p_src1_data_V_dout, "(port)p_src1_data_V_dout");
    sc_trace(mVcdFile, p_src1_data_V_empty_n, "(port)p_src1_data_V_empty_n");
    sc_trace(mVcdFile, p_src1_data_V_read, "(port)p_src1_data_V_read");
    sc_trace(mVcdFile, p_src2_data_V_dout, "(port)p_src2_data_V_dout");
    sc_trace(mVcdFile, p_src2_data_V_empty_n, "(port)p_src2_data_V_empty_n");
    sc_trace(mVcdFile, p_src2_data_V_read, "(port)p_src2_data_V_read");
    sc_trace(mVcdFile, p_dst_data_V_din, "(port)p_dst_data_V_din");
    sc_trace(mVcdFile, p_dst_data_V_full_n, "(port)p_dst_data_V_full_n");
    sc_trace(mVcdFile, p_dst_data_V_write, "(port)p_dst_data_V_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, p_src1_data_V_blk_n, "p_src1_data_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, icmp_ln98_reg_311, "icmp_ln98_reg_311");
    sc_trace(mVcdFile, p_src2_data_V_blk_n, "p_src2_data_V_blk_n");
    sc_trace(mVcdFile, p_dst_data_V_blk_n, "p_dst_data_V_blk_n");
    sc_trace(mVcdFile, t_V_4_reg_100, "t_V_4_reg_100");
    sc_trace(mVcdFile, icmp_ln887_fu_111_p2, "icmp_ln887_fu_111_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, i_V_fu_117_p2, "i_V_fu_117_p2");
    sc_trace(mVcdFile, i_V_reg_306, "i_V_reg_306");
    sc_trace(mVcdFile, icmp_ln98_fu_123_p2, "icmp_ln98_fu_123_p2");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter0, "ap_block_state3_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter1, "ap_block_state4_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, add_ln1597_fu_129_p2, "add_ln1597_fu_129_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state3, "ap_condition_pp0_exit_iter0_state3");
    sc_trace(mVcdFile, t_V_reg_89, "t_V_reg_89");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, trunc_ln647_fu_135_p1, "trunc_ln647_fu_135_p1");
    sc_trace(mVcdFile, trunc_ln647_1_fu_139_p1, "trunc_ln647_1_fu_139_p1");
    sc_trace(mVcdFile, zext_ln1353_fu_147_p1, "zext_ln1353_fu_147_p1");
    sc_trace(mVcdFile, zext_ln215_fu_143_p1, "zext_ln215_fu_143_p1");
    sc_trace(mVcdFile, add_ln1353_fu_151_p2, "add_ln1353_fu_151_p2");
    sc_trace(mVcdFile, tmp_7_fu_157_p3, "tmp_7_fu_157_p3");
    sc_trace(mVcdFile, add_ln209_fu_165_p2, "add_ln209_fu_165_p2");
    sc_trace(mVcdFile, p_Result_s_fu_179_p4, "p_Result_s_fu_179_p4");
    sc_trace(mVcdFile, p_Result_1_1_fu_189_p4, "p_Result_1_1_fu_189_p4");
    sc_trace(mVcdFile, zext_ln1353_1_fu_203_p1, "zext_ln1353_1_fu_203_p1");
    sc_trace(mVcdFile, zext_ln215_6_fu_199_p1, "zext_ln215_6_fu_199_p1");
    sc_trace(mVcdFile, add_ln1353_1_fu_207_p2, "add_ln1353_1_fu_207_p2");
    sc_trace(mVcdFile, tmp_8_fu_213_p3, "tmp_8_fu_213_p3");
    sc_trace(mVcdFile, add_ln209_1_fu_221_p2, "add_ln209_1_fu_221_p2");
    sc_trace(mVcdFile, p_Result_2_fu_235_p4, "p_Result_2_fu_235_p4");
    sc_trace(mVcdFile, p_Result_1_2_fu_245_p4, "p_Result_1_2_fu_245_p4");
    sc_trace(mVcdFile, zext_ln1353_2_fu_259_p1, "zext_ln1353_2_fu_259_p1");
    sc_trace(mVcdFile, zext_ln215_7_fu_255_p1, "zext_ln215_7_fu_255_p1");
    sc_trace(mVcdFile, add_ln1353_2_fu_263_p2, "add_ln1353_2_fu_263_p2");
    sc_trace(mVcdFile, tmp_9_fu_269_p3, "tmp_9_fu_269_p3");
    sc_trace(mVcdFile, add_ln209_2_fu_277_p2, "add_ln209_2_fu_277_p2");
    sc_trace(mVcdFile, select_ln209_2_fu_283_p3, "select_ln209_2_fu_283_p3");
    sc_trace(mVcdFile, select_ln209_1_fu_227_p3, "select_ln209_1_fu_227_p3");
    sc_trace(mVcdFile, select_ln209_fu_171_p3, "select_ln209_fu_171_p3");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
}

xFarithm_proc_2811::~xFarithm_proc_2811() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void xFarithm_proc_2811::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state3.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    esl_seteq<1,1,1>(icmp_ln887_fu_111_p2.read(), ap_const_lv1_1))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state3.read()))) {
            ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state3.read() ^ ap_const_logic_1);
        } else if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    esl_seteq<1,1,1>(icmp_ln887_fu_111_p2.read(), ap_const_lv1_1))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln98_fu_123_p2.read()))) {
        t_V_4_reg_100 = add_ln1597_fu_129_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln887_fu_111_p2.read(), ap_const_lv1_1))) {
        t_V_4_reg_100 = ap_const_lv11_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        t_V_reg_89 = i_V_reg_306.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        t_V_reg_89 = ap_const_lv10_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_V_reg_306 = i_V_fu_117_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln98_reg_311 = icmp_ln98_fu_123_p2.read();
    }
}

void xFarithm_proc_2811::thread_add_ln1353_1_fu_207_p2() {
    add_ln1353_1_fu_207_p2 = (!zext_ln1353_1_fu_203_p1.read().is_01() || !zext_ln215_6_fu_199_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(zext_ln1353_1_fu_203_p1.read()) + sc_biguint<9>(zext_ln215_6_fu_199_p1.read()));
}

void xFarithm_proc_2811::thread_add_ln1353_2_fu_263_p2() {
    add_ln1353_2_fu_263_p2 = (!zext_ln1353_2_fu_259_p1.read().is_01() || !zext_ln215_7_fu_255_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(zext_ln1353_2_fu_259_p1.read()) + sc_biguint<9>(zext_ln215_7_fu_255_p1.read()));
}

void xFarithm_proc_2811::thread_add_ln1353_fu_151_p2() {
    add_ln1353_fu_151_p2 = (!zext_ln1353_fu_147_p1.read().is_01() || !zext_ln215_fu_143_p1.read().is_01())? sc_lv<9>(): (sc_biguint<9>(zext_ln1353_fu_147_p1.read()) + sc_biguint<9>(zext_ln215_fu_143_p1.read()));
}

void xFarithm_proc_2811::thread_add_ln1597_fu_129_p2() {
    add_ln1597_fu_129_p2 = (!t_V_4_reg_100.read().is_01() || !ap_const_lv11_1.is_01())? sc_lv<11>(): (sc_biguint<11>(t_V_4_reg_100.read()) + sc_biguint<11>(ap_const_lv11_1));
}

void xFarithm_proc_2811::thread_add_ln209_1_fu_221_p2() {
    add_ln209_1_fu_221_p2 = (!p_Result_1_1_fu_189_p4.read().is_01() || !p_Result_s_fu_179_p4.read().is_01())? sc_lv<8>(): (sc_biguint<8>(p_Result_1_1_fu_189_p4.read()) + sc_biguint<8>(p_Result_s_fu_179_p4.read()));
}

void xFarithm_proc_2811::thread_add_ln209_2_fu_277_p2() {
    add_ln209_2_fu_277_p2 = (!p_Result_1_2_fu_245_p4.read().is_01() || !p_Result_2_fu_235_p4.read().is_01())? sc_lv<8>(): (sc_biguint<8>(p_Result_1_2_fu_245_p4.read()) + sc_biguint<8>(p_Result_2_fu_235_p4.read()));
}

void xFarithm_proc_2811::thread_add_ln209_fu_165_p2() {
    add_ln209_fu_165_p2 = (!trunc_ln647_1_fu_139_p1.read().is_01() || !trunc_ln647_fu_135_p1.read().is_01())? sc_lv<8>(): (sc_biguint<8>(trunc_ln647_1_fu_139_p1.read()) + sc_biguint<8>(trunc_ln647_fu_135_p1.read()));
}

void xFarithm_proc_2811::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[2];
}

void xFarithm_proc_2811::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void xFarithm_proc_2811::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void xFarithm_proc_2811::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[3];
}

void xFarithm_proc_2811::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void xFarithm_proc_2811::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && ((esl_seteq<1,1,1>(icmp_ln98_reg_311.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, p_src1_data_V_empty_n.read())) || 
  (esl_seteq<1,1,1>(icmp_ln98_reg_311.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, p_src2_data_V_empty_n.read())) || 
  (esl_seteq<1,1,1>(icmp_ln98_reg_311.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, p_dst_data_V_full_n.read()))));
}

void xFarithm_proc_2811::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && ((esl_seteq<1,1,1>(icmp_ln98_reg_311.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, p_src1_data_V_empty_n.read())) || 
  (esl_seteq<1,1,1>(icmp_ln98_reg_311.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, p_src2_data_V_empty_n.read())) || 
  (esl_seteq<1,1,1>(icmp_ln98_reg_311.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, p_dst_data_V_full_n.read()))));
}

void xFarithm_proc_2811::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && ((esl_seteq<1,1,1>(icmp_ln98_reg_311.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, p_src1_data_V_empty_n.read())) || 
  (esl_seteq<1,1,1>(icmp_ln98_reg_311.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, p_src2_data_V_empty_n.read())) || 
  (esl_seteq<1,1,1>(icmp_ln98_reg_311.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, p_dst_data_V_full_n.read()))));
}

void xFarithm_proc_2811::thread_ap_block_state3_pp0_stage0_iter0() {
    ap_block_state3_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void xFarithm_proc_2811::thread_ap_block_state4_pp0_stage0_iter1() {
    ap_block_state4_pp0_stage0_iter1 = ((esl_seteq<1,1,1>(icmp_ln98_reg_311.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, p_src1_data_V_empty_n.read())) || (esl_seteq<1,1,1>(icmp_ln98_reg_311.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, p_src2_data_V_empty_n.read())) || (esl_seteq<1,1,1>(icmp_ln98_reg_311.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, p_dst_data_V_full_n.read())));
}

void xFarithm_proc_2811::thread_ap_condition_pp0_exit_iter0_state3() {
    if (esl_seteq<1,1,1>(icmp_ln98_fu_123_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state3 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state3 = ap_const_logic_0;
    }
}

void xFarithm_proc_2811::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln887_fu_111_p2.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void xFarithm_proc_2811::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void xFarithm_proc_2811::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void xFarithm_proc_2811::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void xFarithm_proc_2811::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln887_fu_111_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void xFarithm_proc_2811::thread_i_V_fu_117_p2() {
    i_V_fu_117_p2 = (!t_V_reg_89.read().is_01() || !ap_const_lv10_1.is_01())? sc_lv<10>(): (sc_biguint<10>(t_V_reg_89.read()) + sc_biguint<10>(ap_const_lv10_1));
}

void xFarithm_proc_2811::thread_icmp_ln887_fu_111_p2() {
    icmp_ln887_fu_111_p2 = (!t_V_reg_89.read().is_01() || !ap_const_lv10_2D0.is_01())? sc_lv<1>(): (sc_biguint<10>(t_V_reg_89.read()) < sc_biguint<10>(ap_const_lv10_2D0));
}

void xFarithm_proc_2811::thread_icmp_ln98_fu_123_p2() {
    icmp_ln98_fu_123_p2 = (!t_V_4_reg_100.read().is_01() || !ap_const_lv11_500.is_01())? sc_lv<1>(): sc_lv<1>(t_V_4_reg_100.read() == ap_const_lv11_500);
}

void xFarithm_proc_2811::thread_p_Result_1_1_fu_189_p4() {
    p_Result_1_1_fu_189_p4 = p_src2_data_V_dout.read().range(15, 8);
}

void xFarithm_proc_2811::thread_p_Result_1_2_fu_245_p4() {
    p_Result_1_2_fu_245_p4 = p_src2_data_V_dout.read().range(23, 16);
}

void xFarithm_proc_2811::thread_p_Result_2_fu_235_p4() {
    p_Result_2_fu_235_p4 = p_src1_data_V_dout.read().range(23, 16);
}

void xFarithm_proc_2811::thread_p_Result_s_fu_179_p4() {
    p_Result_s_fu_179_p4 = p_src1_data_V_dout.read().range(15, 8);
}

void xFarithm_proc_2811::thread_p_dst_data_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln98_reg_311.read(), ap_const_lv1_0))) {
        p_dst_data_V_blk_n = p_dst_data_V_full_n.read();
    } else {
        p_dst_data_V_blk_n = ap_const_logic_1;
    }
}

void xFarithm_proc_2811::thread_p_dst_data_V_din() {
    p_dst_data_V_din = esl_concat<16,8>(esl_concat<8,8>(select_ln209_2_fu_283_p3.read(), select_ln209_1_fu_227_p3.read()), select_ln209_fu_171_p3.read());
}

void xFarithm_proc_2811::thread_p_dst_data_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln98_reg_311.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        p_dst_data_V_write = ap_const_logic_1;
    } else {
        p_dst_data_V_write = ap_const_logic_0;
    }
}

void xFarithm_proc_2811::thread_p_src1_data_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln98_reg_311.read(), ap_const_lv1_0))) {
        p_src1_data_V_blk_n = p_src1_data_V_empty_n.read();
    } else {
        p_src1_data_V_blk_n = ap_const_logic_1;
    }
}

void xFarithm_proc_2811::thread_p_src1_data_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln98_reg_311.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        p_src1_data_V_read = ap_const_logic_1;
    } else {
        p_src1_data_V_read = ap_const_logic_0;
    }
}

void xFarithm_proc_2811::thread_p_src2_data_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln98_reg_311.read(), ap_const_lv1_0))) {
        p_src2_data_V_blk_n = p_src2_data_V_empty_n.read();
    } else {
        p_src2_data_V_blk_n = ap_const_logic_1;
    }
}

void xFarithm_proc_2811::thread_p_src2_data_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln98_reg_311.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        p_src2_data_V_read = ap_const_logic_1;
    } else {
        p_src2_data_V_read = ap_const_logic_0;
    }
}

void xFarithm_proc_2811::thread_select_ln209_1_fu_227_p3() {
    select_ln209_1_fu_227_p3 = (!tmp_8_fu_213_p3.read()[0].is_01())? sc_lv<8>(): ((tmp_8_fu_213_p3.read()[0].to_bool())? ap_const_lv8_FF: add_ln209_1_fu_221_p2.read());
}

void xFarithm_proc_2811::thread_select_ln209_2_fu_283_p3() {
    select_ln209_2_fu_283_p3 = (!tmp_9_fu_269_p3.read()[0].is_01())? sc_lv<8>(): ((tmp_9_fu_269_p3.read()[0].to_bool())? ap_const_lv8_FF: add_ln209_2_fu_277_p2.read());
}

void xFarithm_proc_2811::thread_select_ln209_fu_171_p3() {
    select_ln209_fu_171_p3 = (!tmp_7_fu_157_p3.read()[0].is_01())? sc_lv<8>(): ((tmp_7_fu_157_p3.read()[0].to_bool())? ap_const_lv8_FF: add_ln209_fu_165_p2.read());
}

void xFarithm_proc_2811::thread_tmp_7_fu_157_p3() {
    tmp_7_fu_157_p3 = add_ln1353_fu_151_p2.read().range(8, 8);
}

void xFarithm_proc_2811::thread_tmp_8_fu_213_p3() {
    tmp_8_fu_213_p3 = add_ln1353_1_fu_207_p2.read().range(8, 8);
}

void xFarithm_proc_2811::thread_tmp_9_fu_269_p3() {
    tmp_9_fu_269_p3 = add_ln1353_2_fu_263_p2.read().range(8, 8);
}

void xFarithm_proc_2811::thread_trunc_ln647_1_fu_139_p1() {
    trunc_ln647_1_fu_139_p1 = p_src2_data_V_dout.read().range(8-1, 0);
}

void xFarithm_proc_2811::thread_trunc_ln647_fu_135_p1() {
    trunc_ln647_fu_135_p1 = p_src1_data_V_dout.read().range(8-1, 0);
}

void xFarithm_proc_2811::thread_zext_ln1353_1_fu_203_p1() {
    zext_ln1353_1_fu_203_p1 = esl_zext<9,8>(p_Result_1_1_fu_189_p4.read());
}

void xFarithm_proc_2811::thread_zext_ln1353_2_fu_259_p1() {
    zext_ln1353_2_fu_259_p1 = esl_zext<9,8>(p_Result_1_2_fu_245_p4.read());
}

void xFarithm_proc_2811::thread_zext_ln1353_fu_147_p1() {
    zext_ln1353_fu_147_p1 = esl_zext<9,8>(trunc_ln647_1_fu_139_p1.read());
}

void xFarithm_proc_2811::thread_zext_ln215_6_fu_199_p1() {
    zext_ln215_6_fu_199_p1 = esl_zext<9,8>(p_Result_s_fu_179_p4.read());
}

void xFarithm_proc_2811::thread_zext_ln215_7_fu_255_p1() {
    zext_ln215_7_fu_255_p1 = esl_zext<9,8>(p_Result_2_fu_235_p4.read());
}

void xFarithm_proc_2811::thread_zext_ln215_fu_143_p1() {
    zext_ln215_fu_143_p1 = esl_zext<9,8>(trunc_ln647_fu_135_p1.read());
}

void xFarithm_proc_2811::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln887_fu_111_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln98_fu_123_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln98_fu_123_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        default : 
            ap_NS_fsm = "XXXX";
            break;
    }
}

}

