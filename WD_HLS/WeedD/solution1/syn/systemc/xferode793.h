// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _xferode793_HH_
#define _xferode793_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "xfExtractPixels_1.h"
#include "ip_accel_app_mux_yd2.h"
#include "xferode793_buf_0_V.h"

namespace ap_rtl {

struct xferode793 : public sc_module {
    // Port declarations 12
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_lv<16> > p_src_data_V_address0;
    sc_out< sc_logic > p_src_data_V_ce0;
    sc_in< sc_lv<8> > p_src_data_V_q0;
    sc_out< sc_lv<8> > p_dst_data_V_din;
    sc_in< sc_logic > p_dst_data_V_full_n;
    sc_out< sc_logic > p_dst_data_V_write;


    // Module declarations
    xferode793(sc_module_name name);
    SC_HAS_PROCESS(xferode793);

    ~xferode793();

    sc_trace_file* mVcdFile;

    xferode793_buf_0_V* buf_0_V_U;
    xferode793_buf_0_V* buf_1_V_U;
    xferode793_buf_0_V* buf_2_V_U;
    xfExtractPixels_1* src_buf_temp_copy_ex_xfExtractPixels_1_fu_378;
    xfExtractPixels_1* src_buf_temp_copy_ex_1_xfExtractPixels_1_fu_383;
    xfExtractPixels_1* src_buf_temp_copy_ex_2_xfExtractPixels_1_fu_388;
    ip_accel_app_mux_yd2<1,1,8,8,8,2,8>* ip_accel_app_mux_yd2_U298;
    ip_accel_app_mux_yd2<1,1,8,8,8,2,8>* ip_accel_app_mux_yd2_U299;
    ip_accel_app_mux_yd2<1,1,8,8,8,2,8>* ip_accel_app_mux_yd2_U300;
    sc_signal< sc_lv<8> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > p_dst_data_V_blk_n;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter3;
    sc_signal< bool > ap_block_pp1_stage0;
    sc_signal< sc_lv<1> > icmp_ln891_reg_787;
    sc_signal< sc_lv<9> > index_assign_reg_263;
    sc_signal< sc_lv<8> > src_buf_1_1_0_reg_330;
    sc_signal< sc_lv<8> > src_buf_0_1_0_reg_342;
    sc_signal< sc_lv<8> > src_buf_2_1_0_reg_354;
    sc_signal< sc_lv<9> > t_V_2_reg_366;
    sc_signal< sc_lv<9> > t_V_2_reg_366_pp1_iter1_reg;
    sc_signal< sc_logic > ap_CS_fsm_pp1_stage0;
    sc_signal< bool > ap_block_state8_pp1_stage0_iter0;
    sc_signal< bool > ap_block_state9_pp1_stage0_iter1;
    sc_signal< bool > ap_block_state10_pp1_stage0_iter2;
    sc_signal< bool > ap_block_state11_pp1_stage0_iter3;
    sc_signal< bool > ap_block_pp1_stage0_11001;
    sc_signal< sc_lv<13> > row_ind_2_V_load_reg_669;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<13> > row_ind_2_V_1_load_reg_674;
    sc_signal< sc_lv<13> > row_ind_2_V_2_load_reg_679;
    sc_signal< sc_lv<1> > icmp_ln259_fu_402_p2;
    sc_signal< sc_lv<2> > init_row_ind_fu_408_p2;
    sc_signal< sc_lv<1> > icmp_ln272_fu_433_p2;
    sc_signal< sc_lv<1> > icmp_ln272_reg_693;
    sc_signal< sc_logic > ap_CS_fsm_pp0_stage0;
    sc_signal< bool > ap_block_state3_pp0_stage0_iter0;
    sc_signal< bool > ap_block_state4_pp0_stage0_iter1;
    sc_signal< bool > ap_block_pp0_stage0_11001;
    sc_signal< sc_lv<9> > add_ln278_fu_439_p2;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter0;
    sc_signal< sc_lv<64> > zext_ln544_fu_445_p1;
    sc_signal< sc_lv<64> > zext_ln544_reg_702;
    sc_signal< sc_lv<9> > i_col_V_fu_456_p2;
    sc_signal< sc_logic > ap_CS_fsm_state6;
    sc_signal< sc_lv<1> > icmp_ln298_fu_472_p2;
    sc_signal< sc_logic > ap_CS_fsm_state7;
    sc_signal< sc_lv<1> > icmp_ln887_fu_478_p2;
    sc_signal< sc_lv<1> > icmp_ln887_reg_732;
    sc_signal< sc_lv<2> > trunc_ln321_fu_484_p1;
    sc_signal< sc_lv<2> > trunc_ln321_reg_736;
    sc_signal< sc_lv<2> > trunc_ln321_1_fu_488_p1;
    sc_signal< sc_lv<2> > trunc_ln321_1_reg_741;
    sc_signal< sc_lv<2> > trunc_ln321_2_fu_492_p1;
    sc_signal< sc_lv<2> > trunc_ln321_2_reg_746;
    sc_signal< sc_lv<1> > icmp_ln110_fu_496_p2;
    sc_signal< sc_lv<1> > icmp_ln110_reg_751;
    sc_signal< sc_lv<1> > icmp_ln110_reg_751_pp1_iter1_reg;
    sc_signal< sc_lv<1> > icmp_ln110_reg_751_pp1_iter2_reg;
    sc_signal< sc_lv<9> > col_V_fu_502_p2;
    sc_signal< sc_lv<9> > col_V_reg_755;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter0;
    sc_signal< sc_lv<1> > icmp_ln887_1_fu_508_p2;
    sc_signal< sc_lv<1> > icmp_ln887_1_reg_760;
    sc_signal< sc_lv<1> > icmp_ln887_1_reg_760_pp1_iter1_reg;
    sc_signal< sc_lv<1> > icmp_ln887_1_reg_760_pp1_iter2_reg;
    sc_signal< sc_lv<1> > icmp_ln891_fu_553_p2;
    sc_signal< sc_lv<8> > src_buf_temp_copy_ex_xfExtractPixels_1_fu_378_ap_return;
    sc_signal< sc_lv<8> > src_buf_temp_copy_ex_1_xfExtractPixels_1_fu_383_ap_return;
    sc_signal< sc_lv<8> > src_buf_temp_copy_ex_2_xfExtractPixels_1_fu_388_ap_return;
    sc_signal< sc_lv<8> > row_V_fu_645_p2;
    sc_signal< sc_logic > ap_CS_fsm_state12;
    sc_signal< bool > ap_block_pp0_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp0_exit_iter0_state3;
    sc_signal< sc_logic > ap_enable_reg_pp0_iter1;
    sc_signal< bool > ap_block_pp1_stage0_subdone;
    sc_signal< sc_logic > ap_condition_pp1_exit_iter0_state8;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter1;
    sc_signal< sc_logic > ap_enable_reg_pp1_iter2;
    sc_signal< sc_lv<9> > buf_0_V_address0;
    sc_signal< sc_logic > buf_0_V_ce0;
    sc_signal< sc_lv<8> > buf_0_V_q0;
    sc_signal< sc_lv<9> > buf_0_V_address1;
    sc_signal< sc_logic > buf_0_V_ce1;
    sc_signal< sc_logic > buf_0_V_we1;
    sc_signal< sc_lv<8> > buf_0_V_d1;
    sc_signal< sc_lv<9> > buf_1_V_address0;
    sc_signal< sc_logic > buf_1_V_ce0;
    sc_signal< sc_lv<8> > buf_1_V_q0;
    sc_signal< sc_lv<9> > buf_1_V_address1;
    sc_signal< sc_logic > buf_1_V_ce1;
    sc_signal< sc_logic > buf_1_V_we1;
    sc_signal< sc_lv<8> > buf_1_V_d1;
    sc_signal< sc_lv<9> > buf_2_V_address0;
    sc_signal< sc_logic > buf_2_V_ce0;
    sc_signal< sc_lv<8> > buf_2_V_q0;
    sc_signal< sc_lv<9> > buf_2_V_address1;
    sc_signal< sc_logic > buf_2_V_ce1;
    sc_signal< sc_logic > buf_2_V_we1;
    sc_signal< sc_lv<8> > buf_2_V_d1;
    sc_signal< sc_logic > src_buf_temp_copy_ex_xfExtractPixels_1_fu_378_ap_ready;
    sc_signal< sc_lv<8> > src_buf_temp_copy_ex_xfExtractPixels_1_fu_378_val1_V_read;
    sc_signal< sc_logic > src_buf_temp_copy_ex_1_xfExtractPixels_1_fu_383_ap_ready;
    sc_signal< sc_lv<8> > src_buf_temp_copy_ex_1_xfExtractPixels_1_fu_383_val1_V_read;
    sc_signal< sc_logic > src_buf_temp_copy_ex_2_xfExtractPixels_1_fu_388_ap_ready;
    sc_signal< sc_lv<8> > src_buf_temp_copy_ex_2_xfExtractPixels_1_fu_388_val1_V_read;
    sc_signal< sc_lv<2> > ap_phi_mux_val_assign_phi_fu_256_p4;
    sc_signal< sc_lv<2> > val_assign_reg_252;
    sc_signal< sc_lv<9> > t_V_reg_274;
    sc_signal< sc_logic > ap_CS_fsm_state5;
    sc_signal< sc_lv<1> > icmp_ln287_fu_450_p2;
    sc_signal< sc_lv<13> > row_ind_1_V_1_reg_285;
    sc_signal< sc_lv<13> > zero_ind_V_reg_306;
    sc_signal< sc_lv<13> > row_ind_0_V_reg_295;
    sc_signal< sc_lv<8> > t_V_1_reg_318;
    sc_signal< sc_lv<9> > ap_phi_mux_t_V_2_phi_fu_370_p4;
    sc_signal< bool > ap_block_pp0_stage0;
    sc_signal< sc_lv<64> > zext_ln544_1_fu_462_p1;
    sc_signal< sc_lv<64> > sext_ln622_fu_517_p1;
    sc_signal< sc_lv<64> > zext_ln544_2_fu_522_p1;
    sc_signal< sc_lv<9> > buf_0_V_addr_1_gep_fu_208_p3;
    sc_signal< sc_lv<9> > buf_1_V_addr_1_gep_fu_214_p3;
    sc_signal< sc_lv<9> > buf_2_V_addr_gep_fu_220_p3;
    sc_signal< sc_lv<64> > zext_ln544_3_fu_546_p1;
    sc_signal< sc_lv<13> > row_ind_2_V_fu_86;
    sc_signal< sc_lv<13> > row_ind_0_V_2_fu_414_p1;
    sc_signal< sc_lv<13> > row_ind_2_V_1_fu_90;
    sc_signal< sc_lv<13> > row_ind_2_V_2_fu_94;
    sc_signal< sc_lv<32> > rd_ind_2_fu_110;
    sc_signal< sc_lv<32> > rd_ind_fu_535_p2;
    sc_signal< sc_lv<32> > ap_sig_allocacmp_rd_ind_2_load_1;
    sc_signal< bool > ap_block_pp1_stage0_01001;
    sc_signal< sc_lv<32> > sext_ln622_fu_517_p0;
    sc_signal< sc_lv<8> > buf_cop_0_V_fu_559_p5;
    sc_signal< sc_lv<8> > tmp_5_fu_570_p5;
    sc_signal< sc_lv<8> > tmp_6_fu_597_p5;
    sc_signal< sc_lv<1> > icmp_ln887_2_fu_616_p2;
    sc_signal< sc_lv<8> > select_ln62_fu_622_p3;
    sc_signal< sc_lv<1> > icmp_ln887_3_fu_630_p2;
    sc_signal< sc_lv<8> > ap_NS_fsm;
    sc_signal< sc_logic > ap_idle_pp0;
    sc_signal< sc_logic > ap_enable_pp0;
    sc_signal< sc_logic > ap_idle_pp1;
    sc_signal< sc_logic > ap_enable_pp1;
    sc_signal< bool > ap_condition_592;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<8> ap_ST_fsm_state1;
    static const sc_lv<8> ap_ST_fsm_state2;
    static const sc_lv<8> ap_ST_fsm_pp0_stage0;
    static const sc_lv<8> ap_ST_fsm_state5;
    static const sc_lv<8> ap_ST_fsm_state6;
    static const sc_lv<8> ap_ST_fsm_state7;
    static const sc_lv<8> ap_ST_fsm_pp1_stage0;
    static const sc_lv<8> ap_ST_fsm_state12;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const bool ap_const_boolean_0;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<32> ap_const_lv32_6;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<32> ap_const_lv32_4;
    static const sc_lv<32> ap_const_lv32_5;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_7;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<9> ap_const_lv9_0;
    static const sc_lv<32> ap_const_lv32_3;
    static const sc_lv<8> ap_const_lv8_1;
    static const sc_lv<8> ap_const_lv8_FF;
    static const sc_lv<2> ap_const_lv2_1;
    static const sc_lv<32> ap_const_lv32_140;
    static const sc_lv<2> ap_const_lv2_3;
    static const sc_lv<9> ap_const_lv9_140;
    static const sc_lv<9> ap_const_lv9_1;
    static const sc_lv<8> ap_const_lv8_B5;
    static const sc_lv<8> ap_const_lv8_B4;
    static const sc_lv<9> ap_const_lv9_141;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln278_fu_439_p2();
    void thread_ap_CS_fsm_pp0_stage0();
    void thread_ap_CS_fsm_pp1_stage0();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state12();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state5();
    void thread_ap_CS_fsm_state6();
    void thread_ap_CS_fsm_state7();
    void thread_ap_block_pp0_stage0();
    void thread_ap_block_pp0_stage0_11001();
    void thread_ap_block_pp0_stage0_subdone();
    void thread_ap_block_pp1_stage0();
    void thread_ap_block_pp1_stage0_01001();
    void thread_ap_block_pp1_stage0_11001();
    void thread_ap_block_pp1_stage0_subdone();
    void thread_ap_block_state10_pp1_stage0_iter2();
    void thread_ap_block_state11_pp1_stage0_iter3();
    void thread_ap_block_state3_pp0_stage0_iter0();
    void thread_ap_block_state4_pp0_stage0_iter1();
    void thread_ap_block_state8_pp1_stage0_iter0();
    void thread_ap_block_state9_pp1_stage0_iter1();
    void thread_ap_condition_592();
    void thread_ap_condition_pp0_exit_iter0_state3();
    void thread_ap_condition_pp1_exit_iter0_state8();
    void thread_ap_done();
    void thread_ap_enable_pp0();
    void thread_ap_enable_pp1();
    void thread_ap_idle();
    void thread_ap_idle_pp0();
    void thread_ap_idle_pp1();
    void thread_ap_phi_mux_t_V_2_phi_fu_370_p4();
    void thread_ap_phi_mux_val_assign_phi_fu_256_p4();
    void thread_ap_ready();
    void thread_ap_sig_allocacmp_rd_ind_2_load_1();
    void thread_buf_0_V_addr_1_gep_fu_208_p3();
    void thread_buf_0_V_address0();
    void thread_buf_0_V_address1();
    void thread_buf_0_V_ce0();
    void thread_buf_0_V_ce1();
    void thread_buf_0_V_d1();
    void thread_buf_0_V_we1();
    void thread_buf_1_V_addr_1_gep_fu_214_p3();
    void thread_buf_1_V_address0();
    void thread_buf_1_V_address1();
    void thread_buf_1_V_ce0();
    void thread_buf_1_V_ce1();
    void thread_buf_1_V_d1();
    void thread_buf_1_V_we1();
    void thread_buf_2_V_addr_gep_fu_220_p3();
    void thread_buf_2_V_address0();
    void thread_buf_2_V_address1();
    void thread_buf_2_V_ce0();
    void thread_buf_2_V_ce1();
    void thread_buf_2_V_d1();
    void thread_buf_2_V_we1();
    void thread_col_V_fu_502_p2();
    void thread_i_col_V_fu_456_p2();
    void thread_icmp_ln110_fu_496_p2();
    void thread_icmp_ln259_fu_402_p2();
    void thread_icmp_ln272_fu_433_p2();
    void thread_icmp_ln287_fu_450_p2();
    void thread_icmp_ln298_fu_472_p2();
    void thread_icmp_ln887_1_fu_508_p2();
    void thread_icmp_ln887_2_fu_616_p2();
    void thread_icmp_ln887_3_fu_630_p2();
    void thread_icmp_ln887_fu_478_p2();
    void thread_icmp_ln891_fu_553_p2();
    void thread_init_row_ind_fu_408_p2();
    void thread_p_dst_data_V_blk_n();
    void thread_p_dst_data_V_din();
    void thread_p_dst_data_V_write();
    void thread_p_src_data_V_address0();
    void thread_p_src_data_V_ce0();
    void thread_rd_ind_fu_535_p2();
    void thread_row_V_fu_645_p2();
    void thread_row_ind_0_V_2_fu_414_p1();
    void thread_select_ln62_fu_622_p3();
    void thread_sext_ln622_fu_517_p0();
    void thread_sext_ln622_fu_517_p1();
    void thread_src_buf_temp_copy_ex_1_xfExtractPixels_1_fu_383_val1_V_read();
    void thread_src_buf_temp_copy_ex_2_xfExtractPixels_1_fu_388_val1_V_read();
    void thread_src_buf_temp_copy_ex_xfExtractPixels_1_fu_378_val1_V_read();
    void thread_trunc_ln321_1_fu_488_p1();
    void thread_trunc_ln321_2_fu_492_p1();
    void thread_trunc_ln321_fu_484_p1();
    void thread_zext_ln544_1_fu_462_p1();
    void thread_zext_ln544_2_fu_522_p1();
    void thread_zext_ln544_3_fu_546_p1();
    void thread_zext_ln544_fu_445_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
