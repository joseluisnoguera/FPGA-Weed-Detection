// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _get_max_from_channel_HH_
#define _get_max_from_channel_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "minMaxLoc435.h"
#include "minMaxLoc436.h"
#include "minMaxLoc.h"
#include "p_prop_ret_max_b_dc_s.h"
#include "p_prop_ret_max_g_dc_s.h"
#include "p_prop_ret_max_r_dc_s.h"
#include "fifo_w32_d2_A.h"

namespace ap_rtl {

struct get_max_from_channel : public sc_module {
    // Port declarations 25
    sc_in< sc_lv<8> > r_channel_data_V_dout;
    sc_in< sc_logic > r_channel_data_V_empty_n;
    sc_out< sc_logic > r_channel_data_V_read;
    sc_in< sc_lv<8> > g_channel_data_V_dout;
    sc_in< sc_logic > g_channel_data_V_empty_n;
    sc_out< sc_logic > g_channel_data_V_read;
    sc_in< sc_lv<8> > b_channel_data_V_dout;
    sc_in< sc_logic > b_channel_data_V_empty_n;
    sc_out< sc_logic > b_channel_data_V_read;
    sc_out< sc_lv<32> > max_r_out_din;
    sc_in< sc_logic > max_r_out_full_n;
    sc_out< sc_logic > max_r_out_write;
    sc_out< sc_lv<32> > max_g_out_din;
    sc_in< sc_logic > max_g_out_full_n;
    sc_out< sc_logic > max_g_out_write;
    sc_out< sc_lv<32> > max_b_out_din;
    sc_in< sc_logic > max_b_out_full_n;
    sc_out< sc_logic > max_b_out_write;
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > ap_idle;
    sc_in< sc_logic > ap_continue;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    get_max_from_channel(sc_module_name name);
    SC_HAS_PROCESS(get_max_from_channel);

    ~get_max_from_channel();

    sc_trace_file* mVcdFile;

    minMaxLoc435* minMaxLoc435_U0;
    minMaxLoc436* minMaxLoc436_U0;
    minMaxLoc* minMaxLoc_U0;
    p_prop_ret_max_b_dc_s* p_prop_ret_max_b_dc_U0;
    p_prop_ret_max_g_dc_s* p_prop_ret_max_g_dc_U0;
    p_prop_ret_max_r_dc_s* p_prop_ret_max_r_dc_U0;
    fifo_w32_d2_A* max_r_dc_channel_U;
    fifo_w32_d2_A* max_g_dc_channel_U;
    fifo_w32_d2_A* max_b_dc_channel_U;
    sc_signal< sc_logic > minMaxLoc435_U0_ap_start;
    sc_signal< sc_logic > minMaxLoc435_U0_ap_done;
    sc_signal< sc_logic > minMaxLoc435_U0_ap_continue;
    sc_signal< sc_logic > minMaxLoc435_U0_ap_idle;
    sc_signal< sc_logic > minMaxLoc435_U0_ap_ready;
    sc_signal< sc_logic > minMaxLoc435_U0_p_src_data_V_read;
    sc_signal< sc_lv<32> > minMaxLoc435_U0_ap_return;
    sc_signal< sc_logic > ap_channel_done_max_r_dc_channel;
    sc_signal< sc_logic > max_r_dc_channel_full_n;
    sc_signal< sc_logic > minMaxLoc436_U0_ap_start;
    sc_signal< sc_logic > minMaxLoc436_U0_ap_done;
    sc_signal< sc_logic > minMaxLoc436_U0_ap_continue;
    sc_signal< sc_logic > minMaxLoc436_U0_ap_idle;
    sc_signal< sc_logic > minMaxLoc436_U0_ap_ready;
    sc_signal< sc_logic > minMaxLoc436_U0_p_src_data_V_read;
    sc_signal< sc_lv<32> > minMaxLoc436_U0_ap_return;
    sc_signal< sc_logic > ap_channel_done_max_g_dc_channel;
    sc_signal< sc_logic > max_g_dc_channel_full_n;
    sc_signal< sc_logic > minMaxLoc_U0_ap_start;
    sc_signal< sc_logic > minMaxLoc_U0_ap_done;
    sc_signal< sc_logic > minMaxLoc_U0_ap_continue;
    sc_signal< sc_logic > minMaxLoc_U0_ap_idle;
    sc_signal< sc_logic > minMaxLoc_U0_ap_ready;
    sc_signal< sc_logic > minMaxLoc_U0_p_src_data_V_read;
    sc_signal< sc_lv<32> > minMaxLoc_U0_ap_return;
    sc_signal< sc_logic > ap_channel_done_max_b_dc_channel;
    sc_signal< sc_logic > max_b_dc_channel_full_n;
    sc_signal< sc_logic > p_prop_ret_max_b_dc_U0_ap_start;
    sc_signal< sc_logic > p_prop_ret_max_b_dc_U0_ap_done;
    sc_signal< sc_logic > p_prop_ret_max_b_dc_U0_ap_continue;
    sc_signal< sc_logic > p_prop_ret_max_b_dc_U0_ap_idle;
    sc_signal< sc_logic > p_prop_ret_max_b_dc_U0_ap_ready;
    sc_signal< sc_lv<32> > p_prop_ret_max_b_dc_U0_max_b_out_din;
    sc_signal< sc_logic > p_prop_ret_max_b_dc_U0_max_b_out_write;
    sc_signal< sc_logic > ap_sync_continue;
    sc_signal< sc_logic > p_prop_ret_max_g_dc_U0_ap_start;
    sc_signal< sc_logic > p_prop_ret_max_g_dc_U0_ap_done;
    sc_signal< sc_logic > p_prop_ret_max_g_dc_U0_ap_continue;
    sc_signal< sc_logic > p_prop_ret_max_g_dc_U0_ap_idle;
    sc_signal< sc_logic > p_prop_ret_max_g_dc_U0_ap_ready;
    sc_signal< sc_lv<32> > p_prop_ret_max_g_dc_U0_max_g_out_din;
    sc_signal< sc_logic > p_prop_ret_max_g_dc_U0_max_g_out_write;
    sc_signal< sc_logic > p_prop_ret_max_r_dc_U0_ap_start;
    sc_signal< sc_logic > p_prop_ret_max_r_dc_U0_ap_done;
    sc_signal< sc_logic > p_prop_ret_max_r_dc_U0_ap_continue;
    sc_signal< sc_logic > p_prop_ret_max_r_dc_U0_ap_idle;
    sc_signal< sc_logic > p_prop_ret_max_r_dc_U0_ap_ready;
    sc_signal< sc_lv<32> > p_prop_ret_max_r_dc_U0_max_r_out_din;
    sc_signal< sc_logic > p_prop_ret_max_r_dc_U0_max_r_out_write;
    sc_signal< sc_lv<32> > max_r_dc_channel_dout;
    sc_signal< sc_logic > max_r_dc_channel_empty_n;
    sc_signal< sc_lv<32> > max_g_dc_channel_dout;
    sc_signal< sc_logic > max_g_dc_channel_empty_n;
    sc_signal< sc_lv<32> > max_b_dc_channel_dout;
    sc_signal< sc_logic > max_b_dc_channel_empty_n;
    sc_signal< sc_logic > ap_sync_done;
    sc_signal< sc_logic > ap_sync_ready;
    sc_signal< sc_logic > ap_sync_reg_minMaxLoc435_U0_ap_ready;
    sc_signal< sc_logic > ap_sync_minMaxLoc435_U0_ap_ready;
    sc_signal< sc_lv<2> > minMaxLoc435_U0_ap_ready_count;
    sc_signal< sc_logic > ap_sync_reg_minMaxLoc436_U0_ap_ready;
    sc_signal< sc_logic > ap_sync_minMaxLoc436_U0_ap_ready;
    sc_signal< sc_lv<2> > minMaxLoc436_U0_ap_ready_count;
    sc_signal< sc_logic > ap_sync_reg_minMaxLoc_U0_ap_ready;
    sc_signal< sc_logic > ap_sync_minMaxLoc_U0_ap_ready;
    sc_signal< sc_lv<2> > minMaxLoc_U0_ap_ready_count;
    sc_signal< sc_logic > minMaxLoc435_U0_start_full_n;
    sc_signal< sc_logic > minMaxLoc435_U0_start_write;
    sc_signal< sc_logic > minMaxLoc436_U0_start_full_n;
    sc_signal< sc_logic > minMaxLoc436_U0_start_write;
    sc_signal< sc_logic > minMaxLoc_U0_start_full_n;
    sc_signal< sc_logic > minMaxLoc_U0_start_write;
    sc_signal< sc_logic > p_prop_ret_max_b_dc_U0_start_full_n;
    sc_signal< sc_logic > p_prop_ret_max_b_dc_U0_start_write;
    sc_signal< sc_logic > p_prop_ret_max_g_dc_U0_start_full_n;
    sc_signal< sc_logic > p_prop_ret_max_g_dc_U0_start_write;
    sc_signal< sc_logic > p_prop_ret_max_r_dc_U0_start_full_n;
    sc_signal< sc_logic > p_prop_ret_max_r_dc_U0_start_write;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_logic ap_const_logic_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_ap_channel_done_max_b_dc_channel();
    void thread_ap_channel_done_max_g_dc_channel();
    void thread_ap_channel_done_max_r_dc_channel();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sync_continue();
    void thread_ap_sync_done();
    void thread_ap_sync_minMaxLoc435_U0_ap_ready();
    void thread_ap_sync_minMaxLoc436_U0_ap_ready();
    void thread_ap_sync_minMaxLoc_U0_ap_ready();
    void thread_ap_sync_ready();
    void thread_b_channel_data_V_read();
    void thread_g_channel_data_V_read();
    void thread_max_b_out_din();
    void thread_max_b_out_write();
    void thread_max_g_out_din();
    void thread_max_g_out_write();
    void thread_max_r_out_din();
    void thread_max_r_out_write();
    void thread_minMaxLoc435_U0_ap_continue();
    void thread_minMaxLoc435_U0_ap_start();
    void thread_minMaxLoc435_U0_start_full_n();
    void thread_minMaxLoc435_U0_start_write();
    void thread_minMaxLoc436_U0_ap_continue();
    void thread_minMaxLoc436_U0_ap_start();
    void thread_minMaxLoc436_U0_start_full_n();
    void thread_minMaxLoc436_U0_start_write();
    void thread_minMaxLoc_U0_ap_continue();
    void thread_minMaxLoc_U0_ap_start();
    void thread_minMaxLoc_U0_start_full_n();
    void thread_minMaxLoc_U0_start_write();
    void thread_p_prop_ret_max_b_dc_U0_ap_continue();
    void thread_p_prop_ret_max_b_dc_U0_ap_start();
    void thread_p_prop_ret_max_b_dc_U0_start_full_n();
    void thread_p_prop_ret_max_b_dc_U0_start_write();
    void thread_p_prop_ret_max_g_dc_U0_ap_continue();
    void thread_p_prop_ret_max_g_dc_U0_ap_start();
    void thread_p_prop_ret_max_g_dc_U0_start_full_n();
    void thread_p_prop_ret_max_g_dc_U0_start_write();
    void thread_p_prop_ret_max_r_dc_U0_ap_continue();
    void thread_p_prop_ret_max_r_dc_U0_ap_start();
    void thread_p_prop_ret_max_r_dc_U0_start_full_n();
    void thread_p_prop_ret_max_r_dc_U0_start_write();
    void thread_r_channel_data_V_read();
};

}

using namespace ap_rtl;

#endif
