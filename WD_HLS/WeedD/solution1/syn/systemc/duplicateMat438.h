// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _duplicateMat438_HH_
#define _duplicateMat438_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "duplicateMat438_Bloc.h"
#include "duplicateMat438_Loop.h"
#include "xFDuplicate_1.h"
#include "duplicateMat438_Loop_1.h"
#include "fifo_w10_d2_A_x2.h"
#include "fifo_w8_d2_A_x.h"
#include "start_for_xFDupliDeQ.h"
#include "start_for_duplicaEe0.h"

namespace ap_rtl {

struct duplicateMat438 : public sc_module {
    // Port declarations 19
    sc_in< sc_logic > ap_start;
    sc_in< sc_logic > start_full_n;
    sc_out< sc_logic > start_out;
    sc_out< sc_logic > start_write;
    sc_in< sc_lv<8> > p_src_data_V_dout;
    sc_in< sc_logic > p_src_data_V_empty_n;
    sc_out< sc_logic > p_src_data_V_read;
    sc_out< sc_lv<8> > p_dst1_data_V_din;
    sc_in< sc_logic > p_dst1_data_V_full_n;
    sc_out< sc_logic > p_dst1_data_V_write;
    sc_out< sc_lv<8> > p_dst2_data_V_din;
    sc_in< sc_logic > p_dst2_data_V_full_n;
    sc_out< sc_logic > p_dst2_data_V_write;
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > ap_idle;
    sc_in< sc_logic > ap_continue;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    duplicateMat438(sc_module_name name);
    SC_HAS_PROCESS(duplicateMat438);

    ~duplicateMat438();

    sc_trace_file* mVcdFile;

    duplicateMat438_Bloc* duplicateMat438_Bloc_U0;
    duplicateMat438_Loop* duplicateMat438_Loop_U0;
    xFDuplicate_1* xFDuplicate_1_U0;
    duplicateMat438_Loop_1* duplicateMat438_Loop_1_U0;
    fifo_w10_d2_A_x2* p_src_cols_load7_loc_1_U;
    fifo_w8_d2_A_x* src_V_V_U;
    fifo_w10_d2_A_x2* p_src_cols_load7_loc_s_U;
    fifo_w8_d2_A_x* dst_V_V_U;
    fifo_w8_d2_A_x* dst1_V_V_U;
    start_for_xFDupliDeQ* start_for_xFDupliDeQ_U;
    start_for_duplicaEe0* start_for_duplicaEe0_U;
    sc_signal< sc_logic > real_start;
    sc_signal< sc_logic > start_once_reg;
    sc_signal< sc_logic > internal_ap_ready;
    sc_signal< sc_logic > duplicateMat438_Bloc_U0_ap_start;
    sc_signal< sc_logic > duplicateMat438_Bloc_U0_ap_done;
    sc_signal< sc_logic > duplicateMat438_Bloc_U0_ap_continue;
    sc_signal< sc_logic > duplicateMat438_Bloc_U0_ap_idle;
    sc_signal< sc_logic > duplicateMat438_Bloc_U0_ap_ready;
    sc_signal< sc_lv<10> > duplicateMat438_Bloc_U0_p_src_cols_load7_out_out_din;
    sc_signal< sc_logic > duplicateMat438_Bloc_U0_p_src_cols_load7_out_out_write;
    sc_signal< sc_logic > duplicateMat438_Loop_U0_ap_start;
    sc_signal< sc_logic > duplicateMat438_Loop_U0_ap_done;
    sc_signal< sc_logic > duplicateMat438_Loop_U0_ap_continue;
    sc_signal< sc_logic > duplicateMat438_Loop_U0_ap_idle;
    sc_signal< sc_logic > duplicateMat438_Loop_U0_ap_ready;
    sc_signal< sc_logic > duplicateMat438_Loop_U0_start_out;
    sc_signal< sc_logic > duplicateMat438_Loop_U0_start_write;
    sc_signal< sc_logic > duplicateMat438_Loop_U0_p_src_cols_load7_loc_read;
    sc_signal< sc_logic > duplicateMat438_Loop_U0_p_src_data_V_read;
    sc_signal< sc_lv<8> > duplicateMat438_Loop_U0_src_V_V_din;
    sc_signal< sc_logic > duplicateMat438_Loop_U0_src_V_V_write;
    sc_signal< sc_lv<10> > duplicateMat438_Loop_U0_p_src_cols_load7_loc_out_din;
    sc_signal< sc_logic > duplicateMat438_Loop_U0_p_src_cols_load7_loc_out_write;
    sc_signal< sc_logic > xFDuplicate_1_U0_ap_start;
    sc_signal< sc_logic > xFDuplicate_1_U0_ap_done;
    sc_signal< sc_logic > xFDuplicate_1_U0_ap_continue;
    sc_signal< sc_logic > xFDuplicate_1_U0_ap_idle;
    sc_signal< sc_logic > xFDuplicate_1_U0_ap_ready;
    sc_signal< sc_logic > xFDuplicate_1_U0_start_out;
    sc_signal< sc_logic > xFDuplicate_1_U0_start_write;
    sc_signal< sc_logic > xFDuplicate_1_U0_p_src_mat_V_V_read;
    sc_signal< sc_lv<8> > xFDuplicate_1_U0_p_dst1_mat_V_V_din;
    sc_signal< sc_logic > xFDuplicate_1_U0_p_dst1_mat_V_V_write;
    sc_signal< sc_lv<8> > xFDuplicate_1_U0_p_dst2_mat_V_V_din;
    sc_signal< sc_logic > xFDuplicate_1_U0_p_dst2_mat_V_V_write;
    sc_signal< sc_logic > xFDuplicate_1_U0_p_src_cols_load7_loc_read;
    sc_signal< sc_logic > duplicateMat438_Loop_1_U0_ap_start;
    sc_signal< sc_logic > duplicateMat438_Loop_1_U0_ap_done;
    sc_signal< sc_logic > duplicateMat438_Loop_1_U0_ap_continue;
    sc_signal< sc_logic > duplicateMat438_Loop_1_U0_ap_idle;
    sc_signal< sc_logic > duplicateMat438_Loop_1_U0_ap_ready;
    sc_signal< sc_logic > duplicateMat438_Loop_1_U0_dst_V_V_read;
    sc_signal< sc_lv<8> > duplicateMat438_Loop_1_U0_p_dst1_data_V_din;
    sc_signal< sc_logic > duplicateMat438_Loop_1_U0_p_dst1_data_V_write;
    sc_signal< sc_logic > duplicateMat438_Loop_1_U0_dst1_V_V_read;
    sc_signal< sc_lv<8> > duplicateMat438_Loop_1_U0_p_dst2_data_V_din;
    sc_signal< sc_logic > duplicateMat438_Loop_1_U0_p_dst2_data_V_write;
    sc_signal< sc_logic > ap_sync_continue;
    sc_signal< sc_logic > p_src_cols_load7_loc_1_full_n;
    sc_signal< sc_lv<10> > p_src_cols_load7_loc_1_dout;
    sc_signal< sc_logic > p_src_cols_load7_loc_1_empty_n;
    sc_signal< sc_logic > src_V_V_full_n;
    sc_signal< sc_lv<8> > src_V_V_dout;
    sc_signal< sc_logic > src_V_V_empty_n;
    sc_signal< sc_logic > p_src_cols_load7_loc_s_full_n;
    sc_signal< sc_lv<10> > p_src_cols_load7_loc_s_dout;
    sc_signal< sc_logic > p_src_cols_load7_loc_s_empty_n;
    sc_signal< sc_logic > dst_V_V_full_n;
    sc_signal< sc_lv<8> > dst_V_V_dout;
    sc_signal< sc_logic > dst_V_V_empty_n;
    sc_signal< sc_logic > dst1_V_V_full_n;
    sc_signal< sc_lv<8> > dst1_V_V_dout;
    sc_signal< sc_logic > dst1_V_V_empty_n;
    sc_signal< sc_logic > ap_sync_done;
    sc_signal< sc_logic > ap_sync_ready;
    sc_signal< sc_logic > ap_sync_reg_duplicateMat438_Bloc_U0_ap_ready;
    sc_signal< sc_logic > ap_sync_duplicateMat438_Bloc_U0_ap_ready;
    sc_signal< sc_lv<2> > duplicateMat438_Bloc_U0_ap_ready_count;
    sc_signal< sc_logic > ap_sync_reg_duplicateMat438_Loop_U0_ap_ready;
    sc_signal< sc_logic > ap_sync_duplicateMat438_Loop_U0_ap_ready;
    sc_signal< sc_lv<2> > duplicateMat438_Loop_U0_ap_ready_count;
    sc_signal< sc_logic > duplicateMat438_Bloc_U0_start_full_n;
    sc_signal< sc_logic > duplicateMat438_Bloc_U0_start_write;
    sc_signal< sc_lv<1> > start_for_xFDuplicate_1_U0_din;
    sc_signal< sc_logic > start_for_xFDuplicate_1_U0_full_n;
    sc_signal< sc_lv<1> > start_for_xFDuplicate_1_U0_dout;
    sc_signal< sc_logic > start_for_xFDuplicate_1_U0_empty_n;
    sc_signal< sc_lv<1> > start_for_duplicateMat438_Loop_1_U0_din;
    sc_signal< sc_logic > start_for_duplicateMat438_Loop_1_U0_full_n;
    sc_signal< sc_lv<1> > start_for_duplicateMat438_Loop_1_U0_dout;
    sc_signal< sc_logic > start_for_duplicateMat438_Loop_1_U0_empty_n;
    sc_signal< sc_logic > duplicateMat438_Loop_1_U0_start_full_n;
    sc_signal< sc_logic > duplicateMat438_Loop_1_U0_start_write;
    static const sc_logic ap_const_logic_0;
    static const bool ap_const_boolean_1;
    static const sc_logic ap_const_logic_1;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sync_continue();
    void thread_ap_sync_done();
    void thread_ap_sync_duplicateMat438_Bloc_U0_ap_ready();
    void thread_ap_sync_duplicateMat438_Loop_U0_ap_ready();
    void thread_ap_sync_ready();
    void thread_duplicateMat438_Bloc_U0_ap_continue();
    void thread_duplicateMat438_Bloc_U0_ap_start();
    void thread_duplicateMat438_Bloc_U0_start_full_n();
    void thread_duplicateMat438_Bloc_U0_start_write();
    void thread_duplicateMat438_Loop_1_U0_ap_continue();
    void thread_duplicateMat438_Loop_1_U0_ap_start();
    void thread_duplicateMat438_Loop_1_U0_start_full_n();
    void thread_duplicateMat438_Loop_1_U0_start_write();
    void thread_duplicateMat438_Loop_U0_ap_continue();
    void thread_duplicateMat438_Loop_U0_ap_start();
    void thread_internal_ap_ready();
    void thread_p_dst1_data_V_din();
    void thread_p_dst1_data_V_write();
    void thread_p_dst2_data_V_din();
    void thread_p_dst2_data_V_write();
    void thread_p_src_data_V_read();
    void thread_real_start();
    void thread_start_for_duplicateMat438_Loop_1_U0_din();
    void thread_start_for_xFDuplicate_1_U0_din();
    void thread_start_out();
    void thread_start_write();
    void thread_xFDuplicate_1_U0_ap_continue();
    void thread_xFDuplicate_1_U0_ap_start();
};

}

using namespace ap_rtl;

#endif
