// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "get_last_centroids.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_lv<7> get_last_centroids::ap_const_lv7_0 = "0000000";
const sc_logic get_last_centroids::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<48> get_last_centroids::ap_const_lv48_0 = "000000000000000000000000000000000000000000000000";
const sc_lv<2> get_last_centroids::ap_const_lv2_0 = "00";
const sc_logic get_last_centroids::ap_const_logic_1 = sc_dt::Log_1;

get_last_centroids::get_last_centroids(sc_module_name name) : sc_module(name), mVcdFile(0) {
    get_last_centroids_L_U0 = new get_last_centroids_L("get_last_centroids_L_U0");
    get_last_centroids_L_U0->ap_clk(ap_clk);
    get_last_centroids_L_U0->ap_rst(ap_rst);
    get_last_centroids_L_U0->ap_start(get_last_centroids_L_U0_ap_start);
    get_last_centroids_L_U0->ap_done(get_last_centroids_L_U0_ap_done);
    get_last_centroids_L_U0->ap_continue(get_last_centroids_L_U0_ap_continue);
    get_last_centroids_L_U0->ap_idle(get_last_centroids_L_U0_ap_idle);
    get_last_centroids_L_U0->ap_ready(get_last_centroids_L_U0_ap_ready);
    get_last_centroids_L_U0->size(size);
    get_last_centroids_L_U0->seg_index_start(seg_index_start);
    get_last_centroids_L_U0->selected_line(selected_line);
    get_last_centroids_L_U0->centroids_address0(get_last_centroids_L_U0_centroids_address0);
    get_last_centroids_L_U0->centroids_ce0(get_last_centroids_L_U0_centroids_ce0);
    get_last_centroids_L_U0->centroids_q0(centroids_q0);
    get_last_centroids_L_U0->last_c_2_address0(get_last_centroids_L_U0_last_c_2_address0);
    get_last_centroids_L_U0->last_c_2_ce0(get_last_centroids_L_U0_last_c_2_ce0);
    get_last_centroids_L_U0->last_c_2_we0(get_last_centroids_L_U0_last_c_2_we0);
    get_last_centroids_L_U0->last_c_2_d0(get_last_centroids_L_U0_last_c_2_d0);

    SC_METHOD(thread_ap_done);
    sensitive << ( get_last_centroids_L_U0_ap_done );

    SC_METHOD(thread_ap_idle);
    sensitive << ( get_last_centroids_L_U0_ap_idle );

    SC_METHOD(thread_ap_ready);
    sensitive << ( get_last_centroids_L_U0_ap_ready );

    SC_METHOD(thread_ap_sync_continue);
    sensitive << ( ap_continue );

    SC_METHOD(thread_ap_sync_done);
    sensitive << ( get_last_centroids_L_U0_ap_done );

    SC_METHOD(thread_ap_sync_ready);
    sensitive << ( get_last_centroids_L_U0_ap_ready );

    SC_METHOD(thread_centroids_address0);
    sensitive << ( get_last_centroids_L_U0_centroids_address0 );

    SC_METHOD(thread_centroids_address1);

    SC_METHOD(thread_centroids_ce0);
    sensitive << ( get_last_centroids_L_U0_centroids_ce0 );

    SC_METHOD(thread_centroids_ce1);

    SC_METHOD(thread_centroids_d0);

    SC_METHOD(thread_centroids_d1);

    SC_METHOD(thread_centroids_we0);

    SC_METHOD(thread_centroids_we1);

    SC_METHOD(thread_get_last_centroids_L_U0_ap_continue);
    sensitive << ( ap_continue );

    SC_METHOD(thread_get_last_centroids_L_U0_ap_start);
    sensitive << ( ap_start );

    SC_METHOD(thread_get_last_centroids_L_U0_start_full_n);

    SC_METHOD(thread_get_last_centroids_L_U0_start_write);

    SC_METHOD(thread_last_c_2_address0);
    sensitive << ( get_last_centroids_L_U0_last_c_2_address0 );

    SC_METHOD(thread_last_c_2_address1);

    SC_METHOD(thread_last_c_2_ce0);
    sensitive << ( get_last_centroids_L_U0_last_c_2_ce0 );

    SC_METHOD(thread_last_c_2_ce1);

    SC_METHOD(thread_last_c_2_d0);
    sensitive << ( get_last_centroids_L_U0_last_c_2_d0 );

    SC_METHOD(thread_last_c_2_d1);

    SC_METHOD(thread_last_c_2_we0);
    sensitive << ( get_last_centroids_L_U0_last_c_2_we0 );

    SC_METHOD(thread_last_c_2_we1);

    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "get_last_centroids_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, centroids_address0, "(port)centroids_address0");
    sc_trace(mVcdFile, centroids_ce0, "(port)centroids_ce0");
    sc_trace(mVcdFile, centroids_d0, "(port)centroids_d0");
    sc_trace(mVcdFile, centroids_q0, "(port)centroids_q0");
    sc_trace(mVcdFile, centroids_we0, "(port)centroids_we0");
    sc_trace(mVcdFile, centroids_address1, "(port)centroids_address1");
    sc_trace(mVcdFile, centroids_ce1, "(port)centroids_ce1");
    sc_trace(mVcdFile, centroids_d1, "(port)centroids_d1");
    sc_trace(mVcdFile, centroids_q1, "(port)centroids_q1");
    sc_trace(mVcdFile, centroids_we1, "(port)centroids_we1");
    sc_trace(mVcdFile, selected_line, "(port)selected_line");
    sc_trace(mVcdFile, last_c_2_address0, "(port)last_c_2_address0");
    sc_trace(mVcdFile, last_c_2_ce0, "(port)last_c_2_ce0");
    sc_trace(mVcdFile, last_c_2_d0, "(port)last_c_2_d0");
    sc_trace(mVcdFile, last_c_2_q0, "(port)last_c_2_q0");
    sc_trace(mVcdFile, last_c_2_we0, "(port)last_c_2_we0");
    sc_trace(mVcdFile, last_c_2_address1, "(port)last_c_2_address1");
    sc_trace(mVcdFile, last_c_2_ce1, "(port)last_c_2_ce1");
    sc_trace(mVcdFile, last_c_2_d1, "(port)last_c_2_d1");
    sc_trace(mVcdFile, last_c_2_q1, "(port)last_c_2_q1");
    sc_trace(mVcdFile, last_c_2_we1, "(port)last_c_2_we1");
    sc_trace(mVcdFile, seg_index_start, "(port)seg_index_start");
    sc_trace(mVcdFile, size, "(port)size");
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, size_ap_vld, "(port)size_ap_vld");
    sc_trace(mVcdFile, seg_index_start_ap_vld, "(port)seg_index_start_ap_vld");
    sc_trace(mVcdFile, selected_line_ap_vld, "(port)selected_line_ap_vld");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, get_last_centroids_L_U0_ap_start, "get_last_centroids_L_U0_ap_start");
    sc_trace(mVcdFile, get_last_centroids_L_U0_ap_done, "get_last_centroids_L_U0_ap_done");
    sc_trace(mVcdFile, get_last_centroids_L_U0_ap_continue, "get_last_centroids_L_U0_ap_continue");
    sc_trace(mVcdFile, get_last_centroids_L_U0_ap_idle, "get_last_centroids_L_U0_ap_idle");
    sc_trace(mVcdFile, get_last_centroids_L_U0_ap_ready, "get_last_centroids_L_U0_ap_ready");
    sc_trace(mVcdFile, get_last_centroids_L_U0_centroids_address0, "get_last_centroids_L_U0_centroids_address0");
    sc_trace(mVcdFile, get_last_centroids_L_U0_centroids_ce0, "get_last_centroids_L_U0_centroids_ce0");
    sc_trace(mVcdFile, get_last_centroids_L_U0_last_c_2_address0, "get_last_centroids_L_U0_last_c_2_address0");
    sc_trace(mVcdFile, get_last_centroids_L_U0_last_c_2_ce0, "get_last_centroids_L_U0_last_c_2_ce0");
    sc_trace(mVcdFile, get_last_centroids_L_U0_last_c_2_we0, "get_last_centroids_L_U0_last_c_2_we0");
    sc_trace(mVcdFile, get_last_centroids_L_U0_last_c_2_d0, "get_last_centroids_L_U0_last_c_2_d0");
    sc_trace(mVcdFile, ap_sync_continue, "ap_sync_continue");
    sc_trace(mVcdFile, ap_sync_done, "ap_sync_done");
    sc_trace(mVcdFile, ap_sync_ready, "ap_sync_ready");
    sc_trace(mVcdFile, get_last_centroids_L_U0_start_full_n, "get_last_centroids_L_U0_start_full_n");
    sc_trace(mVcdFile, get_last_centroids_L_U0_start_write, "get_last_centroids_L_U0_start_write");
#endif

    }
}

get_last_centroids::~get_last_centroids() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete get_last_centroids_L_U0;
}

void get_last_centroids::thread_ap_done() {
    ap_done = get_last_centroids_L_U0_ap_done.read();
}

void get_last_centroids::thread_ap_idle() {
    ap_idle = get_last_centroids_L_U0_ap_idle.read();
}

void get_last_centroids::thread_ap_ready() {
    ap_ready = get_last_centroids_L_U0_ap_ready.read();
}

void get_last_centroids::thread_ap_sync_continue() {
    ap_sync_continue = ap_continue.read();
}

void get_last_centroids::thread_ap_sync_done() {
    ap_sync_done = get_last_centroids_L_U0_ap_done.read();
}

void get_last_centroids::thread_ap_sync_ready() {
    ap_sync_ready = get_last_centroids_L_U0_ap_ready.read();
}

void get_last_centroids::thread_centroids_address0() {
    centroids_address0 = get_last_centroids_L_U0_centroids_address0.read();
}

void get_last_centroids::thread_centroids_address1() {
    centroids_address1 = ap_const_lv7_0;
}

void get_last_centroids::thread_centroids_ce0() {
    centroids_ce0 = get_last_centroids_L_U0_centroids_ce0.read();
}

void get_last_centroids::thread_centroids_ce1() {
    centroids_ce1 = ap_const_logic_0;
}

void get_last_centroids::thread_centroids_d0() {
    centroids_d0 = ap_const_lv48_0;
}

void get_last_centroids::thread_centroids_d1() {
    centroids_d1 = ap_const_lv48_0;
}

void get_last_centroids::thread_centroids_we0() {
    centroids_we0 = ap_const_logic_0;
}

void get_last_centroids::thread_centroids_we1() {
    centroids_we1 = ap_const_logic_0;
}

void get_last_centroids::thread_get_last_centroids_L_U0_ap_continue() {
    get_last_centroids_L_U0_ap_continue = ap_continue.read();
}

void get_last_centroids::thread_get_last_centroids_L_U0_ap_start() {
    get_last_centroids_L_U0_ap_start = ap_start.read();
}

void get_last_centroids::thread_get_last_centroids_L_U0_start_full_n() {
    get_last_centroids_L_U0_start_full_n = ap_const_logic_1;
}

void get_last_centroids::thread_get_last_centroids_L_U0_start_write() {
    get_last_centroids_L_U0_start_write = ap_const_logic_0;
}

void get_last_centroids::thread_last_c_2_address0() {
    last_c_2_address0 = get_last_centroids_L_U0_last_c_2_address0.read();
}

void get_last_centroids::thread_last_c_2_address1() {
    last_c_2_address1 = ap_const_lv2_0;
}

void get_last_centroids::thread_last_c_2_ce0() {
    last_c_2_ce0 = get_last_centroids_L_U0_last_c_2_ce0.read();
}

void get_last_centroids::thread_last_c_2_ce1() {
    last_c_2_ce1 = ap_const_logic_0;
}

void get_last_centroids::thread_last_c_2_d0() {
    last_c_2_d0 = get_last_centroids_L_U0_last_c_2_d0.read();
}

void get_last_centroids::thread_last_c_2_d1() {
    last_c_2_d1 = ap_const_lv48_0;
}

void get_last_centroids::thread_last_c_2_we0() {
    last_c_2_we0 = get_last_centroids_L_U0_last_c_2_we0.read();
}

void get_last_centroids::thread_last_c_2_we1() {
    last_c_2_we1 = ap_const_logic_0;
}

}

