// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "is_crop_or_furrow.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic is_crop_or_furrow::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic is_crop_or_furrow::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<6> is_crop_or_furrow::ap_ST_fsm_state1 = "1";
const sc_lv<6> is_crop_or_furrow::ap_ST_fsm_state2 = "10";
const sc_lv<6> is_crop_or_furrow::ap_ST_fsm_state3 = "100";
const sc_lv<6> is_crop_or_furrow::ap_ST_fsm_state4 = "1000";
const sc_lv<6> is_crop_or_furrow::ap_ST_fsm_state5 = "10000";
const sc_lv<6> is_crop_or_furrow::ap_ST_fsm_state6 = "100000";
const sc_lv<32> is_crop_or_furrow::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> is_crop_or_furrow::ap_const_lv32_1 = "1";
const sc_lv<1> is_crop_or_furrow::ap_const_lv1_0 = "0";
const sc_lv<1> is_crop_or_furrow::ap_const_lv1_1 = "1";
const sc_lv<32> is_crop_or_furrow::ap_const_lv32_2 = "10";
const sc_lv<3> is_crop_or_furrow::ap_const_lv3_0 = "000";
const sc_lv<32> is_crop_or_furrow::ap_const_lv32_5 = "101";
const sc_lv<2> is_crop_or_furrow::ap_const_lv2_1 = "1";
const sc_lv<3> is_crop_or_furrow::ap_const_lv3_6 = "110";
const sc_lv<3> is_crop_or_furrow::ap_const_lv3_1 = "1";
const sc_lv<2> is_crop_or_furrow::ap_const_lv2_3 = "11";
const sc_lv<2> is_crop_or_furrow::ap_const_lv2_0 = "00";
const sc_lv<32> is_crop_or_furrow::ap_const_lv32_18 = "11000";
const sc_lv<32> is_crop_or_furrow::ap_const_lv32_19 = "11001";
const sc_lv<32> is_crop_or_furrow::ap_const_lv32_38 = "111000";
const sc_lv<8> is_crop_or_furrow::ap_const_lv8_0 = "00000000";
const sc_lv<32> is_crop_or_furrow::ap_const_lv32_8 = "1000";
const sc_lv<32> is_crop_or_furrow::ap_const_lv32_28 = "101000";
const sc_lv<33> is_crop_or_furrow::ap_const_lv33_1 = "1";
const bool is_crop_or_furrow::ap_const_boolean_1 = true;

is_crop_or_furrow::is_crop_or_furrow(sc_module_name name) : sc_module(name), mVcdFile(0) {
    ip_accel_app_mul_Zio_U478 = new ip_accel_app_mul_Zio<1,4,16,24,40>("ip_accel_app_mul_Zio_U478");
    ip_accel_app_mul_Zio_U478->clk(ap_clk);
    ip_accel_app_mul_Zio_U478->reset(ap_rst);
    ip_accel_app_mul_Zio_U478->din0(grp_fu_386_p0);
    ip_accel_app_mul_Zio_U478->din1(lines_m_V_1_load_new_fu_213_p4);
    ip_accel_app_mul_Zio_U478->ce(ap_var_for_const0);
    ip_accel_app_mul_Zio_U478->dout(grp_fu_386_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_and_ln402_fu_195_p2);
    sensitive << ( icmp_ln402_fu_185_p2 );
    sensitive << ( icmp_ln402_1_fu_190_p2 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_condition_134);
    sensitive << ( icmp_ln385_reg_433 );
    sensitive << ( trunc_ln386_reg_452 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( or_ln390_fu_324_p2 );

    SC_METHOD(thread_ap_condition_268);
    sensitive << ( icmp_ln385_reg_433 );
    sensitive << ( trunc_ln386_reg_452 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( icmp_ln385_reg_433 );
    sensitive << ( trunc_ln386_reg_452 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( or_ln390_fu_324_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_phi_mux_UnifiedRetVal_phi_fu_134_p4);
    sensitive << ( icmp_ln385_reg_433 );
    sensitive << ( trunc_ln386_reg_452 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( or_ln390_fu_324_p2 );
    sensitive << ( UnifiedRetVal_reg_131 );

    SC_METHOD(thread_ap_phi_mux_p_033_0_i_phi_fu_125_p4);
    sensitive << ( select_ln851_fu_291_p3 );
    sensitive << ( p_Result_s_fu_268_p3 );
    sensitive << ( ret_V_13_fu_251_p2 );
    sensitive << ( ap_condition_268 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( icmp_ln385_reg_433 );
    sensitive << ( trunc_ln386_reg_452 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( or_ln390_fu_324_p2 );

    SC_METHOD(thread_ap_return);
    sensitive << ( icmp_ln385_reg_433 );
    sensitive << ( trunc_ln386_reg_452 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( or_ln390_fu_324_p2 );
    sensitive << ( ap_phi_mux_UnifiedRetVal_phi_fu_134_p4 );
    sensitive << ( ap_return_preg );

    SC_METHOD(thread_flag_first_0_load_load_fu_330_p1);
    sensitive << ( icmp_ln385_reg_433 );
    sensitive << ( trunc_ln386_reg_452 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( or_ln390_fu_324_p2 );
    sensitive << ( flag_first_0_fu_76 );

    SC_METHOD(thread_grp_fu_386_p0);
    sensitive << ( zext_ln1118_reg_414 );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_i_fu_174_p2);
    sensitive << ( i_0_reg_111 );

    SC_METHOD(thread_icmp_ln385_fu_168_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i_0_reg_111 );

    SC_METHOD(thread_icmp_ln390_1_fu_319_p2);
    sensitive << ( zext_ln390_reg_425 );
    sensitive << ( icmp_ln385_reg_433 );
    sensitive << ( trunc_ln386_reg_452 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( most_left_fu_304_p2 );

    SC_METHOD(thread_icmp_ln390_fu_314_p2);
    sensitive << ( zext_ln390_reg_425 );
    sensitive << ( icmp_ln385_reg_433 );
    sensitive << ( trunc_ln386_reg_452 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( most_right_fu_309_p2 );

    SC_METHOD(thread_icmp_ln397_fu_338_p2);
    sensitive << ( icmp_ln385_reg_433 );
    sensitive << ( trunc_ln386_reg_452 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( or_ln390_fu_324_p2 );
    sensitive << ( flag_first_0_load_load_fu_330_p1 );
    sensitive << ( tmp_most_left_fu_72 );
    sensitive << ( most_left_fu_304_p2 );

    SC_METHOD(thread_icmp_ln398_fu_352_p2);
    sensitive << ( icmp_ln385_reg_433 );
    sensitive << ( trunc_ln386_reg_452 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( or_ln390_fu_324_p2 );
    sensitive << ( most_right_2_fu_68 );
    sensitive << ( flag_first_0_load_load_fu_330_p1 );
    sensitive << ( most_right_fu_309_p2 );

    SC_METHOD(thread_icmp_ln402_1_fu_190_p2);
    sensitive << ( zext_ln390_reg_425 );
    sensitive << ( icmp_ln385_fu_168_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( most_right_2_fu_68 );

    SC_METHOD(thread_icmp_ln402_fu_185_p2);
    sensitive << ( zext_ln390_reg_425 );
    sensitive << ( icmp_ln385_fu_168_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( tmp_most_left_fu_72 );

    SC_METHOD(thread_icmp_ln851_fu_279_p2);
    sensitive << ( icmp_ln385_reg_433 );
    sensitive << ( trunc_ln386_reg_452 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( p_Result_s_fu_268_p3 );
    sensitive << ( trunc_ln851_fu_276_p1 );

    SC_METHOD(thread_lhs_V_fu_237_p1);
    sensitive << ( grp_fu_386_p2 );

    SC_METHOD(thread_lines_address0);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( zext_ln386_fu_180_p1 );

    SC_METHOD(thread_lines_ce0);
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_lines_m_V_1_load_new_fu_213_p4);
    sensitive << ( lines_q0 );

    SC_METHOD(thread_most_left_fu_304_p2);
    sensitive << ( zext_ln388_reg_419 );
    sensitive << ( trunc_ln555_fu_300_p1 );

    SC_METHOD(thread_most_right_3_fu_358_p3);
    sensitive << ( most_right_2_fu_68 );
    sensitive << ( most_right_fu_309_p2 );
    sensitive << ( icmp_ln398_fu_352_p2 );

    SC_METHOD(thread_most_right_fu_309_p2);
    sensitive << ( zext_ln388_reg_419 );
    sensitive << ( trunc_ln555_fu_300_p1 );

    SC_METHOD(thread_or_ln390_fu_324_p2);
    sensitive << ( icmp_ln390_fu_314_p2 );
    sensitive << ( icmp_ln390_1_fu_319_p2 );

    SC_METHOD(thread_p_Result_s_fu_268_p3);
    sensitive << ( ret_V_13_fu_251_p2 );

    SC_METHOD(thread_ret_V_12_fu_285_p2);
    sensitive << ( ret_V_fu_257_p4 );

    SC_METHOD(thread_ret_V_13_fu_251_p2);
    sensitive << ( lhs_V_fu_237_p1 );
    sensitive << ( sext_ln728_fu_247_p1 );

    SC_METHOD(thread_ret_V_fu_257_p4);
    sensitive << ( ret_V_13_fu_251_p2 );

    SC_METHOD(thread_rhs_V_fu_240_p3);
    sensitive << ( tmp_reg_461 );

    SC_METHOD(thread_select_ln397_fu_344_p3);
    sensitive << ( tmp_most_left_fu_72 );
    sensitive << ( most_left_fu_304_p2 );
    sensitive << ( icmp_ln397_fu_338_p2 );

    SC_METHOD(thread_select_ln405_fu_201_p3);
    sensitive << ( and_ln402_fu_195_p2 );

    SC_METHOD(thread_select_ln851_fu_291_p3);
    sensitive << ( ret_V_fu_257_p4 );
    sensitive << ( icmp_ln851_fu_279_p2 );
    sensitive << ( ret_V_12_fu_285_p2 );

    SC_METHOD(thread_sext_ln378_fu_147_p1);
    sensitive << ( px_read );

    SC_METHOD(thread_sext_ln728_fu_247_p1);
    sensitive << ( rhs_V_fu_240_p3 );

    SC_METHOD(thread_trunc_ln386_fu_209_p1);
    sensitive << ( lines_q0 );

    SC_METHOD(thread_trunc_ln555_fu_300_p1);
    sensitive << ( ap_phi_mux_p_033_0_i_phi_fu_125_p4 );

    SC_METHOD(thread_trunc_ln851_fu_276_p1);
    sensitive << ( grp_fu_386_p2 );

    SC_METHOD(thread_zext_ln1118_fu_151_p1);
    sensitive << ( sext_ln378_fu_147_p1 );

    SC_METHOD(thread_zext_ln386_fu_180_p1);
    sensitive << ( i_0_reg_111 );

    SC_METHOD(thread_zext_ln388_fu_155_p1);
    sensitive << ( crop_width_read );

    SC_METHOD(thread_zext_ln390_fu_159_p1);
    sensitive << ( py_read );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( icmp_ln385_fu_168_p2 );
    sensitive << ( icmp_ln385_reg_433 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( trunc_ln386_fu_209_p1 );
    sensitive << ( trunc_ln386_reg_452 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( or_ln390_fu_324_p2 );

    SC_THREAD(thread_ap_var_for_const0);

    ap_CS_fsm = "000001";
    ap_return_preg = "00";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "is_crop_or_furrow_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, lines_address0, "(port)lines_address0");
    sc_trace(mVcdFile, lines_ce0, "(port)lines_ce0");
    sc_trace(mVcdFile, lines_q0, "(port)lines_q0");
    sc_trace(mVcdFile, px_read, "(port)px_read");
    sc_trace(mVcdFile, py_read, "(port)py_read");
    sc_trace(mVcdFile, crop_width_read, "(port)crop_width_read");
    sc_trace(mVcdFile, ap_return, "(port)ap_return");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, zext_ln1118_fu_151_p1, "zext_ln1118_fu_151_p1");
    sc_trace(mVcdFile, zext_ln1118_reg_414, "zext_ln1118_reg_414");
    sc_trace(mVcdFile, zext_ln388_fu_155_p1, "zext_ln388_fu_155_p1");
    sc_trace(mVcdFile, zext_ln388_reg_419, "zext_ln388_reg_419");
    sc_trace(mVcdFile, zext_ln390_fu_159_p1, "zext_ln390_fu_159_p1");
    sc_trace(mVcdFile, zext_ln390_reg_425, "zext_ln390_reg_425");
    sc_trace(mVcdFile, icmp_ln385_fu_168_p2, "icmp_ln385_fu_168_p2");
    sc_trace(mVcdFile, icmp_ln385_reg_433, "icmp_ln385_reg_433");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, i_fu_174_p2, "i_fu_174_p2");
    sc_trace(mVcdFile, i_reg_437, "i_reg_437");
    sc_trace(mVcdFile, select_ln405_fu_201_p3, "select_ln405_fu_201_p3");
    sc_trace(mVcdFile, trunc_ln386_fu_209_p1, "trunc_ln386_fu_209_p1");
    sc_trace(mVcdFile, trunc_ln386_reg_452, "trunc_ln386_reg_452");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, tmp_reg_461, "tmp_reg_461");
    sc_trace(mVcdFile, i_0_reg_111, "i_0_reg_111");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, or_ln390_fu_324_p2, "or_ln390_fu_324_p2");
    sc_trace(mVcdFile, select_ln851_fu_291_p3, "select_ln851_fu_291_p3");
    sc_trace(mVcdFile, ap_phi_mux_p_033_0_i_phi_fu_125_p4, "ap_phi_mux_p_033_0_i_phi_fu_125_p4");
    sc_trace(mVcdFile, p_Result_s_fu_268_p3, "p_Result_s_fu_268_p3");
    sc_trace(mVcdFile, ret_V_fu_257_p4, "ret_V_fu_257_p4");
    sc_trace(mVcdFile, ap_phi_mux_UnifiedRetVal_phi_fu_134_p4, "ap_phi_mux_UnifiedRetVal_phi_fu_134_p4");
    sc_trace(mVcdFile, UnifiedRetVal_reg_131, "UnifiedRetVal_reg_131");
    sc_trace(mVcdFile, zext_ln386_fu_180_p1, "zext_ln386_fu_180_p1");
    sc_trace(mVcdFile, most_right_2_fu_68, "most_right_2_fu_68");
    sc_trace(mVcdFile, most_right_3_fu_358_p3, "most_right_3_fu_358_p3");
    sc_trace(mVcdFile, flag_first_0_load_load_fu_330_p1, "flag_first_0_load_load_fu_330_p1");
    sc_trace(mVcdFile, most_right_fu_309_p2, "most_right_fu_309_p2");
    sc_trace(mVcdFile, tmp_most_left_fu_72, "tmp_most_left_fu_72");
    sc_trace(mVcdFile, select_ln397_fu_344_p3, "select_ln397_fu_344_p3");
    sc_trace(mVcdFile, most_left_fu_304_p2, "most_left_fu_304_p2");
    sc_trace(mVcdFile, flag_first_0_fu_76, "flag_first_0_fu_76");
    sc_trace(mVcdFile, sext_ln378_fu_147_p1, "sext_ln378_fu_147_p1");
    sc_trace(mVcdFile, icmp_ln402_fu_185_p2, "icmp_ln402_fu_185_p2");
    sc_trace(mVcdFile, icmp_ln402_1_fu_190_p2, "icmp_ln402_1_fu_190_p2");
    sc_trace(mVcdFile, and_ln402_fu_195_p2, "and_ln402_fu_195_p2");
    sc_trace(mVcdFile, lines_m_V_1_load_new_fu_213_p4, "lines_m_V_1_load_new_fu_213_p4");
    sc_trace(mVcdFile, grp_fu_386_p2, "grp_fu_386_p2");
    sc_trace(mVcdFile, rhs_V_fu_240_p3, "rhs_V_fu_240_p3");
    sc_trace(mVcdFile, lhs_V_fu_237_p1, "lhs_V_fu_237_p1");
    sc_trace(mVcdFile, sext_ln728_fu_247_p1, "sext_ln728_fu_247_p1");
    sc_trace(mVcdFile, ret_V_13_fu_251_p2, "ret_V_13_fu_251_p2");
    sc_trace(mVcdFile, trunc_ln851_fu_276_p1, "trunc_ln851_fu_276_p1");
    sc_trace(mVcdFile, icmp_ln851_fu_279_p2, "icmp_ln851_fu_279_p2");
    sc_trace(mVcdFile, ret_V_12_fu_285_p2, "ret_V_12_fu_285_p2");
    sc_trace(mVcdFile, trunc_ln555_fu_300_p1, "trunc_ln555_fu_300_p1");
    sc_trace(mVcdFile, icmp_ln390_fu_314_p2, "icmp_ln390_fu_314_p2");
    sc_trace(mVcdFile, icmp_ln390_1_fu_319_p2, "icmp_ln390_1_fu_319_p2");
    sc_trace(mVcdFile, icmp_ln397_fu_338_p2, "icmp_ln397_fu_338_p2");
    sc_trace(mVcdFile, icmp_ln398_fu_352_p2, "icmp_ln398_fu_352_p2");
    sc_trace(mVcdFile, grp_fu_386_p0, "grp_fu_386_p0");
    sc_trace(mVcdFile, ap_return_preg, "ap_return_preg");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_condition_268, "ap_condition_268");
    sc_trace(mVcdFile, ap_condition_134, "ap_condition_134");
#endif

    }
}

is_crop_or_furrow::~is_crop_or_furrow() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete ip_accel_app_mul_Zio_U478;
}

void is_crop_or_furrow::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void is_crop_or_furrow::thread_ap_clk_no_reset_() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(icmp_ln385_reg_433.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, trunc_ln386_reg_452.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, or_ln390_fu_324_p2.read()))) {
        UnifiedRetVal_reg_131 = ap_const_lv2_1;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(icmp_ln385_fu_168_p2.read(), ap_const_lv1_1))) {
        UnifiedRetVal_reg_131 = select_ln405_fu_201_p3.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_return_preg = ap_const_lv2_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
             ((esl_seteq<1,1,1>(ap_const_lv1_1, trunc_ln386_reg_452.read()) && 
               esl_seteq<1,1,1>(ap_const_lv1_0, or_ln390_fu_324_p2.read())) || 
              esl_seteq<1,1,1>(icmp_ln385_reg_433.read(), ap_const_lv1_1)))) {
            ap_return_preg = ap_phi_mux_UnifiedRetVal_phi_fu_134_p4.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(icmp_ln385_reg_433.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, or_ln390_fu_324_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, trunc_ln386_reg_452.read()))) {
        flag_first_0_fu_76 = ap_const_lv1_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        flag_first_0_fu_76 = ap_const_lv1_1;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         ((esl_seteq<1,1,1>(icmp_ln385_reg_433.read(), ap_const_lv1_0) && 
           esl_seteq<1,1,1>(ap_const_lv1_1, or_ln390_fu_324_p2.read())) || 
          (esl_seteq<1,1,1>(icmp_ln385_reg_433.read(), ap_const_lv1_0) && 
           esl_seteq<1,1,1>(ap_const_lv1_0, trunc_ln386_reg_452.read()))))) {
        i_0_reg_111 = i_reg_437.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        i_0_reg_111 = ap_const_lv3_0;
    }
    if (esl_seteq<1,1,1>(ap_condition_134.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, flag_first_0_load_load_fu_330_p1.read())) {
            most_right_2_fu_68 = most_right_fu_309_p2.read();
        } else if (esl_seteq<1,1,1>(ap_const_lv1_0, flag_first_0_load_load_fu_330_p1.read())) {
            most_right_2_fu_68 = most_right_3_fu_358_p3.read();
        }
    }
    if (esl_seteq<1,1,1>(ap_condition_134.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, flag_first_0_load_load_fu_330_p1.read())) {
            tmp_most_left_fu_72 = most_left_fu_304_p2.read();
        } else if (esl_seteq<1,1,1>(ap_const_lv1_0, flag_first_0_load_load_fu_330_p1.read())) {
            tmp_most_left_fu_72 = select_ln397_fu_344_p3.read();
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_reg_437 = i_fu_174_p2.read();
        icmp_ln385_reg_433 = icmp_ln385_fu_168_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, trunc_ln386_fu_209_p1.read()))) {
        tmp_reg_461 = lines_q0.read().range(56, 25);
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        trunc_ln386_reg_452 = trunc_ln386_fu_209_p1.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        zext_ln1118_reg_414 = zext_ln1118_fu_151_p1.read();
        zext_ln388_reg_419 = zext_ln388_fu_155_p1.read();
        zext_ln390_reg_425 = zext_ln390_fu_159_p1.read();
    }
}

void is_crop_or_furrow::thread_and_ln402_fu_195_p2() {
    and_ln402_fu_195_p2 = (icmp_ln402_fu_185_p2.read() & icmp_ln402_1_fu_190_p2.read());
}

void is_crop_or_furrow::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void is_crop_or_furrow::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void is_crop_or_furrow::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void is_crop_or_furrow::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void is_crop_or_furrow::thread_ap_condition_134() {
    ap_condition_134 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(icmp_ln385_reg_433.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_1, or_ln390_fu_324_p2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, trunc_ln386_reg_452.read()));
}

void is_crop_or_furrow::thread_ap_condition_268() {
    ap_condition_268 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(icmp_ln385_reg_433.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_const_lv1_1, trunc_ln386_reg_452.read()));
}

void is_crop_or_furrow::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
          ((esl_seteq<1,1,1>(ap_const_lv1_1, trunc_ln386_reg_452.read()) && 
            esl_seteq<1,1,1>(ap_const_lv1_0, or_ln390_fu_324_p2.read())) || 
           esl_seteq<1,1,1>(icmp_ln385_reg_433.read(), ap_const_lv1_1))))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void is_crop_or_furrow::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void is_crop_or_furrow::thread_ap_phi_mux_UnifiedRetVal_phi_fu_134_p4() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(icmp_ln385_reg_433.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, trunc_ln386_reg_452.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, or_ln390_fu_324_p2.read()))) {
        ap_phi_mux_UnifiedRetVal_phi_fu_134_p4 = ap_const_lv2_1;
    } else {
        ap_phi_mux_UnifiedRetVal_phi_fu_134_p4 = UnifiedRetVal_reg_131.read();
    }
}

void is_crop_or_furrow::thread_ap_phi_mux_p_033_0_i_phi_fu_125_p4() {
    if (esl_seteq<1,1,1>(ap_condition_268.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(ap_const_lv1_0, p_Result_s_fu_268_p3.read())) {
            ap_phi_mux_p_033_0_i_phi_fu_125_p4 = ret_V_13_fu_251_p2.read().range(40, 8);
        } else if (esl_seteq<1,1,1>(ap_const_lv1_1, p_Result_s_fu_268_p3.read())) {
            ap_phi_mux_p_033_0_i_phi_fu_125_p4 = select_ln851_fu_291_p3.read();
        } else {
            ap_phi_mux_p_033_0_i_phi_fu_125_p4 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        }
    } else {
        ap_phi_mux_p_033_0_i_phi_fu_125_p4 = "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
    }
}

void is_crop_or_furrow::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         ((esl_seteq<1,1,1>(ap_const_lv1_1, trunc_ln386_reg_452.read()) && 
           esl_seteq<1,1,1>(ap_const_lv1_0, or_ln390_fu_324_p2.read())) || 
          esl_seteq<1,1,1>(icmp_ln385_reg_433.read(), ap_const_lv1_1)))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void is_crop_or_furrow::thread_ap_return() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         ((esl_seteq<1,1,1>(ap_const_lv1_1, trunc_ln386_reg_452.read()) && 
           esl_seteq<1,1,1>(ap_const_lv1_0, or_ln390_fu_324_p2.read())) || 
          esl_seteq<1,1,1>(icmp_ln385_reg_433.read(), ap_const_lv1_1)))) {
        ap_return = ap_phi_mux_UnifiedRetVal_phi_fu_134_p4.read();
    } else {
        ap_return = ap_return_preg.read();
    }
}

void is_crop_or_furrow::thread_flag_first_0_load_load_fu_330_p1() {
    flag_first_0_load_load_fu_330_p1 = flag_first_0_fu_76.read();
}

void is_crop_or_furrow::thread_grp_fu_386_p0() {
    grp_fu_386_p0 =  (sc_lv<16>) (zext_ln1118_reg_414.read());
}

void is_crop_or_furrow::thread_i_fu_174_p2() {
    i_fu_174_p2 = (!i_0_reg_111.read().is_01() || !ap_const_lv3_1.is_01())? sc_lv<3>(): (sc_biguint<3>(i_0_reg_111.read()) + sc_biguint<3>(ap_const_lv3_1));
}

void is_crop_or_furrow::thread_icmp_ln385_fu_168_p2() {
    icmp_ln385_fu_168_p2 = (!i_0_reg_111.read().is_01() || !ap_const_lv3_6.is_01())? sc_lv<1>(): sc_lv<1>(i_0_reg_111.read() == ap_const_lv3_6);
}

void is_crop_or_furrow::thread_icmp_ln390_1_fu_319_p2() {
    icmp_ln390_1_fu_319_p2 = (!zext_ln390_reg_425.read().is_01() || !most_left_fu_304_p2.read().is_01())? sc_lv<1>(): (sc_bigint<32>(zext_ln390_reg_425.read()) < sc_bigint<32>(most_left_fu_304_p2.read()));
}

void is_crop_or_furrow::thread_icmp_ln390_fu_314_p2() {
    icmp_ln390_fu_314_p2 = (!zext_ln390_reg_425.read().is_01() || !most_right_fu_309_p2.read().is_01())? sc_lv<1>(): (sc_bigint<32>(zext_ln390_reg_425.read()) > sc_bigint<32>(most_right_fu_309_p2.read()));
}

void is_crop_or_furrow::thread_icmp_ln397_fu_338_p2() {
    icmp_ln397_fu_338_p2 = (!most_left_fu_304_p2.read().is_01() || !tmp_most_left_fu_72.read().is_01())? sc_lv<1>(): (sc_bigint<32>(most_left_fu_304_p2.read()) < sc_bigint<32>(tmp_most_left_fu_72.read()));
}

void is_crop_or_furrow::thread_icmp_ln398_fu_352_p2() {
    icmp_ln398_fu_352_p2 = (!most_right_fu_309_p2.read().is_01() || !most_right_2_fu_68.read().is_01())? sc_lv<1>(): (sc_bigint<32>(most_right_fu_309_p2.read()) > sc_bigint<32>(most_right_2_fu_68.read()));
}

void is_crop_or_furrow::thread_icmp_ln402_1_fu_190_p2() {
    icmp_ln402_1_fu_190_p2 = (!zext_ln390_reg_425.read().is_01() || !most_right_2_fu_68.read().is_01())? sc_lv<1>(): (sc_bigint<32>(zext_ln390_reg_425.read()) < sc_bigint<32>(most_right_2_fu_68.read()));
}

void is_crop_or_furrow::thread_icmp_ln402_fu_185_p2() {
    icmp_ln402_fu_185_p2 = (!zext_ln390_reg_425.read().is_01() || !tmp_most_left_fu_72.read().is_01())? sc_lv<1>(): (sc_bigint<32>(zext_ln390_reg_425.read()) > sc_bigint<32>(tmp_most_left_fu_72.read()));
}

void is_crop_or_furrow::thread_icmp_ln851_fu_279_p2() {
    icmp_ln851_fu_279_p2 = (!trunc_ln851_fu_276_p1.read().is_01() || !ap_const_lv8_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln851_fu_276_p1.read() == ap_const_lv8_0);
}

void is_crop_or_furrow::thread_lhs_V_fu_237_p1() {
    lhs_V_fu_237_p1 = esl_sext<41,40>(grp_fu_386_p2.read());
}

void is_crop_or_furrow::thread_lines_address0() {
    lines_address0 =  (sc_lv<3>) (zext_ln386_fu_180_p1.read());
}

void is_crop_or_furrow::thread_lines_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        lines_ce0 = ap_const_logic_1;
    } else {
        lines_ce0 = ap_const_logic_0;
    }
}

void is_crop_or_furrow::thread_lines_m_V_1_load_new_fu_213_p4() {
    lines_m_V_1_load_new_fu_213_p4 = lines_q0.read().range(24, 1);
}

void is_crop_or_furrow::thread_most_left_fu_304_p2() {
    most_left_fu_304_p2 = (!trunc_ln555_fu_300_p1.read().is_01() || !zext_ln388_reg_419.read().is_01())? sc_lv<32>(): (sc_biguint<32>(trunc_ln555_fu_300_p1.read()) - sc_biguint<32>(zext_ln388_reg_419.read()));
}

void is_crop_or_furrow::thread_most_right_3_fu_358_p3() {
    most_right_3_fu_358_p3 = (!icmp_ln398_fu_352_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln398_fu_352_p2.read()[0].to_bool())? most_right_fu_309_p2.read(): most_right_2_fu_68.read());
}

void is_crop_or_furrow::thread_most_right_fu_309_p2() {
    most_right_fu_309_p2 = (!trunc_ln555_fu_300_p1.read().is_01() || !zext_ln388_reg_419.read().is_01())? sc_lv<32>(): (sc_biguint<32>(trunc_ln555_fu_300_p1.read()) + sc_biguint<32>(zext_ln388_reg_419.read()));
}

void is_crop_or_furrow::thread_or_ln390_fu_324_p2() {
    or_ln390_fu_324_p2 = (icmp_ln390_fu_314_p2.read() | icmp_ln390_1_fu_319_p2.read());
}

void is_crop_or_furrow::thread_p_Result_s_fu_268_p3() {
    p_Result_s_fu_268_p3 = ret_V_13_fu_251_p2.read().range(40, 40);
}

void is_crop_or_furrow::thread_ret_V_12_fu_285_p2() {
    ret_V_12_fu_285_p2 = (!ap_const_lv33_1.is_01() || !ret_V_fu_257_p4.read().is_01())? sc_lv<33>(): (sc_biguint<33>(ap_const_lv33_1) + sc_biguint<33>(ret_V_fu_257_p4.read()));
}

void is_crop_or_furrow::thread_ret_V_13_fu_251_p2() {
    ret_V_13_fu_251_p2 = (!lhs_V_fu_237_p1.read().is_01() || !sext_ln728_fu_247_p1.read().is_01())? sc_lv<41>(): (sc_bigint<41>(lhs_V_fu_237_p1.read()) + sc_bigint<41>(sext_ln728_fu_247_p1.read()));
}

void is_crop_or_furrow::thread_ret_V_fu_257_p4() {
    ret_V_fu_257_p4 = ret_V_13_fu_251_p2.read().range(40, 8);
}

void is_crop_or_furrow::thread_rhs_V_fu_240_p3() {
    rhs_V_fu_240_p3 = esl_concat<32,8>(tmp_reg_461.read(), ap_const_lv8_0);
}

void is_crop_or_furrow::thread_select_ln397_fu_344_p3() {
    select_ln397_fu_344_p3 = (!icmp_ln397_fu_338_p2.read()[0].is_01())? sc_lv<32>(): ((icmp_ln397_fu_338_p2.read()[0].to_bool())? most_left_fu_304_p2.read(): tmp_most_left_fu_72.read());
}

void is_crop_or_furrow::thread_select_ln405_fu_201_p3() {
    select_ln405_fu_201_p3 = (!and_ln402_fu_195_p2.read()[0].is_01())? sc_lv<2>(): ((and_ln402_fu_195_p2.read()[0].to_bool())? ap_const_lv2_3: ap_const_lv2_0);
}

void is_crop_or_furrow::thread_select_ln851_fu_291_p3() {
    select_ln851_fu_291_p3 = (!icmp_ln851_fu_279_p2.read()[0].is_01())? sc_lv<33>(): ((icmp_ln851_fu_279_p2.read()[0].to_bool())? ret_V_fu_257_p4.read(): ret_V_12_fu_285_p2.read());
}

void is_crop_or_furrow::thread_sext_ln378_fu_147_p1() {
    sext_ln378_fu_147_p1 = esl_sext<16,9>(px_read.read());
}

void is_crop_or_furrow::thread_sext_ln728_fu_247_p1() {
    sext_ln728_fu_247_p1 = esl_sext<41,40>(rhs_V_fu_240_p3.read());
}

void is_crop_or_furrow::thread_trunc_ln386_fu_209_p1() {
    trunc_ln386_fu_209_p1 = lines_q0.read().range(1-1, 0);
}

void is_crop_or_furrow::thread_trunc_ln555_fu_300_p1() {
    trunc_ln555_fu_300_p1 = ap_phi_mux_p_033_0_i_phi_fu_125_p4.read().range(32-1, 0);
}

void is_crop_or_furrow::thread_trunc_ln851_fu_276_p1() {
    trunc_ln851_fu_276_p1 = grp_fu_386_p2.read().range(8-1, 0);
}

void is_crop_or_furrow::thread_zext_ln1118_fu_151_p1() {
    zext_ln1118_fu_151_p1 = esl_zext<40,16>(sext_ln378_fu_147_p1.read());
}

void is_crop_or_furrow::thread_zext_ln386_fu_180_p1() {
    zext_ln386_fu_180_p1 = esl_zext<64,3>(i_0_reg_111.read());
}

void is_crop_or_furrow::thread_zext_ln388_fu_155_p1() {
    zext_ln388_fu_155_p1 = esl_zext<32,5>(crop_width_read.read());
}

void is_crop_or_furrow::thread_zext_ln390_fu_159_p1() {
    zext_ln390_fu_159_p1 = esl_zext<32,9>(py_read.read());
}

void is_crop_or_furrow::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln385_fu_168_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, trunc_ln386_fu_209_p1.read()))) {
                ap_NS_fsm = ap_ST_fsm_state6;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && ((esl_seteq<1,1,1>(ap_const_lv1_1, trunc_ln386_reg_452.read()) && 
   esl_seteq<1,1,1>(ap_const_lv1_0, or_ln390_fu_324_p2.read())) || 
  esl_seteq<1,1,1>(icmp_ln385_reg_433.read(), ap_const_lv1_1)))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<6>) ("XXXXXX");
            break;
    }
}

}

