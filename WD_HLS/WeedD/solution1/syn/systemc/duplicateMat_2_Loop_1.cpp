// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "duplicateMat_2_Loop_1.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic duplicateMat_2_Loop_1::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic duplicateMat_2_Loop_1::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<4> duplicateMat_2_Loop_1::ap_ST_fsm_state1 = "1";
const sc_lv<4> duplicateMat_2_Loop_1::ap_ST_fsm_state2 = "10";
const sc_lv<4> duplicateMat_2_Loop_1::ap_ST_fsm_pp0_stage0 = "100";
const sc_lv<4> duplicateMat_2_Loop_1::ap_ST_fsm_state5 = "1000";
const sc_lv<32> duplicateMat_2_Loop_1::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool duplicateMat_2_Loop_1::ap_const_boolean_1 = true;
const sc_lv<32> duplicateMat_2_Loop_1::ap_const_lv32_2 = "10";
const bool duplicateMat_2_Loop_1::ap_const_boolean_0 = false;
const sc_lv<1> duplicateMat_2_Loop_1::ap_const_lv1_1 = "1";
const sc_lv<32> duplicateMat_2_Loop_1::ap_const_lv32_1 = "1";
const sc_lv<1> duplicateMat_2_Loop_1::ap_const_lv1_0 = "0";
const sc_lv<32> duplicateMat_2_Loop_1::ap_const_lv32_3 = "11";

duplicateMat_2_Loop_1::duplicateMat_2_Loop_1(sc_module_name name) : sc_module(name), mVcdFile(0) {
    call_ln113_write_r_fu_100 = new write_r("call_ln113_write_r_fu_100");
    call_ln113_write_r_fu_100->ap_clk(ap_clk);
    call_ln113_write_r_fu_100->ap_rst(ap_rst);
    call_ln113_write_r_fu_100->ap_start(call_ln113_write_r_fu_100_ap_start);
    call_ln113_write_r_fu_100->ap_done(call_ln113_write_r_fu_100_ap_done);
    call_ln113_write_r_fu_100->ap_idle(call_ln113_write_r_fu_100_ap_idle);
    call_ln113_write_r_fu_100->ap_ready(call_ln113_write_r_fu_100_ap_ready);
    call_ln113_write_r_fu_100->val_V(dst_V_V_dout);
    call_ln113_write_r_fu_100->Mat_9_720_1280_1_data_V_addr_din(call_ln113_write_r_fu_100_Mat_9_720_1280_1_data_V_addr_din);
    call_ln113_write_r_fu_100->Mat_9_720_1280_1_data_V_addr_full_n(p_dst1_data_V_full_n);
    call_ln113_write_r_fu_100->Mat_9_720_1280_1_data_V_addr_write(call_ln113_write_r_fu_100_Mat_9_720_1280_1_data_V_addr_write);
    call_ln113_write_r_fu_100->Mat_9_720_1280_1_data_V_addr_blk_n(call_ln113_write_r_fu_100_Mat_9_720_1280_1_data_V_addr_blk_n);
    call_ln113_write_r_fu_100->ap_ce(call_ln113_write_r_fu_100_ap_ce);
    call_ln114_write_r_fu_108 = new write_r("call_ln114_write_r_fu_108");
    call_ln114_write_r_fu_108->ap_clk(ap_clk);
    call_ln114_write_r_fu_108->ap_rst(ap_rst);
    call_ln114_write_r_fu_108->ap_start(call_ln114_write_r_fu_108_ap_start);
    call_ln114_write_r_fu_108->ap_done(call_ln114_write_r_fu_108_ap_done);
    call_ln114_write_r_fu_108->ap_idle(call_ln114_write_r_fu_108_ap_idle);
    call_ln114_write_r_fu_108->ap_ready(call_ln114_write_r_fu_108_ap_ready);
    call_ln114_write_r_fu_108->val_V(dst1_V_V_dout);
    call_ln114_write_r_fu_108->Mat_9_720_1280_1_data_V_addr_din(call_ln114_write_r_fu_108_Mat_9_720_1280_1_data_V_addr_din);
    call_ln114_write_r_fu_108->Mat_9_720_1280_1_data_V_addr_full_n(p_dst2_data_V_full_n);
    call_ln114_write_r_fu_108->Mat_9_720_1280_1_data_V_addr_write(call_ln114_write_r_fu_108_Mat_9_720_1280_1_data_V_addr_write);
    call_ln114_write_r_fu_108->Mat_9_720_1280_1_data_V_addr_blk_n(call_ln114_write_r_fu_108_Mat_9_720_1280_1_data_V_addr_blk_n);
    call_ln114_write_r_fu_108->ap_ce(call_ln114_write_r_fu_108_ap_ce);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( dst_V_V_empty_n );
    sensitive << ( dst1_V_V_empty_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln108_reg_165 );
    sensitive << ( call_ln113_write_r_fu_100_Mat_9_720_1280_1_data_V_addr_blk_n );
    sensitive << ( call_ln114_write_r_fu_108_Mat_9_720_1280_1_data_V_addr_blk_n );

    SC_METHOD(thread_ap_block_pp0_stage0_11001_ignoreCallOp37);
    sensitive << ( dst_V_V_empty_n );
    sensitive << ( dst1_V_V_empty_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln108_reg_165 );
    sensitive << ( call_ln114_write_r_fu_108_Mat_9_720_1280_1_data_V_addr_blk_n );

    SC_METHOD(thread_ap_block_pp0_stage0_11001_ignoreCallOp39);
    sensitive << ( dst_V_V_empty_n );
    sensitive << ( dst1_V_V_empty_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln108_reg_165 );
    sensitive << ( call_ln113_write_r_fu_100_Mat_9_720_1280_1_data_V_addr_blk_n );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( dst_V_V_empty_n );
    sensitive << ( dst1_V_V_empty_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln108_reg_165 );
    sensitive << ( call_ln113_write_r_fu_100_Mat_9_720_1280_1_data_V_addr_blk_n );
    sensitive << ( call_ln114_write_r_fu_108_Mat_9_720_1280_1_data_V_addr_blk_n );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( p_dst1_rows_empty_n );
    sensitive << ( p_dst1_cols_empty_n );

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter0_ignore_call4);

    SC_METHOD(thread_ap_block_state3_pp0_stage0_iter0_ignore_call6);

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter1);
    sensitive << ( dst_V_V_empty_n );
    sensitive << ( dst1_V_V_empty_n );
    sensitive << ( icmp_ln108_reg_165 );
    sensitive << ( call_ln113_write_r_fu_100_Mat_9_720_1280_1_data_V_addr_blk_n );
    sensitive << ( call_ln114_write_r_fu_108_Mat_9_720_1280_1_data_V_addr_blk_n );

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter1_ignore_call4);
    sensitive << ( dst_V_V_empty_n );
    sensitive << ( dst1_V_V_empty_n );
    sensitive << ( icmp_ln108_reg_165 );
    sensitive << ( call_ln114_write_r_fu_108_Mat_9_720_1280_1_data_V_addr_blk_n );

    SC_METHOD(thread_ap_block_state4_pp0_stage0_iter1_ignore_call6);
    sensitive << ( dst_V_V_empty_n );
    sensitive << ( dst1_V_V_empty_n );
    sensitive << ( icmp_ln108_reg_165 );
    sensitive << ( call_ln113_write_r_fu_100_Mat_9_720_1280_1_data_V_addr_blk_n );

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state3);
    sensitive << ( icmp_ln108_fu_134_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( icmp_ln105_fu_119_p2 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( icmp_ln105_fu_119_p2 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_call_ln113_write_r_fu_100_ap_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001_ignoreCallOp37 );

    SC_METHOD(thread_call_ln113_write_r_fu_100_ap_start);
    sensitive << ( call_ln113_write_r_fu_100_ap_start_reg );

    SC_METHOD(thread_call_ln114_write_r_fu_108_ap_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001_ignoreCallOp39 );

    SC_METHOD(thread_call_ln114_write_r_fu_108_ap_start);
    sensitive << ( call_ln114_write_r_fu_108_ap_start_reg );

    SC_METHOD(thread_dst1_V_V_blk_n);
    sensitive << ( dst1_V_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln108_reg_165 );

    SC_METHOD(thread_dst1_V_V_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln108_reg_165 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_dst_V_V_blk_n);
    sensitive << ( dst_V_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln108_reg_165 );

    SC_METHOD(thread_dst_V_V_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln108_reg_165 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_i_fu_125_p2);
    sensitive << ( i1_0_i_reg_78 );

    SC_METHOD(thread_icmp_ln105_fu_119_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( i1_0_i_reg_78 );
    sensitive << ( sext_ln105_fu_116_p1 );

    SC_METHOD(thread_icmp_ln108_fu_134_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( j2_0_i_reg_89 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( sext_ln108_fu_131_p1 );

    SC_METHOD(thread_j_fu_140_p2);
    sensitive << ( j2_0_i_reg_89 );

    SC_METHOD(thread_p_dst1_cols_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( p_dst1_cols_empty_n );

    SC_METHOD(thread_p_dst1_cols_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( p_dst1_rows_empty_n );
    sensitive << ( p_dst1_cols_empty_n );

    SC_METHOD(thread_p_dst1_data_V_blk_n);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln108_reg_165 );
    sensitive << ( call_ln113_write_r_fu_100_Mat_9_720_1280_1_data_V_addr_blk_n );

    SC_METHOD(thread_p_dst1_data_V_din);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln108_reg_165 );
    sensitive << ( call_ln113_write_r_fu_100_Mat_9_720_1280_1_data_V_addr_din );

    SC_METHOD(thread_p_dst1_data_V_write);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln108_reg_165 );
    sensitive << ( call_ln113_write_r_fu_100_Mat_9_720_1280_1_data_V_addr_write );

    SC_METHOD(thread_p_dst1_rows_blk_n);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( p_dst1_rows_empty_n );

    SC_METHOD(thread_p_dst1_rows_read);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( p_dst1_rows_empty_n );
    sensitive << ( p_dst1_cols_empty_n );

    SC_METHOD(thread_p_dst2_data_V_blk_n);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln108_reg_165 );
    sensitive << ( call_ln114_write_r_fu_108_Mat_9_720_1280_1_data_V_addr_blk_n );

    SC_METHOD(thread_p_dst2_data_V_din);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln108_reg_165 );
    sensitive << ( call_ln114_write_r_fu_108_Mat_9_720_1280_1_data_V_addr_din );

    SC_METHOD(thread_p_dst2_data_V_write);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln108_reg_165 );
    sensitive << ( call_ln114_write_r_fu_108_Mat_9_720_1280_1_data_V_addr_write );

    SC_METHOD(thread_sext_ln105_fu_116_p1);
    sensitive << ( p_dst1_rows_read_reg_146 );

    SC_METHOD(thread_sext_ln108_fu_131_p1);
    sensitive << ( p_dst1_cols_read_reg_151 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( p_dst1_rows_empty_n );
    sensitive << ( p_dst1_cols_empty_n );
    sensitive << ( icmp_ln105_fu_119_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln108_fu_134_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "0001";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    call_ln113_write_r_fu_100_ap_start_reg = SC_LOGIC_0;
    call_ln114_write_r_fu_108_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "duplicateMat_2_Loop_1_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, p_dst1_rows_dout, "(port)p_dst1_rows_dout");
    sc_trace(mVcdFile, p_dst1_rows_empty_n, "(port)p_dst1_rows_empty_n");
    sc_trace(mVcdFile, p_dst1_rows_read, "(port)p_dst1_rows_read");
    sc_trace(mVcdFile, p_dst1_cols_dout, "(port)p_dst1_cols_dout");
    sc_trace(mVcdFile, p_dst1_cols_empty_n, "(port)p_dst1_cols_empty_n");
    sc_trace(mVcdFile, p_dst1_cols_read, "(port)p_dst1_cols_read");
    sc_trace(mVcdFile, dst_V_V_dout, "(port)dst_V_V_dout");
    sc_trace(mVcdFile, dst_V_V_empty_n, "(port)dst_V_V_empty_n");
    sc_trace(mVcdFile, dst_V_V_read, "(port)dst_V_V_read");
    sc_trace(mVcdFile, p_dst1_data_V_din, "(port)p_dst1_data_V_din");
    sc_trace(mVcdFile, p_dst1_data_V_full_n, "(port)p_dst1_data_V_full_n");
    sc_trace(mVcdFile, p_dst1_data_V_write, "(port)p_dst1_data_V_write");
    sc_trace(mVcdFile, dst1_V_V_dout, "(port)dst1_V_V_dout");
    sc_trace(mVcdFile, dst1_V_V_empty_n, "(port)dst1_V_V_empty_n");
    sc_trace(mVcdFile, dst1_V_V_read, "(port)dst1_V_V_read");
    sc_trace(mVcdFile, p_dst2_data_V_din, "(port)p_dst2_data_V_din");
    sc_trace(mVcdFile, p_dst2_data_V_full_n, "(port)p_dst2_data_V_full_n");
    sc_trace(mVcdFile, p_dst2_data_V_write, "(port)p_dst2_data_V_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, p_dst1_rows_blk_n, "p_dst1_rows_blk_n");
    sc_trace(mVcdFile, p_dst1_cols_blk_n, "p_dst1_cols_blk_n");
    sc_trace(mVcdFile, dst_V_V_blk_n, "dst_V_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, icmp_ln108_reg_165, "icmp_ln108_reg_165");
    sc_trace(mVcdFile, call_ln113_write_r_fu_100_Mat_9_720_1280_1_data_V_addr_blk_n, "call_ln113_write_r_fu_100_Mat_9_720_1280_1_data_V_addr_blk_n");
    sc_trace(mVcdFile, p_dst1_data_V_blk_n, "p_dst1_data_V_blk_n");
    sc_trace(mVcdFile, dst1_V_V_blk_n, "dst1_V_V_blk_n");
    sc_trace(mVcdFile, call_ln114_write_r_fu_108_Mat_9_720_1280_1_data_V_addr_blk_n, "call_ln114_write_r_fu_108_Mat_9_720_1280_1_data_V_addr_blk_n");
    sc_trace(mVcdFile, p_dst2_data_V_blk_n, "p_dst2_data_V_blk_n");
    sc_trace(mVcdFile, j2_0_i_reg_89, "j2_0_i_reg_89");
    sc_trace(mVcdFile, p_dst1_rows_read_reg_146, "p_dst1_rows_read_reg_146");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, p_dst1_cols_read_reg_151, "p_dst1_cols_read_reg_151");
    sc_trace(mVcdFile, icmp_ln105_fu_119_p2, "icmp_ln105_fu_119_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, i_fu_125_p2, "i_fu_125_p2");
    sc_trace(mVcdFile, i_reg_160, "i_reg_160");
    sc_trace(mVcdFile, icmp_ln108_fu_134_p2, "icmp_ln108_fu_134_p2");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter0, "ap_block_state3_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter1, "ap_block_state4_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, j_fu_140_p2, "j_fu_140_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state3, "ap_condition_pp0_exit_iter0_state3");
    sc_trace(mVcdFile, call_ln113_write_r_fu_100_ap_start, "call_ln113_write_r_fu_100_ap_start");
    sc_trace(mVcdFile, call_ln113_write_r_fu_100_ap_done, "call_ln113_write_r_fu_100_ap_done");
    sc_trace(mVcdFile, call_ln113_write_r_fu_100_ap_idle, "call_ln113_write_r_fu_100_ap_idle");
    sc_trace(mVcdFile, call_ln113_write_r_fu_100_ap_ready, "call_ln113_write_r_fu_100_ap_ready");
    sc_trace(mVcdFile, call_ln113_write_r_fu_100_Mat_9_720_1280_1_data_V_addr_din, "call_ln113_write_r_fu_100_Mat_9_720_1280_1_data_V_addr_din");
    sc_trace(mVcdFile, call_ln113_write_r_fu_100_Mat_9_720_1280_1_data_V_addr_write, "call_ln113_write_r_fu_100_Mat_9_720_1280_1_data_V_addr_write");
    sc_trace(mVcdFile, call_ln113_write_r_fu_100_ap_ce, "call_ln113_write_r_fu_100_ap_ce");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter0_ignore_call4, "ap_block_state3_pp0_stage0_iter0_ignore_call4");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter1_ignore_call4, "ap_block_state4_pp0_stage0_iter1_ignore_call4");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001_ignoreCallOp37, "ap_block_pp0_stage0_11001_ignoreCallOp37");
    sc_trace(mVcdFile, call_ln114_write_r_fu_108_ap_start, "call_ln114_write_r_fu_108_ap_start");
    sc_trace(mVcdFile, call_ln114_write_r_fu_108_ap_done, "call_ln114_write_r_fu_108_ap_done");
    sc_trace(mVcdFile, call_ln114_write_r_fu_108_ap_idle, "call_ln114_write_r_fu_108_ap_idle");
    sc_trace(mVcdFile, call_ln114_write_r_fu_108_ap_ready, "call_ln114_write_r_fu_108_ap_ready");
    sc_trace(mVcdFile, call_ln114_write_r_fu_108_Mat_9_720_1280_1_data_V_addr_din, "call_ln114_write_r_fu_108_Mat_9_720_1280_1_data_V_addr_din");
    sc_trace(mVcdFile, call_ln114_write_r_fu_108_Mat_9_720_1280_1_data_V_addr_write, "call_ln114_write_r_fu_108_Mat_9_720_1280_1_data_V_addr_write");
    sc_trace(mVcdFile, call_ln114_write_r_fu_108_ap_ce, "call_ln114_write_r_fu_108_ap_ce");
    sc_trace(mVcdFile, ap_block_state3_pp0_stage0_iter0_ignore_call6, "ap_block_state3_pp0_stage0_iter0_ignore_call6");
    sc_trace(mVcdFile, ap_block_state4_pp0_stage0_iter1_ignore_call6, "ap_block_state4_pp0_stage0_iter1_ignore_call6");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001_ignoreCallOp39, "ap_block_pp0_stage0_11001_ignoreCallOp39");
    sc_trace(mVcdFile, i1_0_i_reg_78, "i1_0_i_reg_78");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, call_ln113_write_r_fu_100_ap_start_reg, "call_ln113_write_r_fu_100_ap_start_reg");
    sc_trace(mVcdFile, call_ln114_write_r_fu_108_ap_start_reg, "call_ln114_write_r_fu_108_ap_start_reg");
    sc_trace(mVcdFile, sext_ln105_fu_116_p1, "sext_ln105_fu_116_p1");
    sc_trace(mVcdFile, sext_ln108_fu_131_p1, "sext_ln108_fu_131_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
}

duplicateMat_2_Loop_1::~duplicateMat_2_Loop_1() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete call_ln113_write_r_fu_100;
    delete call_ln114_write_r_fu_108;
}

void duplicateMat_2_Loop_1::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    esl_seteq<1,1,1>(icmp_ln105_fu_119_p2.read(), ap_const_lv1_0))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state3.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln105_fu_119_p2.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state3.read()))) {
            ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state3.read() ^ ap_const_logic_1);
        } else if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln105_fu_119_p2.read()))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        call_ln113_write_r_fu_100_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln108_fu_134_p2.read()))) {
            call_ln113_write_r_fu_100_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, call_ln113_write_r_fu_100_ap_ready.read())) {
            call_ln113_write_r_fu_100_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        call_ln114_write_r_fu_108_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
             esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln108_fu_134_p2.read()))) {
            call_ln114_write_r_fu_108_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, call_ln114_write_r_fu_108_ap_ready.read())) {
            call_ln114_write_r_fu_108_ap_start_reg = ap_const_logic_0;
        }
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        i1_0_i_reg_78 = i_reg_160.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, p_dst1_rows_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, p_dst1_cols_empty_n.read())))) {
        i1_0_i_reg_78 = ap_const_lv32_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln108_fu_134_p2.read()))) {
        j2_0_i_reg_89 = j_fu_140_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln105_fu_119_p2.read()))) {
        j2_0_i_reg_89 = ap_const_lv32_0;
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        i_reg_160 = i_fu_125_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln108_reg_165 = icmp_ln108_fu_134_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, p_dst1_rows_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, p_dst1_cols_empty_n.read())))) {
        p_dst1_cols_read_reg_151 = p_dst1_cols_dout.read();
        p_dst1_rows_read_reg_146 = p_dst1_rows_dout.read();
    }
}

void duplicateMat_2_Loop_1::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[2];
}

void duplicateMat_2_Loop_1::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void duplicateMat_2_Loop_1::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void duplicateMat_2_Loop_1::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[3];
}

void duplicateMat_2_Loop_1::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void duplicateMat_2_Loop_1::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && ((esl_seteq<1,1,1>(icmp_ln108_reg_165.read(), ap_const_lv1_1) && 
   esl_seteq<1,1,1>(ap_const_logic_0, dst_V_V_empty_n.read())) || 
  (esl_seteq<1,1,1>(icmp_ln108_reg_165.read(), ap_const_lv1_1) && 
   esl_seteq<1,1,1>(ap_const_logic_0, call_ln113_write_r_fu_100_Mat_9_720_1280_1_data_V_addr_blk_n.read())) || 
  (esl_seteq<1,1,1>(icmp_ln108_reg_165.read(), ap_const_lv1_1) && 
   esl_seteq<1,1,1>(ap_const_logic_0, dst1_V_V_empty_n.read())) || 
  (esl_seteq<1,1,1>(icmp_ln108_reg_165.read(), ap_const_lv1_1) && 
   esl_seteq<1,1,1>(ap_const_logic_0, call_ln114_write_r_fu_108_Mat_9_720_1280_1_data_V_addr_blk_n.read()))));
}

void duplicateMat_2_Loop_1::thread_ap_block_pp0_stage0_11001_ignoreCallOp37() {
    ap_block_pp0_stage0_11001_ignoreCallOp37 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && ((esl_seteq<1,1,1>(icmp_ln108_reg_165.read(), ap_const_lv1_1) && 
   esl_seteq<1,1,1>(ap_const_logic_0, dst_V_V_empty_n.read())) || 
  (esl_seteq<1,1,1>(icmp_ln108_reg_165.read(), ap_const_lv1_1) && 
   esl_seteq<1,1,1>(ap_const_logic_0, dst1_V_V_empty_n.read())) || 
  (esl_seteq<1,1,1>(icmp_ln108_reg_165.read(), ap_const_lv1_1) && 
   esl_seteq<1,1,1>(ap_const_logic_0, call_ln114_write_r_fu_108_Mat_9_720_1280_1_data_V_addr_blk_n.read()))));
}

void duplicateMat_2_Loop_1::thread_ap_block_pp0_stage0_11001_ignoreCallOp39() {
    ap_block_pp0_stage0_11001_ignoreCallOp39 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && ((esl_seteq<1,1,1>(icmp_ln108_reg_165.read(), ap_const_lv1_1) && 
   esl_seteq<1,1,1>(ap_const_logic_0, dst_V_V_empty_n.read())) || 
  (esl_seteq<1,1,1>(icmp_ln108_reg_165.read(), ap_const_lv1_1) && 
   esl_seteq<1,1,1>(ap_const_logic_0, call_ln113_write_r_fu_100_Mat_9_720_1280_1_data_V_addr_blk_n.read())) || 
  (esl_seteq<1,1,1>(icmp_ln108_reg_165.read(), ap_const_lv1_1) && 
   esl_seteq<1,1,1>(ap_const_logic_0, dst1_V_V_empty_n.read()))));
}

void duplicateMat_2_Loop_1::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && ((esl_seteq<1,1,1>(icmp_ln108_reg_165.read(), ap_const_lv1_1) && 
   esl_seteq<1,1,1>(ap_const_logic_0, dst_V_V_empty_n.read())) || 
  (esl_seteq<1,1,1>(icmp_ln108_reg_165.read(), ap_const_lv1_1) && 
   esl_seteq<1,1,1>(ap_const_logic_0, call_ln113_write_r_fu_100_Mat_9_720_1280_1_data_V_addr_blk_n.read())) || 
  (esl_seteq<1,1,1>(icmp_ln108_reg_165.read(), ap_const_lv1_1) && 
   esl_seteq<1,1,1>(ap_const_logic_0, dst1_V_V_empty_n.read())) || 
  (esl_seteq<1,1,1>(icmp_ln108_reg_165.read(), ap_const_lv1_1) && 
   esl_seteq<1,1,1>(ap_const_logic_0, call_ln114_write_r_fu_108_Mat_9_720_1280_1_data_V_addr_blk_n.read()))));
}

void duplicateMat_2_Loop_1::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, p_dst1_rows_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, p_dst1_cols_empty_n.read()));
}

void duplicateMat_2_Loop_1::thread_ap_block_state3_pp0_stage0_iter0() {
    ap_block_state3_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void duplicateMat_2_Loop_1::thread_ap_block_state3_pp0_stage0_iter0_ignore_call4() {
    ap_block_state3_pp0_stage0_iter0_ignore_call4 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void duplicateMat_2_Loop_1::thread_ap_block_state3_pp0_stage0_iter0_ignore_call6() {
    ap_block_state3_pp0_stage0_iter0_ignore_call6 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void duplicateMat_2_Loop_1::thread_ap_block_state4_pp0_stage0_iter1() {
    ap_block_state4_pp0_stage0_iter1 = ((esl_seteq<1,1,1>(icmp_ln108_reg_165.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, dst_V_V_empty_n.read())) || (esl_seteq<1,1,1>(icmp_ln108_reg_165.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, call_ln113_write_r_fu_100_Mat_9_720_1280_1_data_V_addr_blk_n.read())) || (esl_seteq<1,1,1>(icmp_ln108_reg_165.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, dst1_V_V_empty_n.read())) || (esl_seteq<1,1,1>(icmp_ln108_reg_165.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, call_ln114_write_r_fu_108_Mat_9_720_1280_1_data_V_addr_blk_n.read())));
}

void duplicateMat_2_Loop_1::thread_ap_block_state4_pp0_stage0_iter1_ignore_call4() {
    ap_block_state4_pp0_stage0_iter1_ignore_call4 = ((esl_seteq<1,1,1>(icmp_ln108_reg_165.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, dst_V_V_empty_n.read())) || (esl_seteq<1,1,1>(icmp_ln108_reg_165.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, dst1_V_V_empty_n.read())) || (esl_seteq<1,1,1>(icmp_ln108_reg_165.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, call_ln114_write_r_fu_108_Mat_9_720_1280_1_data_V_addr_blk_n.read())));
}

void duplicateMat_2_Loop_1::thread_ap_block_state4_pp0_stage0_iter1_ignore_call6() {
    ap_block_state4_pp0_stage0_iter1_ignore_call6 = ((esl_seteq<1,1,1>(icmp_ln108_reg_165.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, dst_V_V_empty_n.read())) || (esl_seteq<1,1,1>(icmp_ln108_reg_165.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, call_ln113_write_r_fu_100_Mat_9_720_1280_1_data_V_addr_blk_n.read())) || (esl_seteq<1,1,1>(icmp_ln108_reg_165.read(), ap_const_lv1_1) && 
  esl_seteq<1,1,1>(ap_const_logic_0, dst1_V_V_empty_n.read())));
}

void duplicateMat_2_Loop_1::thread_ap_condition_pp0_exit_iter0_state3() {
    if (esl_seteq<1,1,1>(icmp_ln108_fu_134_p2.read(), ap_const_lv1_0)) {
        ap_condition_pp0_exit_iter0_state3 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state3 = ap_const_logic_0;
    }
}

void duplicateMat_2_Loop_1::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln105_fu_119_p2.read(), ap_const_lv1_0))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void duplicateMat_2_Loop_1::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void duplicateMat_2_Loop_1::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void duplicateMat_2_Loop_1::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void duplicateMat_2_Loop_1::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(icmp_ln105_fu_119_p2.read(), ap_const_lv1_0))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void duplicateMat_2_Loop_1::thread_call_ln113_write_r_fu_100_ap_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001_ignoreCallOp37.read(), ap_const_boolean_0))) {
        call_ln113_write_r_fu_100_ap_ce = ap_const_logic_1;
    } else {
        call_ln113_write_r_fu_100_ap_ce = ap_const_logic_0;
    }
}

void duplicateMat_2_Loop_1::thread_call_ln113_write_r_fu_100_ap_start() {
    call_ln113_write_r_fu_100_ap_start = call_ln113_write_r_fu_100_ap_start_reg.read();
}

void duplicateMat_2_Loop_1::thread_call_ln114_write_r_fu_108_ap_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001_ignoreCallOp39.read(), ap_const_boolean_0))) {
        call_ln114_write_r_fu_108_ap_ce = ap_const_logic_1;
    } else {
        call_ln114_write_r_fu_108_ap_ce = ap_const_logic_0;
    }
}

void duplicateMat_2_Loop_1::thread_call_ln114_write_r_fu_108_ap_start() {
    call_ln114_write_r_fu_108_ap_start = call_ln114_write_r_fu_108_ap_start_reg.read();
}

void duplicateMat_2_Loop_1::thread_dst1_V_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln108_reg_165.read(), ap_const_lv1_1))) {
        dst1_V_V_blk_n = dst1_V_V_empty_n.read();
    } else {
        dst1_V_V_blk_n = ap_const_logic_1;
    }
}

void duplicateMat_2_Loop_1::thread_dst1_V_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln108_reg_165.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        dst1_V_V_read = ap_const_logic_1;
    } else {
        dst1_V_V_read = ap_const_logic_0;
    }
}

void duplicateMat_2_Loop_1::thread_dst_V_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln108_reg_165.read(), ap_const_lv1_1))) {
        dst_V_V_blk_n = dst_V_V_empty_n.read();
    } else {
        dst_V_V_blk_n = ap_const_logic_1;
    }
}

void duplicateMat_2_Loop_1::thread_dst_V_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln108_reg_165.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        dst_V_V_read = ap_const_logic_1;
    } else {
        dst_V_V_read = ap_const_logic_0;
    }
}

void duplicateMat_2_Loop_1::thread_i_fu_125_p2() {
    i_fu_125_p2 = (!i1_0_i_reg_78.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(i1_0_i_reg_78.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void duplicateMat_2_Loop_1::thread_icmp_ln105_fu_119_p2() {
    icmp_ln105_fu_119_p2 = (!i1_0_i_reg_78.read().is_01() || !sext_ln105_fu_116_p1.read().is_01())? sc_lv<1>(): (sc_bigint<32>(i1_0_i_reg_78.read()) < sc_bigint<32>(sext_ln105_fu_116_p1.read()));
}

void duplicateMat_2_Loop_1::thread_icmp_ln108_fu_134_p2() {
    icmp_ln108_fu_134_p2 = (!j2_0_i_reg_89.read().is_01() || !sext_ln108_fu_131_p1.read().is_01())? sc_lv<1>(): (sc_bigint<32>(j2_0_i_reg_89.read()) < sc_bigint<32>(sext_ln108_fu_131_p1.read()));
}

void duplicateMat_2_Loop_1::thread_j_fu_140_p2() {
    j_fu_140_p2 = (!j2_0_i_reg_89.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(j2_0_i_reg_89.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void duplicateMat_2_Loop_1::thread_p_dst1_cols_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        p_dst1_cols_blk_n = p_dst1_cols_empty_n.read();
    } else {
        p_dst1_cols_blk_n = ap_const_logic_1;
    }
}

void duplicateMat_2_Loop_1::thread_p_dst1_cols_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, p_dst1_rows_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, p_dst1_cols_empty_n.read())))) {
        p_dst1_cols_read = ap_const_logic_1;
    } else {
        p_dst1_cols_read = ap_const_logic_0;
    }
}

void duplicateMat_2_Loop_1::thread_p_dst1_data_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln108_reg_165.read(), ap_const_lv1_1))) {
        p_dst1_data_V_blk_n = call_ln113_write_r_fu_100_Mat_9_720_1280_1_data_V_addr_blk_n.read();
    } else {
        p_dst1_data_V_blk_n = ap_const_logic_1;
    }
}

void duplicateMat_2_Loop_1::thread_p_dst1_data_V_din() {
    p_dst1_data_V_din = call_ln113_write_r_fu_100_Mat_9_720_1280_1_data_V_addr_din.read();
}

void duplicateMat_2_Loop_1::thread_p_dst1_data_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln108_reg_165.read(), ap_const_lv1_1))) {
        p_dst1_data_V_write = call_ln113_write_r_fu_100_Mat_9_720_1280_1_data_V_addr_write.read();
    } else {
        p_dst1_data_V_write = ap_const_logic_0;
    }
}

void duplicateMat_2_Loop_1::thread_p_dst1_rows_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        p_dst1_rows_blk_n = p_dst1_rows_empty_n.read();
    } else {
        p_dst1_rows_blk_n = ap_const_logic_1;
    }
}

void duplicateMat_2_Loop_1::thread_p_dst1_rows_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, p_dst1_rows_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, p_dst1_cols_empty_n.read())))) {
        p_dst1_rows_read = ap_const_logic_1;
    } else {
        p_dst1_rows_read = ap_const_logic_0;
    }
}

void duplicateMat_2_Loop_1::thread_p_dst2_data_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln108_reg_165.read(), ap_const_lv1_1))) {
        p_dst2_data_V_blk_n = call_ln114_write_r_fu_108_Mat_9_720_1280_1_data_V_addr_blk_n.read();
    } else {
        p_dst2_data_V_blk_n = ap_const_logic_1;
    }
}

void duplicateMat_2_Loop_1::thread_p_dst2_data_V_din() {
    p_dst2_data_V_din = call_ln114_write_r_fu_108_Mat_9_720_1280_1_data_V_addr_din.read();
}

void duplicateMat_2_Loop_1::thread_p_dst2_data_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln108_reg_165.read(), ap_const_lv1_1))) {
        p_dst2_data_V_write = call_ln114_write_r_fu_108_Mat_9_720_1280_1_data_V_addr_write.read();
    } else {
        p_dst2_data_V_write = ap_const_logic_0;
    }
}

void duplicateMat_2_Loop_1::thread_sext_ln105_fu_116_p1() {
    sext_ln105_fu_116_p1 = esl_sext<32,11>(p_dst1_rows_read_reg_146.read());
}

void duplicateMat_2_Loop_1::thread_sext_ln108_fu_131_p1() {
    sext_ln108_fu_131_p1 = esl_sext<32,12>(p_dst1_cols_read_reg_151.read());
}

void duplicateMat_2_Loop_1::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1) || esl_seteq<1,1,1>(ap_const_logic_0, p_dst1_rows_empty_n.read()) || esl_seteq<1,1,1>(ap_const_logic_0, p_dst1_cols_empty_n.read())))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(icmp_ln105_fu_119_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 4 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln108_fu_134_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln108_fu_134_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state2;
            break;
        default : 
            ap_NS_fsm = "XXXX";
            break;
    }
}

}

