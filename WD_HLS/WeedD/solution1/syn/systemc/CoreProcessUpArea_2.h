// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _CoreProcessUpArea_2_HH_
#define _CoreProcessUpArea_2_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct CoreProcessUpArea_2 : public sc_module {
    // Port declarations 8
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<8> > A0;
    sc_in< sc_lv<8> > B0;
    sc_in< sc_lv<8> > A1;
    sc_in< sc_lv<8> > B1;
    sc_in< sc_lv<32> > Wx;
    sc_in< sc_lv<32> > Wy;
    sc_out< sc_lv<8> > ap_return;


    // Module declarations
    CoreProcessUpArea_2(sc_module_name name);
    SC_HAS_PROCESS(CoreProcessUpArea_2);

    ~CoreProcessUpArea_2();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<32> > mul_ln552_fu_90_p0;
    sc_signal< sc_lv<32> > mul_ln552_fu_90_p1;
    sc_signal< sc_lv<64> > mul_ln552_fu_90_p2;
    sc_signal< sc_lv<9> > zext_ln553_fu_106_p1;
    sc_signal< sc_lv<9> > zext_ln553_2_fu_114_p1;
    sc_signal< sc_lv<9> > sub_ln553_fu_126_p2;
    sc_signal< sc_lv<10> > sext_ln553_fu_132_p1;
    sc_signal< sc_lv<10> > zext_ln553_3_fu_118_p1;
    sc_signal< sc_lv<10> > zext_ln553_1_fu_110_p1;
    sc_signal< sc_lv<10> > sub_ln553_1_fu_136_p2;
    sc_signal< sc_lv<9> > zext_ln553_4_fu_122_p1;
    sc_signal< sc_lv<10> > val0_fu_142_p2;
    sc_signal< sc_lv<32> > Wxy_fu_96_p4;
    sc_signal< sc_lv<10> > P1_fu_168_p0;
    sc_signal< sc_lv<32> > P1_fu_168_p1;
    sc_signal< sc_lv<9> > val1_fu_148_p2;
    sc_signal< sc_lv<9> > P2_fu_178_p0;
    sc_signal< sc_lv<32> > P2_fu_178_p1;
    sc_signal< sc_lv<9> > val2_fu_154_p2;
    sc_signal< sc_lv<9> > P3_fu_188_p0;
    sc_signal< sc_lv<32> > P3_fu_188_p1;
    sc_signal< sc_lv<40> > P4_fu_194_p3;
    sc_signal< sc_lv<40> > P2_fu_178_p2;
    sc_signal< sc_lv<40> > P1_fu_168_p2;
    sc_signal< sc_lv<40> > P3_fu_188_p2;
    sc_signal< sc_lv<40> > add_ln562_fu_202_p2;
    sc_signal< sc_lv<40> > add_ln562_1_fu_208_p2;
    sc_signal< sc_lv<40> > add_ln562_2_fu_214_p2;
    sc_signal< sc_lv<40> > P1_fu_168_p10;
    sc_signal< sc_lv<40> > P2_fu_178_p10;
    sc_signal< sc_lv<40> > P3_fu_188_p10;
    sc_signal< sc_lv<64> > mul_ln552_fu_90_p00;
    sc_signal< sc_lv<64> > mul_ln552_fu_90_p10;
    static const sc_logic ap_const_logic_1;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_20;
    static const sc_lv<32> ap_const_lv32_3F;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_27;
    static const sc_logic ap_const_logic_0;
    // Thread declarations
    void thread_P1_fu_168_p0();
    void thread_P1_fu_168_p1();
    void thread_P1_fu_168_p10();
    void thread_P1_fu_168_p2();
    void thread_P2_fu_178_p0();
    void thread_P2_fu_178_p1();
    void thread_P2_fu_178_p10();
    void thread_P2_fu_178_p2();
    void thread_P3_fu_188_p0();
    void thread_P3_fu_188_p1();
    void thread_P3_fu_188_p10();
    void thread_P3_fu_188_p2();
    void thread_P4_fu_194_p3();
    void thread_Wxy_fu_96_p4();
    void thread_add_ln562_1_fu_208_p2();
    void thread_add_ln562_2_fu_214_p2();
    void thread_add_ln562_fu_202_p2();
    void thread_ap_ready();
    void thread_ap_return();
    void thread_mul_ln552_fu_90_p0();
    void thread_mul_ln552_fu_90_p00();
    void thread_mul_ln552_fu_90_p1();
    void thread_mul_ln552_fu_90_p10();
    void thread_mul_ln552_fu_90_p2();
    void thread_sext_ln553_fu_132_p1();
    void thread_sub_ln553_1_fu_136_p2();
    void thread_sub_ln553_fu_126_p2();
    void thread_val0_fu_142_p2();
    void thread_val1_fu_148_p2();
    void thread_val2_fu_154_p2();
    void thread_zext_ln553_1_fu_110_p1();
    void thread_zext_ln553_2_fu_114_p1();
    void thread_zext_ln553_3_fu_118_p1();
    void thread_zext_ln553_4_fu_122_p1();
    void thread_zext_ln553_fu_106_p1();
};

}

using namespace ap_rtl;

#endif
