// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "extract_micro_roi.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic extract_micro_roi::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic extract_micro_roi::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<3> extract_micro_roi::ap_ST_fsm_state1 = "1";
const sc_lv<3> extract_micro_roi::ap_ST_fsm_state2 = "10";
const sc_lv<3> extract_micro_roi::ap_ST_fsm_state3 = "100";
const bool extract_micro_roi::ap_const_boolean_1 = true;
const sc_lv<32> extract_micro_roi::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> extract_micro_roi::ap_const_lv32_2 = "10";
const sc_lv<1> extract_micro_roi::ap_const_lv1_0 = "0";
const sc_lv<1> extract_micro_roi::ap_const_lv1_1 = "1";
const sc_lv<32> extract_micro_roi::ap_const_lv32_1 = "1";
const sc_lv<5> extract_micro_roi::ap_const_lv5_0 = "00000";
const sc_lv<6> extract_micro_roi::ap_const_lv6_0 = "000000";
const sc_lv<5> extract_micro_roi::ap_const_lv5_17 = "10111";
const sc_lv<5> extract_micro_roi::ap_const_lv5_1 = "1";
const sc_lv<6> extract_micro_roi::ap_const_lv6_20 = "100000";
const sc_lv<6> extract_micro_roi::ap_const_lv6_1 = "1";

extract_micro_roi::extract_micro_roi(sc_module_name name) : sc_module(name), mVcdFile(0) {

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln115_fu_205_p2);
    sensitive << ( shl_ln_reg_248 );
    sensitive << ( zext_ln115_fu_201_p1 );

    SC_METHOD(thread_and_ln114_fu_196_p2);
    sensitive << ( icmp_ln114_reg_243 );
    sensitive << ( icmp_ln114_1_fu_191_p2 );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state3);
    sensitive << ( img_in_mr_data_V_empty_n );
    sensitive << ( ap_predicate_op38_read_state3 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln110_fu_140_p2 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_predicate_op38_read_state3);
    sensitive << ( icmp_ln111_fu_170_p2 );
    sensitive << ( and_ln114_fu_196_p2 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln110_fu_140_p2 );

    SC_METHOD(thread_h_fu_176_p2);
    sensitive << ( h_0_reg_117 );

    SC_METHOD(thread_icmp_ln110_fu_140_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( v_0_reg_106 );

    SC_METHOD(thread_icmp_ln111_fu_170_p2);
    sensitive << ( img_in_mr_data_V_empty_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_predicate_op38_read_state3 );
    sensitive << ( h_0_reg_117 );

    SC_METHOD(thread_icmp_ln114_1_fu_191_p2);
    sensitive << ( img_in_mr_data_V_empty_n );
    sensitive << ( y_right );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln111_fu_170_p2 );
    sensitive << ( ap_predicate_op38_read_state3 );
    sensitive << ( p_h_fu_186_p2 );

    SC_METHOD(thread_icmp_ln114_fu_157_p2);
    sensitive << ( trunc_ln110_reg_230 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln110_fu_140_p2 );
    sensitive << ( p_v_fu_152_p2 );

    SC_METHOD(thread_img_in_mr_data_V_blk_n);
    sensitive << ( img_in_mr_data_V_empty_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln111_fu_170_p2 );
    sensitive << ( and_ln114_fu_196_p2 );

    SC_METHOD(thread_img_in_mr_data_V_read);
    sensitive << ( img_in_mr_data_V_empty_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_predicate_op38_read_state3 );

    SC_METHOD(thread_micro_roi_data_V_address0);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( zext_ln115_1_fu_210_p1 );

    SC_METHOD(thread_micro_roi_data_V_ce0);
    sensitive << ( img_in_mr_data_V_empty_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_predicate_op38_read_state3 );

    SC_METHOD(thread_micro_roi_data_V_d0);
    sensitive << ( img_in_mr_data_V_dout );
    sensitive << ( ap_CS_fsm_state3 );

    SC_METHOD(thread_micro_roi_data_V_we0);
    sensitive << ( img_in_mr_data_V_empty_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln111_fu_170_p2 );
    sensitive << ( and_ln114_fu_196_p2 );
    sensitive << ( ap_predicate_op38_read_state3 );

    SC_METHOD(thread_p_h_fu_186_p2);
    sensitive << ( y_left );
    sensitive << ( zext_ln113_fu_182_p1 );

    SC_METHOD(thread_p_v_fu_152_p2);
    sensitive << ( trunc_ln112_reg_225 );
    sensitive << ( zext_ln110_fu_136_p1 );

    SC_METHOD(thread_shl_ln_fu_162_p3);
    sensitive << ( v_0_reg_106 );

    SC_METHOD(thread_trunc_ln110_fu_132_p1);
    sensitive << ( x_bottom );

    SC_METHOD(thread_trunc_ln112_fu_128_p1);
    sensitive << ( x_top );

    SC_METHOD(thread_v_fu_146_p2);
    sensitive << ( v_0_reg_106 );

    SC_METHOD(thread_zext_ln110_fu_136_p1);
    sensitive << ( v_0_reg_106 );

    SC_METHOD(thread_zext_ln113_fu_182_p1);
    sensitive << ( h_0_reg_117 );

    SC_METHOD(thread_zext_ln115_1_fu_210_p1);
    sensitive << ( add_ln115_fu_205_p2 );

    SC_METHOD(thread_zext_ln115_fu_201_p1);
    sensitive << ( h_0_reg_117 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( img_in_mr_data_V_empty_n );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln111_fu_170_p2 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( icmp_ln110_fu_140_p2 );
    sensitive << ( ap_predicate_op38_read_state3 );

    ap_CS_fsm = "001";
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "extract_micro_roi_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, img_in_mr_data_V_dout, "(port)img_in_mr_data_V_dout");
    sc_trace(mVcdFile, img_in_mr_data_V_empty_n, "(port)img_in_mr_data_V_empty_n");
    sc_trace(mVcdFile, img_in_mr_data_V_read, "(port)img_in_mr_data_V_read");
    sc_trace(mVcdFile, x_top, "(port)x_top");
    sc_trace(mVcdFile, x_bottom, "(port)x_bottom");
    sc_trace(mVcdFile, y_left, "(port)y_left");
    sc_trace(mVcdFile, y_right, "(port)y_right");
    sc_trace(mVcdFile, micro_roi_data_V_address0, "(port)micro_roi_data_V_address0");
    sc_trace(mVcdFile, micro_roi_data_V_ce0, "(port)micro_roi_data_V_ce0");
    sc_trace(mVcdFile, micro_roi_data_V_we0, "(port)micro_roi_data_V_we0");
    sc_trace(mVcdFile, micro_roi_data_V_d0, "(port)micro_roi_data_V_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, img_in_mr_data_V_blk_n, "img_in_mr_data_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, icmp_ln111_fu_170_p2, "icmp_ln111_fu_170_p2");
    sc_trace(mVcdFile, and_ln114_fu_196_p2, "and_ln114_fu_196_p2");
    sc_trace(mVcdFile, trunc_ln112_fu_128_p1, "trunc_ln112_fu_128_p1");
    sc_trace(mVcdFile, trunc_ln112_reg_225, "trunc_ln112_reg_225");
    sc_trace(mVcdFile, trunc_ln110_fu_132_p1, "trunc_ln110_fu_132_p1");
    sc_trace(mVcdFile, trunc_ln110_reg_230, "trunc_ln110_reg_230");
    sc_trace(mVcdFile, v_fu_146_p2, "v_fu_146_p2");
    sc_trace(mVcdFile, v_reg_238, "v_reg_238");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, icmp_ln114_fu_157_p2, "icmp_ln114_fu_157_p2");
    sc_trace(mVcdFile, icmp_ln114_reg_243, "icmp_ln114_reg_243");
    sc_trace(mVcdFile, icmp_ln110_fu_140_p2, "icmp_ln110_fu_140_p2");
    sc_trace(mVcdFile, shl_ln_fu_162_p3, "shl_ln_fu_162_p3");
    sc_trace(mVcdFile, shl_ln_reg_248, "shl_ln_reg_248");
    sc_trace(mVcdFile, h_fu_176_p2, "h_fu_176_p2");
    sc_trace(mVcdFile, ap_predicate_op38_read_state3, "ap_predicate_op38_read_state3");
    sc_trace(mVcdFile, ap_block_state3, "ap_block_state3");
    sc_trace(mVcdFile, v_0_reg_106, "v_0_reg_106");
    sc_trace(mVcdFile, h_0_reg_117, "h_0_reg_117");
    sc_trace(mVcdFile, zext_ln115_1_fu_210_p1, "zext_ln115_1_fu_210_p1");
    sc_trace(mVcdFile, zext_ln110_fu_136_p1, "zext_ln110_fu_136_p1");
    sc_trace(mVcdFile, p_v_fu_152_p2, "p_v_fu_152_p2");
    sc_trace(mVcdFile, zext_ln113_fu_182_p1, "zext_ln113_fu_182_p1");
    sc_trace(mVcdFile, p_h_fu_186_p2, "p_h_fu_186_p2");
    sc_trace(mVcdFile, icmp_ln114_1_fu_191_p2, "icmp_ln114_1_fu_191_p2");
    sc_trace(mVcdFile, zext_ln115_fu_201_p1, "zext_ln115_fu_201_p1");
    sc_trace(mVcdFile, add_ln115_fu_205_p2, "add_ln115_fu_205_p2");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
#endif

    }
}

extract_micro_roi::~extract_micro_roi() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

}

void extract_micro_roi::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln110_fu_140_p2.read()))) {
        h_0_reg_117 = ap_const_lv6_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(icmp_ln111_fu_170_p2.read(), ap_const_lv1_0) && 
                !(esl_seteq<1,1,1>(ap_const_logic_0, img_in_mr_data_V_empty_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op38_read_state3.read())))) {
        h_0_reg_117 = h_fu_176_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, img_in_mr_data_V_empty_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op38_read_state3.read())) && 
         esl_seteq<1,1,1>(icmp_ln111_fu_170_p2.read(), ap_const_lv1_1))) {
        v_0_reg_106 = v_reg_238.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        v_0_reg_106 = ap_const_lv5_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln110_fu_140_p2.read()))) {
        icmp_ln114_reg_243 = icmp_ln114_fu_157_p2.read();
        shl_ln_reg_248 = shl_ln_fu_162_p3.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        trunc_ln110_reg_230 = trunc_ln110_fu_132_p1.read();
        trunc_ln112_reg_225 = trunc_ln112_fu_128_p1.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        v_reg_238 = v_fu_146_p2.read();
    }
}

void extract_micro_roi::thread_add_ln115_fu_205_p2() {
    add_ln115_fu_205_p2 = (!shl_ln_reg_248.read().is_01() || !zext_ln115_fu_201_p1.read().is_01())? sc_lv<10>(): (sc_biguint<10>(shl_ln_reg_248.read()) + sc_biguint<10>(zext_ln115_fu_201_p1.read()));
}

void extract_micro_roi::thread_and_ln114_fu_196_p2() {
    and_ln114_fu_196_p2 = (icmp_ln114_reg_243.read() & icmp_ln114_1_fu_191_p2.read());
}

void extract_micro_roi::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void extract_micro_roi::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void extract_micro_roi::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void extract_micro_roi::thread_ap_block_state3() {
    ap_block_state3 = (esl_seteq<1,1,1>(ap_const_logic_0, img_in_mr_data_V_empty_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op38_read_state3.read()));
}

void extract_micro_roi::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln110_fu_140_p2.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void extract_micro_roi::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void extract_micro_roi::thread_ap_predicate_op38_read_state3() {
    ap_predicate_op38_read_state3 = (esl_seteq<1,1,1>(icmp_ln111_fu_170_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(and_ln114_fu_196_p2.read(), ap_const_lv1_1));
}

void extract_micro_roi::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln110_fu_140_p2.read()))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void extract_micro_roi::thread_h_fu_176_p2() {
    h_fu_176_p2 = (!h_0_reg_117.read().is_01() || !ap_const_lv6_1.is_01())? sc_lv<6>(): (sc_biguint<6>(h_0_reg_117.read()) + sc_biguint<6>(ap_const_lv6_1));
}

void extract_micro_roi::thread_icmp_ln110_fu_140_p2() {
    icmp_ln110_fu_140_p2 = (!v_0_reg_106.read().is_01() || !ap_const_lv5_17.is_01())? sc_lv<1>(): sc_lv<1>(v_0_reg_106.read() == ap_const_lv5_17);
}

void extract_micro_roi::thread_icmp_ln111_fu_170_p2() {
    icmp_ln111_fu_170_p2 = (!h_0_reg_117.read().is_01() || !ap_const_lv6_20.is_01())? sc_lv<1>(): sc_lv<1>(h_0_reg_117.read() == ap_const_lv6_20);
}

void extract_micro_roi::thread_icmp_ln114_1_fu_191_p2() {
    icmp_ln114_1_fu_191_p2 = (!p_h_fu_186_p2.read().is_01() || !y_right.read().is_01())? sc_lv<1>(): (sc_biguint<16>(p_h_fu_186_p2.read()) < sc_biguint<16>(y_right.read()));
}

void extract_micro_roi::thread_icmp_ln114_fu_157_p2() {
    icmp_ln114_fu_157_p2 = (!p_v_fu_152_p2.read().is_01() || !trunc_ln110_reg_230.read().is_01())? sc_lv<1>(): (sc_biguint<8>(p_v_fu_152_p2.read()) < sc_biguint<8>(trunc_ln110_reg_230.read()));
}

void extract_micro_roi::thread_img_in_mr_data_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln111_fu_170_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(and_ln114_fu_196_p2.read(), ap_const_lv1_1))) {
        img_in_mr_data_V_blk_n = img_in_mr_data_V_empty_n.read();
    } else {
        img_in_mr_data_V_blk_n = ap_const_logic_1;
    }
}

void extract_micro_roi::thread_img_in_mr_data_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op38_read_state3.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, img_in_mr_data_V_empty_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op38_read_state3.read())))) {
        img_in_mr_data_V_read = ap_const_logic_1;
    } else {
        img_in_mr_data_V_read = ap_const_logic_0;
    }
}

void extract_micro_roi::thread_micro_roi_data_V_address0() {
    micro_roi_data_V_address0 =  (sc_lv<10>) (zext_ln115_1_fu_210_p1.read());
}

void extract_micro_roi::thread_micro_roi_data_V_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, img_in_mr_data_V_empty_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op38_read_state3.read())))) {
        micro_roi_data_V_ce0 = ap_const_logic_1;
    } else {
        micro_roi_data_V_ce0 = ap_const_logic_0;
    }
}

void extract_micro_roi::thread_micro_roi_data_V_d0() {
    micro_roi_data_V_d0 = img_in_mr_data_V_dout.read();
}

void extract_micro_roi::thread_micro_roi_data_V_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(icmp_ln111_fu_170_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(and_ln114_fu_196_p2.read(), ap_const_lv1_1) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, img_in_mr_data_V_empty_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op38_read_state3.read())))) {
        micro_roi_data_V_we0 = ap_const_logic_1;
    } else {
        micro_roi_data_V_we0 = ap_const_logic_0;
    }
}

void extract_micro_roi::thread_p_h_fu_186_p2() {
    p_h_fu_186_p2 = (!zext_ln113_fu_182_p1.read().is_01() || !y_left.read().is_01())? sc_lv<16>(): (sc_biguint<16>(zext_ln113_fu_182_p1.read()) + sc_biguint<16>(y_left.read()));
}

void extract_micro_roi::thread_p_v_fu_152_p2() {
    p_v_fu_152_p2 = (!zext_ln110_fu_136_p1.read().is_01() || !trunc_ln112_reg_225.read().is_01())? sc_lv<8>(): (sc_biguint<8>(zext_ln110_fu_136_p1.read()) + sc_biguint<8>(trunc_ln112_reg_225.read()));
}

void extract_micro_roi::thread_shl_ln_fu_162_p3() {
    shl_ln_fu_162_p3 = esl_concat<5,5>(v_0_reg_106.read(), ap_const_lv5_0);
}

void extract_micro_roi::thread_trunc_ln110_fu_132_p1() {
    trunc_ln110_fu_132_p1 = x_bottom.read().range(8-1, 0);
}

void extract_micro_roi::thread_trunc_ln112_fu_128_p1() {
    trunc_ln112_fu_128_p1 = x_top.read().range(8-1, 0);
}

void extract_micro_roi::thread_v_fu_146_p2() {
    v_fu_146_p2 = (!v_0_reg_106.read().is_01() || !ap_const_lv5_1.is_01())? sc_lv<5>(): (sc_biguint<5>(v_0_reg_106.read()) + sc_biguint<5>(ap_const_lv5_1));
}

void extract_micro_roi::thread_zext_ln110_fu_136_p1() {
    zext_ln110_fu_136_p1 = esl_zext<8,5>(v_0_reg_106.read());
}

void extract_micro_roi::thread_zext_ln113_fu_182_p1() {
    zext_ln113_fu_182_p1 = esl_zext<16,6>(h_0_reg_117.read());
}

void extract_micro_roi::thread_zext_ln115_1_fu_210_p1() {
    zext_ln115_1_fu_210_p1 = esl_zext<64,10>(add_ln115_fu_205_p2.read());
}

void extract_micro_roi::thread_zext_ln115_fu_201_p1() {
    zext_ln115_fu_201_p1 = esl_zext<10,6>(h_0_reg_117.read());
}

void extract_micro_roi::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln110_fu_140_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, img_in_mr_data_V_empty_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op38_read_state3.read())) && esl_seteq<1,1,1>(icmp_ln111_fu_170_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(icmp_ln111_fu_170_p2.read(), ap_const_lv1_0) && !(esl_seteq<1,1,1>(ap_const_logic_0, img_in_mr_data_V_empty_n.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_predicate_op38_read_state3.read())))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        default : 
            ap_NS_fsm = "XXX";
            break;
    }
}

}

