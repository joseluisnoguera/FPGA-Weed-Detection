// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "xFHistogramKernel.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic xFHistogramKernel::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic xFHistogramKernel::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<11> xFHistogramKernel::ap_ST_fsm_state1 = "1";
const sc_lv<11> xFHistogramKernel::ap_ST_fsm_state2 = "10";
const sc_lv<11> xFHistogramKernel::ap_ST_fsm_state3 = "100";
const sc_lv<11> xFHistogramKernel::ap_ST_fsm_state4 = "1000";
const sc_lv<11> xFHistogramKernel::ap_ST_fsm_state5 = "10000";
const sc_lv<11> xFHistogramKernel::ap_ST_fsm_state6 = "100000";
const sc_lv<11> xFHistogramKernel::ap_ST_fsm_pp1_stage0 = "1000000";
const sc_lv<11> xFHistogramKernel::ap_ST_fsm_pp1_stage1 = "10000000";
const sc_lv<11> xFHistogramKernel::ap_ST_fsm_state11 = "100000000";
const sc_lv<11> xFHistogramKernel::ap_ST_fsm_pp2_stage0 = "1000000000";
const sc_lv<11> xFHistogramKernel::ap_ST_fsm_state14 = "10000000000";
const bool xFHistogramKernel::ap_const_boolean_1 = true;
const sc_lv<32> xFHistogramKernel::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> xFHistogramKernel::ap_const_lv32_7 = "111";
const bool xFHistogramKernel::ap_const_boolean_0 = false;
const sc_lv<1> xFHistogramKernel::ap_const_lv1_1 = "1";
const sc_lv<32> xFHistogramKernel::ap_const_lv32_6 = "110";
const sc_lv<32> xFHistogramKernel::ap_const_lv32_1 = "1";
const sc_lv<32> xFHistogramKernel::ap_const_lv32_2 = "10";
const sc_lv<32> xFHistogramKernel::ap_const_lv32_3 = "11";
const sc_lv<32> xFHistogramKernel::ap_const_lv32_5 = "101";
const sc_lv<32> xFHistogramKernel::ap_const_lv32_9 = "1001";
const sc_lv<1> xFHistogramKernel::ap_const_lv1_0 = "0";
const sc_lv<8> xFHistogramKernel::ap_const_lv8_0 = "00000000";
const sc_lv<9> xFHistogramKernel::ap_const_lv9_0 = "000000000";
const sc_lv<32> xFHistogramKernel::ap_const_lv32_8 = "1000";
const sc_lv<32> xFHistogramKernel::ap_const_lv32_4 = "100";
const sc_lv<8> xFHistogramKernel::ap_const_lv8_1 = "1";
const sc_lv<8> xFHistogramKernel::ap_const_lv8_FF = "11111111";
const sc_lv<9> xFHistogramKernel::ap_const_lv9_100 = "100000000";
const sc_lv<9> xFHistogramKernel::ap_const_lv9_1 = "1";
const sc_lv<8> xFHistogramKernel::ap_const_lv8_B4 = "10110100";
const sc_lv<9> xFHistogramKernel::ap_const_lv9_140 = "101000000";
const sc_lv<9> xFHistogramKernel::ap_const_lv9_2 = "10";
const sc_lv<32> xFHistogramKernel::ap_const_lv32_A = "1010";

xFHistogramKernel::xFHistogramKernel(sc_module_name name) : sc_module(name), mVcdFile(0) {
    tmp_hist_0_U = new xFHistogramKerneludo("tmp_hist_0_U");
    tmp_hist_0_U->clk(ap_clk);
    tmp_hist_0_U->reset(ap_rst);
    tmp_hist_0_U->address0(tmp_hist_0_address0);
    tmp_hist_0_U->ce0(tmp_hist_0_ce0);
    tmp_hist_0_U->we0(tmp_hist_0_we0);
    tmp_hist_0_U->d0(tmp_hist_0_d0);
    tmp_hist_0_U->q0(tmp_hist_0_q0);
    tmp_hist1_0_U = new xFHistogramKerneludo("tmp_hist1_0_U");
    tmp_hist1_0_U->clk(ap_clk);
    tmp_hist1_0_U->reset(ap_rst);
    tmp_hist1_0_U->address0(tmp_hist1_0_address0);
    tmp_hist1_0_U->ce0(tmp_hist1_0_ce0);
    tmp_hist1_0_U->we0(tmp_hist1_0_we0);
    tmp_hist1_0_U->d0(tmp_hist1_0_d0);
    tmp_hist1_0_U->q0(tmp_hist1_0_q0);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln47_fu_242_p2);
    sensitive << ( phi_ln47_reg_175 );

    SC_METHOD(thread_add_ln48_fu_259_p2);
    sensitive << ( phi_ln48_reg_186 );

    SC_METHOD(thread_add_ln97_fu_328_p2);
    sensitive << ( tmp_hist_0_q0 );

    SC_METHOD(thread_add_ln99_fu_335_p2);
    sensitive << ( tmp_hist1_0_q0 );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp1_stage1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_pp2_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state11);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state14);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp1);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_block_pp1_stage0_subdone );
    sensitive << ( ap_block_pp1_stage1_subdone );

    SC_METHOD(thread_ap_block_pp1_stage0);

    SC_METHOD(thread_ap_block_pp1_stage0_11001);
    sensitive << ( p_src_mat_data_V_empty_n );
    sensitive << ( icmp_ln887_13_reg_401 );
    sensitive << ( ap_enable_reg_pp1_iter1 );

    SC_METHOD(thread_ap_block_pp1_stage0_subdone);
    sensitive << ( p_src_mat_data_V_empty_n );
    sensitive << ( icmp_ln887_13_reg_401 );
    sensitive << ( ap_enable_reg_pp1_iter1 );

    SC_METHOD(thread_ap_block_pp1_stage1);

    SC_METHOD(thread_ap_block_pp1_stage1_11001);
    sensitive << ( p_src_mat_data_V_empty_n );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( icmp_ln887_13_reg_401 );

    SC_METHOD(thread_ap_block_pp1_stage1_subdone);
    sensitive << ( p_src_mat_data_V_empty_n );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( icmp_ln887_13_reg_401 );

    SC_METHOD(thread_ap_block_pp2);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_block_pp2_stage0_subdone );

    SC_METHOD(thread_ap_block_pp2_stage0);

    SC_METHOD(thread_ap_block_pp2_stage0_11001);

    SC_METHOD(thread_ap_block_pp2_stage0_subdone);

    SC_METHOD(thread_ap_block_state10_pp1_stage1_iter1);

    SC_METHOD(thread_ap_block_state12_pp2_stage0_iter0);

    SC_METHOD(thread_ap_block_state13_pp2_stage0_iter1);

    SC_METHOD(thread_ap_block_state7_pp1_stage0_iter0);

    SC_METHOD(thread_ap_block_state8_pp1_stage1_iter0);
    sensitive << ( p_src_mat_data_V_empty_n );
    sensitive << ( icmp_ln887_13_reg_401 );

    SC_METHOD(thread_ap_block_state9_pp1_stage0_iter1);
    sensitive << ( p_src_mat_data_V_empty_n );
    sensitive << ( icmp_ln887_13_reg_401 );

    SC_METHOD(thread_ap_condition_pp1_exit_iter0_state7);
    sensitive << ( icmp_ln887_13_fu_306_p2 );

    SC_METHOD(thread_ap_condition_pp2_exit_iter0_state12);
    sensitive << ( icmp_ln887_14_fu_342_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_ap_enable_operation_73);
    sensitive << ( icmp_ln887_13_reg_401 );

    SC_METHOD(thread_ap_enable_operation_76);
    sensitive << ( icmp_ln887_13_reg_401 );

    SC_METHOD(thread_ap_enable_operation_79);
    sensitive << ( icmp_ln887_13_reg_401 );

    SC_METHOD(thread_ap_enable_operation_81);
    sensitive << ( icmp_ln887_13_reg_401 );

    SC_METHOD(thread_ap_enable_operation_87);
    sensitive << ( icmp_ln887_13_reg_401_pp1_iter1_reg );

    SC_METHOD(thread_ap_enable_operation_89);
    sensitive << ( icmp_ln887_13_reg_401_pp1_iter1_reg );

    SC_METHOD(thread_ap_enable_pp1);
    sensitive << ( ap_idle_pp1 );

    SC_METHOD(thread_ap_enable_pp2);
    sensitive << ( ap_idle_pp2 );

    SC_METHOD(thread_ap_enable_state10_pp1_iter1_stage1);
    sensitive << ( ap_CS_fsm_pp1_stage1 );
    sensitive << ( ap_enable_reg_pp1_iter1 );

    SC_METHOD(thread_ap_enable_state8_pp1_iter0_stage1);
    sensitive << ( ap_CS_fsm_pp1_stage1 );
    sensitive << ( ap_enable_reg_pp1_iter0 );

    SC_METHOD(thread_ap_enable_state9_pp1_iter1_stage0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp1);
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );

    SC_METHOD(thread_ap_idle_pp2);
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_enable_reg_pp2_iter1 );

    SC_METHOD(thread_ap_phi_mux_p_0396_0_phi_fu_223_p4);
    sensitive << ( icmp_ln887_13_reg_401 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( p_0396_0_reg_219 );
    sensitive << ( col_V_reg_410 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state14 );

    SC_METHOD(thread_col_V_fu_317_p2);
    sensitive << ( p_0396_0_reg_219 );

    SC_METHOD(thread_hist_array_address0);
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( zext_ln544_4_reg_429 );
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( ap_block_pp2_stage0 );

    SC_METHOD(thread_hist_array_ce0);
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_block_pp2_stage0_11001 );
    sensitive << ( ap_enable_reg_pp2_iter1 );

    SC_METHOD(thread_hist_array_d0);
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_enable_reg_pp2_iter1 );
    sensitive << ( tmp_hist_0_q0 );
    sensitive << ( tmp_hist1_0_q0 );
    sensitive << ( ap_block_pp2_stage0 );

    SC_METHOD(thread_hist_array_we0);
    sensitive << ( icmp_ln887_14_reg_420 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_block_pp2_stage0_11001 );
    sensitive << ( ap_enable_reg_pp2_iter1 );

    SC_METHOD(thread_i_V_1_fu_348_p2);
    sensitive << ( t_V_7_reg_231 );

    SC_METHOD(thread_i_V_fu_282_p2);
    sensitive << ( t_V_reg_197 );

    SC_METHOD(thread_icmp_ln47_fu_253_p2);
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( phi_ln47_reg_175 );

    SC_METHOD(thread_icmp_ln48_fu_270_p2);
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( phi_ln48_reg_186 );

    SC_METHOD(thread_icmp_ln887_12_fu_294_p2);
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( t_V_6_reg_208 );

    SC_METHOD(thread_icmp_ln887_13_fu_306_p2);
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_phi_mux_p_0396_0_phi_fu_223_p4 );

    SC_METHOD(thread_icmp_ln887_14_fu_342_p2);
    sensitive << ( t_V_7_reg_231 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_block_pp2_stage0_11001 );
    sensitive << ( ap_enable_reg_pp2_iter0 );

    SC_METHOD(thread_icmp_ln887_fu_276_p2);
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( t_V_reg_197 );

    SC_METHOD(thread_p_src_mat_data_V_blk_n);
    sensitive << ( p_src_mat_data_V_empty_n );
    sensitive << ( ap_CS_fsm_pp1_stage1 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_block_pp1_stage1 );
    sensitive << ( icmp_ln887_13_reg_401 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );

    SC_METHOD(thread_p_src_mat_data_V_read);
    sensitive << ( ap_CS_fsm_pp1_stage1 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( icmp_ln887_13_reg_401 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_block_pp1_stage1_11001 );

    SC_METHOD(thread_row_V_fu_300_p2);
    sensitive << ( t_V_6_reg_208 );

    SC_METHOD(thread_tmp_hist1_0_address0);
    sensitive << ( ap_CS_fsm_pp1_stage1 );
    sensitive << ( ap_block_pp1_stage1 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_hist1_0_addr_3_reg_415 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( zext_ln544_4_fu_354_p1 );
    sensitive << ( zext_ln48_fu_265_p1 );
    sensitive << ( zext_ln544_fu_288_p1 );
    sensitive << ( zext_ln544_6_fu_323_p1 );
    sensitive << ( ap_block_pp2_stage0 );

    SC_METHOD(thread_tmp_hist1_0_ce0);
    sensitive << ( ap_CS_fsm_pp1_stage1 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_block_pp1_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_block_pp2_stage0_11001 );
    sensitive << ( ap_enable_reg_pp2_iter0 );

    SC_METHOD(thread_tmp_hist1_0_d0);
    sensitive << ( ap_CS_fsm_pp1_stage1 );
    sensitive << ( ap_block_pp1_stage1 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( add_ln99_fu_335_p2 );

    SC_METHOD(thread_tmp_hist1_0_we0);
    sensitive << ( ap_CS_fsm_pp1_stage1 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln887_13_reg_401_pp1_iter1_reg );
    sensitive << ( ap_block_pp1_stage1_11001 );
    sensitive << ( icmp_ln887_fu_276_p2 );

    SC_METHOD(thread_tmp_hist_0_address0);
    sensitive << ( ap_CS_fsm_pp1_stage1 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_block_pp1_stage1 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( tmp_hist_0_addr_3_reg_405 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( zext_ln544_4_fu_354_p1 );
    sensitive << ( zext_ln47_fu_248_p1 );
    sensitive << ( zext_ln544_fu_288_p1 );
    sensitive << ( zext_ln544_5_fu_312_p1 );
    sensitive << ( ap_block_pp2_stage0 );

    SC_METHOD(thread_tmp_hist_0_ce0);
    sensitive << ( ap_CS_fsm_pp1_stage1 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( ap_block_pp1_stage1_11001 );
    sensitive << ( ap_CS_fsm_pp2_stage0 );
    sensitive << ( ap_block_pp2_stage0_11001 );
    sensitive << ( ap_enable_reg_pp2_iter0 );

    SC_METHOD(thread_tmp_hist_0_d0);
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_block_pp1_stage0 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( add_ln97_fu_328_p2 );

    SC_METHOD(thread_tmp_hist_0_we0);
    sensitive << ( icmp_ln887_13_reg_401 );
    sensitive << ( ap_CS_fsm_pp1_stage0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_block_pp1_stage0_11001 );
    sensitive << ( icmp_ln887_fu_276_p2 );

    SC_METHOD(thread_zext_ln47_fu_248_p1);
    sensitive << ( phi_ln47_reg_175 );

    SC_METHOD(thread_zext_ln48_fu_265_p1);
    sensitive << ( phi_ln48_reg_186 );

    SC_METHOD(thread_zext_ln544_4_fu_354_p1);
    sensitive << ( t_V_7_reg_231 );

    SC_METHOD(thread_zext_ln544_5_fu_312_p1);
    sensitive << ( p_src_mat_data_V_dout );

    SC_METHOD(thread_zext_ln544_6_fu_323_p1);
    sensitive << ( p_src_mat_data_V_dout );

    SC_METHOD(thread_zext_ln544_fu_288_p1);
    sensitive << ( t_V_reg_197 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_pp1_stage1 );
    sensitive << ( ap_enable_reg_pp1_iter0 );
    sensitive << ( ap_enable_reg_pp1_iter1 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state3 );
    sensitive << ( icmp_ln48_fu_270_p2 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( icmp_ln887_12_fu_294_p2 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( icmp_ln887_13_fu_306_p2 );
    sensitive << ( icmp_ln887_14_fu_342_p2 );
    sensitive << ( ap_enable_reg_pp2_iter0 );
    sensitive << ( ap_block_pp1_stage0_subdone );
    sensitive << ( ap_block_pp1_stage1_subdone );
    sensitive << ( ap_block_pp2_stage0_subdone );
    sensitive << ( icmp_ln47_fu_253_p2 );
    sensitive << ( icmp_ln887_fu_276_p2 );

    ap_CS_fsm = "00000000001";
    ap_enable_reg_pp1_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp1_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp2_iter0 = SC_LOGIC_0;
    ap_enable_reg_pp2_iter1 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "xFHistogramKernel_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, p_src_mat_data_V_dout, "(port)p_src_mat_data_V_dout");
    sc_trace(mVcdFile, p_src_mat_data_V_empty_n, "(port)p_src_mat_data_V_empty_n");
    sc_trace(mVcdFile, p_src_mat_data_V_read, "(port)p_src_mat_data_V_read");
    sc_trace(mVcdFile, hist_array_address0, "(port)hist_array_address0");
    sc_trace(mVcdFile, hist_array_ce0, "(port)hist_array_ce0");
    sc_trace(mVcdFile, hist_array_we0, "(port)hist_array_we0");
    sc_trace(mVcdFile, hist_array_d0, "(port)hist_array_d0");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, p_src_mat_data_V_blk_n, "p_src_mat_data_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage1, "ap_CS_fsm_pp1_stage1");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter0, "ap_enable_reg_pp1_iter0");
    sc_trace(mVcdFile, ap_block_pp1_stage1, "ap_block_pp1_stage1");
    sc_trace(mVcdFile, icmp_ln887_13_reg_401, "icmp_ln887_13_reg_401");
    sc_trace(mVcdFile, ap_CS_fsm_pp1_stage0, "ap_CS_fsm_pp1_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp1_iter1, "ap_enable_reg_pp1_iter1");
    sc_trace(mVcdFile, ap_block_pp1_stage0, "ap_block_pp1_stage0");
    sc_trace(mVcdFile, p_0396_0_reg_219, "p_0396_0_reg_219");
    sc_trace(mVcdFile, t_V_7_reg_231, "t_V_7_reg_231");
    sc_trace(mVcdFile, add_ln47_fu_242_p2, "add_ln47_fu_242_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, add_ln48_fu_259_p2, "add_ln48_fu_259_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, icmp_ln48_fu_270_p2, "icmp_ln48_fu_270_p2");
    sc_trace(mVcdFile, i_V_fu_282_p2, "i_V_fu_282_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, icmp_ln887_12_fu_294_p2, "icmp_ln887_12_fu_294_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, row_V_fu_300_p2, "row_V_fu_300_p2");
    sc_trace(mVcdFile, row_V_reg_396, "row_V_reg_396");
    sc_trace(mVcdFile, icmp_ln887_13_fu_306_p2, "icmp_ln887_13_fu_306_p2");
    sc_trace(mVcdFile, ap_block_state7_pp1_stage0_iter0, "ap_block_state7_pp1_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state9_pp1_stage0_iter1, "ap_block_state9_pp1_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp1_stage0_11001, "ap_block_pp1_stage0_11001");
    sc_trace(mVcdFile, icmp_ln887_13_reg_401_pp1_iter1_reg, "icmp_ln887_13_reg_401_pp1_iter1_reg");
    sc_trace(mVcdFile, tmp_hist_0_addr_3_reg_405, "tmp_hist_0_addr_3_reg_405");
    sc_trace(mVcdFile, ap_block_state8_pp1_stage1_iter0, "ap_block_state8_pp1_stage1_iter0");
    sc_trace(mVcdFile, ap_block_state10_pp1_stage1_iter1, "ap_block_state10_pp1_stage1_iter1");
    sc_trace(mVcdFile, ap_block_pp1_stage1_11001, "ap_block_pp1_stage1_11001");
    sc_trace(mVcdFile, col_V_fu_317_p2, "col_V_fu_317_p2");
    sc_trace(mVcdFile, col_V_reg_410, "col_V_reg_410");
    sc_trace(mVcdFile, tmp_hist1_0_addr_3_reg_415, "tmp_hist1_0_addr_3_reg_415");
    sc_trace(mVcdFile, icmp_ln887_14_fu_342_p2, "icmp_ln887_14_fu_342_p2");
    sc_trace(mVcdFile, icmp_ln887_14_reg_420, "icmp_ln887_14_reg_420");
    sc_trace(mVcdFile, ap_CS_fsm_pp2_stage0, "ap_CS_fsm_pp2_stage0");
    sc_trace(mVcdFile, ap_block_state12_pp2_stage0_iter0, "ap_block_state12_pp2_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state13_pp2_stage0_iter1, "ap_block_state13_pp2_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp2_stage0_11001, "ap_block_pp2_stage0_11001");
    sc_trace(mVcdFile, i_V_1_fu_348_p2, "i_V_1_fu_348_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp2_iter0, "ap_enable_reg_pp2_iter0");
    sc_trace(mVcdFile, zext_ln544_4_fu_354_p1, "zext_ln544_4_fu_354_p1");
    sc_trace(mVcdFile, zext_ln544_4_reg_429, "zext_ln544_4_reg_429");
    sc_trace(mVcdFile, ap_block_pp1_stage0_subdone, "ap_block_pp1_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp1_exit_iter0_state7, "ap_condition_pp1_exit_iter0_state7");
    sc_trace(mVcdFile, ap_block_pp1_stage1_subdone, "ap_block_pp1_stage1_subdone");
    sc_trace(mVcdFile, ap_block_pp2_stage0_subdone, "ap_block_pp2_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp2_exit_iter0_state12, "ap_condition_pp2_exit_iter0_state12");
    sc_trace(mVcdFile, ap_enable_reg_pp2_iter1, "ap_enable_reg_pp2_iter1");
    sc_trace(mVcdFile, tmp_hist_0_address0, "tmp_hist_0_address0");
    sc_trace(mVcdFile, tmp_hist_0_ce0, "tmp_hist_0_ce0");
    sc_trace(mVcdFile, tmp_hist_0_we0, "tmp_hist_0_we0");
    sc_trace(mVcdFile, tmp_hist_0_d0, "tmp_hist_0_d0");
    sc_trace(mVcdFile, tmp_hist_0_q0, "tmp_hist_0_q0");
    sc_trace(mVcdFile, tmp_hist1_0_address0, "tmp_hist1_0_address0");
    sc_trace(mVcdFile, tmp_hist1_0_ce0, "tmp_hist1_0_ce0");
    sc_trace(mVcdFile, tmp_hist1_0_we0, "tmp_hist1_0_we0");
    sc_trace(mVcdFile, tmp_hist1_0_d0, "tmp_hist1_0_d0");
    sc_trace(mVcdFile, tmp_hist1_0_q0, "tmp_hist1_0_q0");
    sc_trace(mVcdFile, phi_ln47_reg_175, "phi_ln47_reg_175");
    sc_trace(mVcdFile, icmp_ln47_fu_253_p2, "icmp_ln47_fu_253_p2");
    sc_trace(mVcdFile, phi_ln48_reg_186, "phi_ln48_reg_186");
    sc_trace(mVcdFile, t_V_reg_197, "t_V_reg_197");
    sc_trace(mVcdFile, icmp_ln887_fu_276_p2, "icmp_ln887_fu_276_p2");
    sc_trace(mVcdFile, t_V_6_reg_208, "t_V_6_reg_208");
    sc_trace(mVcdFile, ap_CS_fsm_state11, "ap_CS_fsm_state11");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, ap_phi_mux_p_0396_0_phi_fu_223_p4, "ap_phi_mux_p_0396_0_phi_fu_223_p4");
    sc_trace(mVcdFile, zext_ln47_fu_248_p1, "zext_ln47_fu_248_p1");
    sc_trace(mVcdFile, zext_ln48_fu_265_p1, "zext_ln48_fu_265_p1");
    sc_trace(mVcdFile, zext_ln544_fu_288_p1, "zext_ln544_fu_288_p1");
    sc_trace(mVcdFile, zext_ln544_5_fu_312_p1, "zext_ln544_5_fu_312_p1");
    sc_trace(mVcdFile, zext_ln544_6_fu_323_p1, "zext_ln544_6_fu_323_p1");
    sc_trace(mVcdFile, ap_block_pp2_stage0, "ap_block_pp2_stage0");
    sc_trace(mVcdFile, add_ln97_fu_328_p2, "add_ln97_fu_328_p2");
    sc_trace(mVcdFile, add_ln99_fu_335_p2, "add_ln99_fu_335_p2");
    sc_trace(mVcdFile, ap_CS_fsm_state14, "ap_CS_fsm_state14");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_block_pp1, "ap_block_pp1");
    sc_trace(mVcdFile, ap_block_pp2, "ap_block_pp2");
    sc_trace(mVcdFile, ap_enable_operation_73, "ap_enable_operation_73");
    sc_trace(mVcdFile, ap_enable_state8_pp1_iter0_stage1, "ap_enable_state8_pp1_iter0_stage1");
    sc_trace(mVcdFile, ap_enable_operation_76, "ap_enable_operation_76");
    sc_trace(mVcdFile, ap_enable_state9_pp1_iter1_stage0, "ap_enable_state9_pp1_iter1_stage0");
    sc_trace(mVcdFile, ap_enable_operation_81, "ap_enable_operation_81");
    sc_trace(mVcdFile, ap_enable_operation_79, "ap_enable_operation_79");
    sc_trace(mVcdFile, ap_enable_operation_87, "ap_enable_operation_87");
    sc_trace(mVcdFile, ap_enable_state10_pp1_iter1_stage1, "ap_enable_state10_pp1_iter1_stage1");
    sc_trace(mVcdFile, ap_enable_operation_89, "ap_enable_operation_89");
    sc_trace(mVcdFile, ap_idle_pp1, "ap_idle_pp1");
    sc_trace(mVcdFile, ap_enable_pp1, "ap_enable_pp1");
    sc_trace(mVcdFile, ap_idle_pp2, "ap_idle_pp2");
    sc_trace(mVcdFile, ap_enable_pp2, "ap_enable_pp2");
#endif

    }
}

xFHistogramKernel::~xFHistogramKernel() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete tmp_hist_0_U;
    delete tmp_hist1_0_U;
}

void xFHistogramKernel::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp1_exit_iter0_state7.read()))) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln887_12_fu_294_p2.read()))) {
            ap_enable_reg_pp1_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp1_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && 
             esl_seteq<1,1,1>(ap_block_pp1_stage1_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp1_iter1 = ap_enable_reg_pp1_iter0.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                    esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln887_12_fu_294_p2.read()))) {
            ap_enable_reg_pp1_iter1 = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp2_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp2_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp2_exit_iter0_state12.read()))) {
            ap_enable_reg_pp2_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                    esl_seteq<1,1,1>(icmp_ln887_12_fu_294_p2.read(), ap_const_lv1_0))) {
            ap_enable_reg_pp2_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp2_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_block_pp2_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp2_exit_iter0_state12.read()))) {
            ap_enable_reg_pp2_iter1 = (ap_condition_pp2_exit_iter0_state12.read() ^ ap_const_logic_1);
        } else if (esl_seteq<1,1,1>(ap_block_pp2_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp2_iter1 = ap_enable_reg_pp2_iter0.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                    esl_seteq<1,1,1>(icmp_ln887_12_fu_294_p2.read(), ap_const_lv1_0))) {
            ap_enable_reg_pp2_iter1 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(icmp_ln887_13_reg_401.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        p_0396_0_reg_219 = col_V_reg_410.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln887_12_fu_294_p2.read()))) {
        p_0396_0_reg_219 = ap_const_lv9_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln47_fu_253_p2.read()))) {
        phi_ln47_reg_175 = add_ln47_fu_242_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
                esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
        phi_ln47_reg_175 = ap_const_lv8_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln47_fu_253_p2.read()))) {
        phi_ln48_reg_186 = ap_const_lv8_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
                esl_seteq<1,1,1>(icmp_ln48_fu_270_p2.read(), ap_const_lv1_0))) {
        phi_ln48_reg_186 = add_ln48_fu_259_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
        t_V_6_reg_208 = ap_const_lv8_0;
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state11.read())) {
        t_V_6_reg_208 = row_V_reg_396.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && 
         esl_seteq<1,1,1>(icmp_ln887_12_fu_294_p2.read(), ap_const_lv1_0))) {
        t_V_7_reg_231 = ap_const_lv9_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter0.read()) && 
                esl_seteq<1,1,1>(icmp_ln887_14_fu_342_p2.read(), ap_const_lv1_0))) {
        t_V_7_reg_231 = i_V_1_fu_348_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln48_fu_270_p2.read()))) {
        t_V_reg_197 = ap_const_lv9_0;
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln887_fu_276_p2.read()))) {
        t_V_reg_197 = i_V_fu_282_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(icmp_ln887_13_reg_401.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_block_pp1_stage1_11001.read(), ap_const_boolean_0))) {
        col_V_reg_410 = col_V_fu_317_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln887_13_reg_401 = icmp_ln887_13_fu_306_p2.read();
        icmp_ln887_13_reg_401_pp1_iter1_reg = icmp_ln887_13_reg_401.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln887_14_reg_420 = icmp_ln887_14_fu_342_p2.read();
    }
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        row_V_reg_396 = row_V_fu_300_p2.read();
    }
    if ((esl_seteq<1,1,1>(icmp_ln887_13_reg_401.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0))) {
        tmp_hist1_0_addr_3_reg_415 =  (sc_lv<8>) (zext_ln544_6_fu_323_p1.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && esl_seteq<1,1,1>(icmp_ln887_13_reg_401.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_block_pp1_stage1_11001.read(), ap_const_boolean_0))) {
        tmp_hist_0_addr_3_reg_405 =  (sc_lv<8>) (zext_ln544_5_fu_312_p1.read());
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln887_14_fu_342_p2.read(), ap_const_lv1_0))) {
        zext_ln544_4_reg_429 = zext_ln544_4_fu_354_p1.read();
    }
}

void xFHistogramKernel::thread_add_ln47_fu_242_p2() {
    add_ln47_fu_242_p2 = (!phi_ln47_reg_175.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(phi_ln47_reg_175.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void xFHistogramKernel::thread_add_ln48_fu_259_p2() {
    add_ln48_fu_259_p2 = (!phi_ln48_reg_186.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(phi_ln48_reg_186.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void xFHistogramKernel::thread_add_ln97_fu_328_p2() {
    add_ln97_fu_328_p2 = (!tmp_hist_0_q0.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_hist_0_q0.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void xFHistogramKernel::thread_add_ln99_fu_335_p2() {
    add_ln99_fu_335_p2 = (!tmp_hist1_0_q0.read().is_01() || !ap_const_lv32_1.is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_hist1_0_q0.read()) + sc_biguint<32>(ap_const_lv32_1));
}

void xFHistogramKernel::thread_ap_CS_fsm_pp1_stage0() {
    ap_CS_fsm_pp1_stage0 = ap_CS_fsm.read()[6];
}

void xFHistogramKernel::thread_ap_CS_fsm_pp1_stage1() {
    ap_CS_fsm_pp1_stage1 = ap_CS_fsm.read()[7];
}

void xFHistogramKernel::thread_ap_CS_fsm_pp2_stage0() {
    ap_CS_fsm_pp2_stage0 = ap_CS_fsm.read()[9];
}

void xFHistogramKernel::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void xFHistogramKernel::thread_ap_CS_fsm_state11() {
    ap_CS_fsm_state11 = ap_CS_fsm.read()[8];
}

void xFHistogramKernel::thread_ap_CS_fsm_state14() {
    ap_CS_fsm_state14 = ap_CS_fsm.read()[10];
}

void xFHistogramKernel::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void xFHistogramKernel::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void xFHistogramKernel::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void xFHistogramKernel::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void xFHistogramKernel::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void xFHistogramKernel::thread_ap_block_pp1() {
    ap_block_pp1 = ((esl_seteq<1,11,11>(ap_ST_fsm_pp1_stage0, ap_CS_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_pp1_stage0_subdone.read())) || (esl_seteq<1,11,11>(ap_ST_fsm_pp1_stage1, ap_CS_fsm.read()) && 
  esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_pp1_stage1_subdone.read())));
}

void xFHistogramKernel::thread_ap_block_pp1_stage0() {
    ap_block_pp1_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void xFHistogramKernel::thread_ap_block_pp1_stage0_11001() {
    ap_block_pp1_stage0_11001 = (esl_seteq<1,1,1>(icmp_ln887_13_reg_401.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_logic_0, p_src_mat_data_V_empty_n.read()));
}

void xFHistogramKernel::thread_ap_block_pp1_stage0_subdone() {
    ap_block_pp1_stage0_subdone = (esl_seteq<1,1,1>(icmp_ln887_13_reg_401.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_const_logic_0, p_src_mat_data_V_empty_n.read()));
}

void xFHistogramKernel::thread_ap_block_pp1_stage1() {
    ap_block_pp1_stage1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void xFHistogramKernel::thread_ap_block_pp1_stage1_11001() {
    ap_block_pp1_stage1_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(icmp_ln887_13_reg_401.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, p_src_mat_data_V_empty_n.read()));
}

void xFHistogramKernel::thread_ap_block_pp1_stage1_subdone() {
    ap_block_pp1_stage1_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(icmp_ln887_13_reg_401.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, p_src_mat_data_V_empty_n.read()));
}

void xFHistogramKernel::thread_ap_block_pp2() {
    ap_block_pp2 = (esl_seteq<1,11,11>(ap_ST_fsm_pp2_stage0, ap_CS_fsm.read()) && esl_seteq<1,1,1>(ap_const_boolean_1, ap_block_pp2_stage0_subdone.read()));
}

void xFHistogramKernel::thread_ap_block_pp2_stage0() {
    ap_block_pp2_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void xFHistogramKernel::thread_ap_block_pp2_stage0_11001() {
    ap_block_pp2_stage0_11001 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void xFHistogramKernel::thread_ap_block_pp2_stage0_subdone() {
    ap_block_pp2_stage0_subdone = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void xFHistogramKernel::thread_ap_block_state10_pp1_stage1_iter1() {
    ap_block_state10_pp1_stage1_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void xFHistogramKernel::thread_ap_block_state12_pp2_stage0_iter0() {
    ap_block_state12_pp2_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void xFHistogramKernel::thread_ap_block_state13_pp2_stage0_iter1() {
    ap_block_state13_pp2_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void xFHistogramKernel::thread_ap_block_state7_pp1_stage0_iter0() {
    ap_block_state7_pp1_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void xFHistogramKernel::thread_ap_block_state8_pp1_stage1_iter0() {
    ap_block_state8_pp1_stage1_iter0 = (esl_seteq<1,1,1>(icmp_ln887_13_reg_401.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, p_src_mat_data_V_empty_n.read()));
}

void xFHistogramKernel::thread_ap_block_state9_pp1_stage0_iter1() {
    ap_block_state9_pp1_stage0_iter1 = (esl_seteq<1,1,1>(icmp_ln887_13_reg_401.read(), ap_const_lv1_1) && esl_seteq<1,1,1>(ap_const_logic_0, p_src_mat_data_V_empty_n.read()));
}

void xFHistogramKernel::thread_ap_condition_pp1_exit_iter0_state7() {
    if (esl_seteq<1,1,1>(icmp_ln887_13_fu_306_p2.read(), ap_const_lv1_0)) {
        ap_condition_pp1_exit_iter0_state7 = ap_const_logic_1;
    } else {
        ap_condition_pp1_exit_iter0_state7 = ap_const_logic_0;
    }
}

void xFHistogramKernel::thread_ap_condition_pp2_exit_iter0_state12() {
    if (esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln887_14_fu_342_p2.read())) {
        ap_condition_pp2_exit_iter0_state12 = ap_const_logic_1;
    } else {
        ap_condition_pp2_exit_iter0_state12 = ap_const_logic_0;
    }
}

void xFHistogramKernel::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read())) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read()))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void xFHistogramKernel::thread_ap_enable_operation_73() {
    ap_enable_operation_73 = esl_seteq<1,1,1>(icmp_ln887_13_reg_401.read(), ap_const_lv1_1);
}

void xFHistogramKernel::thread_ap_enable_operation_76() {
    ap_enable_operation_76 = esl_seteq<1,1,1>(icmp_ln887_13_reg_401.read(), ap_const_lv1_1);
}

void xFHistogramKernel::thread_ap_enable_operation_79() {
    ap_enable_operation_79 = esl_seteq<1,1,1>(icmp_ln887_13_reg_401.read(), ap_const_lv1_1);
}

void xFHistogramKernel::thread_ap_enable_operation_81() {
    ap_enable_operation_81 = esl_seteq<1,1,1>(icmp_ln887_13_reg_401.read(), ap_const_lv1_1);
}

void xFHistogramKernel::thread_ap_enable_operation_87() {
    ap_enable_operation_87 = esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln887_13_reg_401_pp1_iter1_reg.read());
}

void xFHistogramKernel::thread_ap_enable_operation_89() {
    ap_enable_operation_89 = esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln887_13_reg_401_pp1_iter1_reg.read());
}

void xFHistogramKernel::thread_ap_enable_pp1() {
    ap_enable_pp1 = (ap_idle_pp1.read() ^ ap_const_logic_1);
}

void xFHistogramKernel::thread_ap_enable_pp2() {
    ap_enable_pp2 = (ap_idle_pp2.read() ^ ap_const_logic_1);
}

void xFHistogramKernel::thread_ap_enable_state10_pp1_iter1_stage1() {
    ap_enable_state10_pp1_iter1_stage1 = (esl_seteq<1,1,1>(ap_CS_fsm_pp1_stage1.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_1));
}

void xFHistogramKernel::thread_ap_enable_state8_pp1_iter0_stage1() {
    ap_enable_state8_pp1_iter0_stage1 = (esl_seteq<1,1,1>(ap_enable_reg_pp1_iter0.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_CS_fsm_pp1_stage1.read(), ap_const_logic_1));
}

void xFHistogramKernel::thread_ap_enable_state9_pp1_iter1_stage0() {
    ap_enable_state9_pp1_iter1_stage0 = (esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_1) && esl_seteq<1,1,1>(ap_CS_fsm_pp1_stage0.read(), ap_const_logic_1));
}

void xFHistogramKernel::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void xFHistogramKernel::thread_ap_idle_pp1() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp1_iter1.read()))) {
        ap_idle_pp1 = ap_const_logic_1;
    } else {
        ap_idle_pp1 = ap_const_logic_0;
    }
}

void xFHistogramKernel::thread_ap_idle_pp2() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp2_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp2_iter1.read()))) {
        ap_idle_pp2 = ap_const_logic_1;
    } else {
        ap_idle_pp2 = ap_const_logic_0;
    }
}

void xFHistogramKernel::thread_ap_phi_mux_p_0396_0_phi_fu_223_p4() {
    if ((esl_seteq<1,1,1>(icmp_ln887_13_reg_401.read(), ap_const_lv1_1) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        ap_phi_mux_p_0396_0_phi_fu_223_p4 = col_V_reg_410.read();
    } else {
        ap_phi_mux_p_0396_0_phi_fu_223_p4 = p_0396_0_reg_219.read();
    }
}

void xFHistogramKernel::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state14.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void xFHistogramKernel::thread_col_V_fu_317_p2() {
    col_V_fu_317_p2 = (!p_0396_0_reg_219.read().is_01() || !ap_const_lv9_2.is_01())? sc_lv<9>(): (sc_biguint<9>(p_0396_0_reg_219.read()) + sc_biguint<9>(ap_const_lv9_2));
}

void xFHistogramKernel::thread_hist_array_address0() {
    hist_array_address0 =  (sc_lv<8>) (zext_ln544_4_reg_429.read());
}

void xFHistogramKernel::thread_hist_array_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()))) {
        hist_array_ce0 = ap_const_logic_1;
    } else {
        hist_array_ce0 = ap_const_logic_0;
    }
}

void xFHistogramKernel::thread_hist_array_d0() {
    hist_array_d0 = (!tmp_hist1_0_q0.read().is_01() || !tmp_hist_0_q0.read().is_01())? sc_lv<32>(): (sc_biguint<32>(tmp_hist1_0_q0.read()) + sc_biguint<32>(tmp_hist_0_q0.read()));
}

void xFHistogramKernel::thread_hist_array_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln887_14_reg_420.read(), ap_const_lv1_0))) {
        hist_array_we0 = ap_const_logic_1;
    } else {
        hist_array_we0 = ap_const_logic_0;
    }
}

void xFHistogramKernel::thread_i_V_1_fu_348_p2() {
    i_V_1_fu_348_p2 = (!t_V_7_reg_231.read().is_01() || !ap_const_lv9_1.is_01())? sc_lv<9>(): (sc_biguint<9>(t_V_7_reg_231.read()) + sc_biguint<9>(ap_const_lv9_1));
}

void xFHistogramKernel::thread_i_V_fu_282_p2() {
    i_V_fu_282_p2 = (!t_V_reg_197.read().is_01() || !ap_const_lv9_1.is_01())? sc_lv<9>(): (sc_biguint<9>(t_V_reg_197.read()) + sc_biguint<9>(ap_const_lv9_1));
}

void xFHistogramKernel::thread_icmp_ln47_fu_253_p2() {
    icmp_ln47_fu_253_p2 = (!phi_ln47_reg_175.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(phi_ln47_reg_175.read() == ap_const_lv8_FF);
}

void xFHistogramKernel::thread_icmp_ln48_fu_270_p2() {
    icmp_ln48_fu_270_p2 = (!phi_ln48_reg_186.read().is_01() || !ap_const_lv8_FF.is_01())? sc_lv<1>(): sc_lv<1>(phi_ln48_reg_186.read() == ap_const_lv8_FF);
}

void xFHistogramKernel::thread_icmp_ln887_12_fu_294_p2() {
    icmp_ln887_12_fu_294_p2 = (!t_V_6_reg_208.read().is_01() || !ap_const_lv8_B4.is_01())? sc_lv<1>(): (sc_biguint<8>(t_V_6_reg_208.read()) < sc_biguint<8>(ap_const_lv8_B4));
}

void xFHistogramKernel::thread_icmp_ln887_13_fu_306_p2() {
    icmp_ln887_13_fu_306_p2 = (!ap_phi_mux_p_0396_0_phi_fu_223_p4.read().is_01() || !ap_const_lv9_140.is_01())? sc_lv<1>(): (sc_biguint<9>(ap_phi_mux_p_0396_0_phi_fu_223_p4.read()) < sc_biguint<9>(ap_const_lv9_140));
}

void xFHistogramKernel::thread_icmp_ln887_14_fu_342_p2() {
    icmp_ln887_14_fu_342_p2 = (!t_V_7_reg_231.read().is_01() || !ap_const_lv9_100.is_01())? sc_lv<1>(): sc_lv<1>(t_V_7_reg_231.read() == ap_const_lv9_100);
}

void xFHistogramKernel::thread_icmp_ln887_fu_276_p2() {
    icmp_ln887_fu_276_p2 = (!t_V_reg_197.read().is_01() || !ap_const_lv9_100.is_01())? sc_lv<1>(): sc_lv<1>(t_V_reg_197.read() == ap_const_lv9_100);
}

void xFHistogramKernel::thread_p_src_mat_data_V_blk_n() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage1.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(icmp_ln887_13_reg_401.read(), ap_const_lv1_1)) || 
         (esl_seteq<1,1,1>(icmp_ln887_13_reg_401.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0)))) {
        p_src_mat_data_V_blk_n = p_src_mat_data_V_empty_n.read();
    } else {
        p_src_mat_data_V_blk_n = ap_const_logic_1;
    }
}

void xFHistogramKernel::thread_p_src_mat_data_V_read() {
    if (((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
          esl_seteq<1,1,1>(icmp_ln887_13_reg_401.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(icmp_ln887_13_reg_401.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)))) {
        p_src_mat_data_V_read = ap_const_logic_1;
    } else {
        p_src_mat_data_V_read = ap_const_logic_0;
    }
}

void xFHistogramKernel::thread_row_V_fu_300_p2() {
    row_V_fu_300_p2 = (!t_V_6_reg_208.read().is_01() || !ap_const_lv8_1.is_01())? sc_lv<8>(): (sc_biguint<8>(t_V_6_reg_208.read()) + sc_biguint<8>(ap_const_lv8_1));
}

void xFHistogramKernel::thread_tmp_hist1_0_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp2_stage0.read(), ap_const_boolean_0))) {
        tmp_hist1_0_address0 =  (sc_lv<8>) (zext_ln544_4_fu_354_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage1.read(), ap_const_boolean_0) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()))) {
        tmp_hist1_0_address0 = tmp_hist1_0_addr_3_reg_415.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        tmp_hist1_0_address0 =  (sc_lv<8>) (zext_ln544_6_fu_323_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        tmp_hist1_0_address0 =  (sc_lv<8>) (zext_ln544_fu_288_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
        tmp_hist1_0_address0 =  (sc_lv<8>) (zext_ln48_fu_265_p1.read());
    } else {
        tmp_hist1_0_address0 = "XXXXXXXX";
    }
}

void xFHistogramKernel::thread_tmp_hist1_0_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage1_11001.read(), ap_const_boolean_0)))) {
        tmp_hist1_0_ce0 = ap_const_logic_1;
    } else {
        tmp_hist1_0_ce0 = ap_const_logic_0;
    }
}

void xFHistogramKernel::thread_tmp_hist1_0_d0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage1.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()))) {
        tmp_hist1_0_d0 = add_ln99_fu_335_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        tmp_hist1_0_d0 = ap_const_lv32_0;
    } else {
        tmp_hist1_0_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void xFHistogramKernel::thread_tmp_hist1_0_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln887_fu_276_p2.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage1_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln887_13_reg_401_pp1_iter1_reg.read())))) {
        tmp_hist1_0_we0 = ap_const_logic_1;
    } else {
        tmp_hist1_0_we0 = ap_const_logic_0;
    }
}

void xFHistogramKernel::thread_tmp_hist_0_address0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp2_stage0.read(), ap_const_boolean_0))) {
        tmp_hist_0_address0 =  (sc_lv<8>) (zext_ln544_4_fu_354_p1.read());
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        tmp_hist_0_address0 = tmp_hist_0_addr_3_reg_405.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
                esl_seteq<1,1,1>(ap_block_pp1_stage1.read(), ap_const_boolean_0))) {
        tmp_hist_0_address0 =  (sc_lv<8>) (zext_ln544_5_fu_312_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        tmp_hist_0_address0 =  (sc_lv<8>) (zext_ln544_fu_288_p1.read());
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        tmp_hist_0_address0 =  (sc_lv<8>) (zext_ln47_fu_248_p1.read());
    } else {
        tmp_hist_0_address0 = "XXXXXXXX";
    }
}

void xFHistogramKernel::thread_tmp_hist_0_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage1_11001.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp2_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp2_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter0.read())) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)))) {
        tmp_hist_0_ce0 = ap_const_logic_1;
    } else {
        tmp_hist_0_ce0 = ap_const_logic_0;
    }
}

void xFHistogramKernel::thread_tmp_hist_0_d0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp1_stage0.read(), ap_const_boolean_0))) {
        tmp_hist_0_d0 = add_ln97_fu_328_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
                esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()))) {
        tmp_hist_0_d0 = ap_const_lv32_0;
    } else {
        tmp_hist_0_d0 =  (sc_lv<32>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void xFHistogramKernel::thread_tmp_hist_0_we0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln887_fu_276_p2.read())) || 
         (esl_seteq<1,1,1>(icmp_ln887_13_reg_401.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && 
          esl_seteq<1,1,1>(ap_block_pp1_stage0_11001.read(), ap_const_boolean_0)))) {
        tmp_hist_0_we0 = ap_const_logic_1;
    } else {
        tmp_hist_0_we0 = ap_const_logic_0;
    }
}

void xFHistogramKernel::thread_zext_ln47_fu_248_p1() {
    zext_ln47_fu_248_p1 = esl_zext<64,8>(phi_ln47_reg_175.read());
}

void xFHistogramKernel::thread_zext_ln48_fu_265_p1() {
    zext_ln48_fu_265_p1 = esl_zext<64,8>(phi_ln48_reg_186.read());
}

void xFHistogramKernel::thread_zext_ln544_4_fu_354_p1() {
    zext_ln544_4_fu_354_p1 = esl_zext<64,9>(t_V_7_reg_231.read());
}

void xFHistogramKernel::thread_zext_ln544_5_fu_312_p1() {
    zext_ln544_5_fu_312_p1 = esl_zext<64,8>(p_src_mat_data_V_dout.read());
}

void xFHistogramKernel::thread_zext_ln544_6_fu_323_p1() {
    zext_ln544_6_fu_323_p1 = esl_zext<64,8>(p_src_mat_data_V_dout.read());
}

void xFHistogramKernel::thread_zext_ln544_fu_288_p1() {
    zext_ln544_fu_288_p1 = esl_zext<64,9>(t_V_reg_197.read());
}

void xFHistogramKernel::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && esl_seteq<1,1,1>(ap_start.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln47_fu_253_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read()) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln48_fu_270_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state3;
            }
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln887_fu_276_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state4;
            } else {
                ap_NS_fsm = ap_ST_fsm_state5;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(icmp_ln887_12_fu_294_p2.read(), ap_const_lv1_0))) {
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            }
            break;
        case 64 : 
            if ((esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln887_13_fu_306_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln887_13_fu_306_p2.read(), ap_const_lv1_0) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter1.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state11;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            }
            break;
        case 128 : 
            if ((esl_seteq<1,1,1>(ap_block_pp1_stage1_subdone.read(), ap_const_boolean_0) && !(esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage1_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter0.read(), ap_const_logic_0)))) {
                ap_NS_fsm = ap_ST_fsm_pp1_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp1_stage1.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp1_iter1.read()) && esl_seteq<1,1,1>(ap_block_pp1_stage1_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_enable_reg_pp1_iter0.read(), ap_const_logic_0))) {
                ap_NS_fsm = ap_ST_fsm_state11;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp1_stage1;
            }
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 512 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp2_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln887_14_fu_342_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp2_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp2_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln887_14_fu_342_p2.read()))) {
                ap_NS_fsm = ap_ST_fsm_state14;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            }
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm =  (sc_lv<11>) ("XXXXXXXXXXX");
            break;
    }
}

}

