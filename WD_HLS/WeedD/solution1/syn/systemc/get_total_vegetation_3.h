// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _get_total_vegetation_3_HH_
#define _get_total_vegetation_3_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "get_total_vegetation.h"
#include "get_total_vegetation_1.h"
#include "get_total_vegetation_2.h"
#include "get_total_vegetatBew.h"
#include "fifo_w24_d2_A_x2.h"

namespace ap_rtl {

struct get_total_vegetation_3 : public sc_module {
    // Port declarations 25
    sc_out< sc_lv<24> > agg_result_V;
    sc_out< sc_lv<16> > img_in_data_V_address0;
    sc_out< sc_logic > img_in_data_V_ce0;
    sc_out< sc_lv<8> > img_in_data_V_d0;
    sc_in< sc_lv<8> > img_in_data_V_q0;
    sc_out< sc_logic > img_in_data_V_we0;
    sc_out< sc_lv<16> > img_in_data_V_address1;
    sc_out< sc_logic > img_in_data_V_ce1;
    sc_out< sc_lv<8> > img_in_data_V_d1;
    sc_in< sc_lv<8> > img_in_data_V_q1;
    sc_out< sc_logic > img_in_data_V_we1;
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > agg_result_V_ap_vld;
    sc_out< sc_logic > ap_done;
    sc_in< sc_lv<16> > img_in_data_V_i_address0;
    sc_in< sc_logic > img_in_data_V_i_ce0;
    sc_out< sc_lv<8> > img_in_data_V_i_q0;
    sc_in< sc_lv<16> > img_in_data_V_t_address0;
    sc_in< sc_logic > img_in_data_V_t_ce0;
    sc_out< sc_lv<8> > img_in_data_V_t_q0;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > ap_idle;
    sc_in< sc_logic > ap_continue;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    get_total_vegetation_3(sc_module_name name);
    SC_HAS_PROCESS(get_total_vegetation_3);

    ~get_total_vegetation_3();

    sc_trace_file* mVcdFile;

    get_total_vegetation* get_total_vegetation_U0;
    get_total_vegetation_1* get_total_vegetation_1_U0;
    get_total_vegetation_2* get_total_vegetation_2_U0;
    get_total_vegetatBew* img_in_data_V_U;
    fifo_w24_d2_A_x2* p_Val2_loc_channel_U;
    fifo_w24_d2_A_x2* p_Val2_19_loc_chan_U;
    sc_signal< sc_logic > get_total_vegetation_U0_ap_start;
    sc_signal< sc_logic > get_total_vegetation_U0_ap_done;
    sc_signal< sc_logic > get_total_vegetation_U0_ap_continue;
    sc_signal< sc_logic > get_total_vegetation_U0_ap_idle;
    sc_signal< sc_logic > get_total_vegetation_U0_ap_ready;
    sc_signal< sc_lv<16> > get_total_vegetation_U0_img_in_data_V_address0;
    sc_signal< sc_logic > get_total_vegetation_U0_img_in_data_V_ce0;
    sc_signal< sc_lv<24> > get_total_vegetation_U0_ap_return;
    sc_signal< sc_logic > ap_channel_done_p_Val2_loc_channel;
    sc_signal< sc_logic > p_Val2_loc_channel_full_n;
    sc_signal< sc_logic > ap_sync_reg_channel_write_p_Val2_loc_channel;
    sc_signal< sc_logic > ap_sync_channel_write_p_Val2_loc_channel;
    sc_signal< sc_logic > ap_channel_done_img_in_data_V;
    sc_signal< sc_logic > get_total_vegetation_U0_img_in_data_V_full_n;
    sc_signal< sc_logic > ap_sync_reg_channel_write_img_in_data_V;
    sc_signal< sc_logic > ap_sync_channel_write_img_in_data_V;
    sc_signal< sc_logic > get_total_vegetation_1_U0_ap_start;
    sc_signal< sc_logic > get_total_vegetation_1_U0_ap_done;
    sc_signal< sc_logic > get_total_vegetation_1_U0_ap_continue;
    sc_signal< sc_logic > get_total_vegetation_1_U0_ap_idle;
    sc_signal< sc_logic > get_total_vegetation_1_U0_ap_ready;
    sc_signal< sc_lv<16> > get_total_vegetation_1_U0_img_in_data_V_address0;
    sc_signal< sc_logic > get_total_vegetation_1_U0_img_in_data_V_ce0;
    sc_signal< sc_lv<24> > get_total_vegetation_1_U0_ap_return;
    sc_signal< sc_logic > ap_channel_done_p_Val2_19_loc_chan;
    sc_signal< sc_logic > p_Val2_19_loc_chan_full_n;
    sc_signal< sc_logic > get_total_vegetation_2_U0_ap_start;
    sc_signal< sc_logic > get_total_vegetation_2_U0_ap_done;
    sc_signal< sc_logic > get_total_vegetation_2_U0_ap_continue;
    sc_signal< sc_logic > get_total_vegetation_2_U0_ap_idle;
    sc_signal< sc_logic > get_total_vegetation_2_U0_ap_ready;
    sc_signal< sc_lv<24> > get_total_vegetation_2_U0_agg_result_V;
    sc_signal< sc_logic > get_total_vegetation_2_U0_agg_result_V_ap_vld;
    sc_signal< sc_logic > ap_sync_continue;
    sc_signal< sc_logic > img_in_data_V_i_full_n;
    sc_signal< sc_logic > img_in_data_V_t_empty_n;
    sc_signal< sc_lv<16> > img_in_data_V_i_address0_x;
    sc_signal< sc_logic > img_in_data_V_i_ce0_x;
    sc_signal< sc_lv<8> > img_in_data_V_i_d0;
    sc_signal< sc_lv<8> > img_in_data_V_i_q0_x;
    sc_signal< sc_logic > img_in_data_V_i_we0;
    sc_signal< sc_lv<16> > img_in_data_V_t_address0_x;
    sc_signal< sc_logic > img_in_data_V_t_ce0_x;
    sc_signal< sc_lv<8> > img_in_data_V_t_d0;
    sc_signal< sc_lv<8> > img_in_data_V_t_q0_x;
    sc_signal< sc_logic > img_in_data_V_t_we0;
    sc_signal< sc_lv<24> > p_Val2_loc_channel_dout;
    sc_signal< sc_logic > p_Val2_loc_channel_empty_n;
    sc_signal< sc_lv<24> > p_Val2_19_loc_chan_dout;
    sc_signal< sc_logic > p_Val2_19_loc_chan_empty_n;
    sc_signal< sc_logic > ap_sync_done;
    sc_signal< sc_logic > ap_sync_ready;
    sc_signal< sc_logic > get_total_vegetation_U0_start_full_n;
    sc_signal< sc_logic > get_total_vegetation_U0_start_write;
    sc_signal< sc_logic > get_total_vegetation_1_U0_start_full_n;
    sc_signal< sc_logic > get_total_vegetation_1_U0_start_write;
    sc_signal< sc_logic > get_total_vegetation_2_U0_start_full_n;
    sc_signal< sc_logic > get_total_vegetation_2_U0_start_write;
    static const sc_lv<24> ap_const_lv24_0;
    static const sc_lv<16> ap_const_lv16_0;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_logic ap_const_logic_1;
    static const sc_lv<8> ap_const_lv8_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_agg_result_V();
    void thread_agg_result_V_ap_vld();
    void thread_ap_channel_done_img_in_data_V();
    void thread_ap_channel_done_p_Val2_19_loc_chan();
    void thread_ap_channel_done_p_Val2_loc_channel();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sync_channel_write_img_in_data_V();
    void thread_ap_sync_channel_write_p_Val2_loc_channel();
    void thread_ap_sync_continue();
    void thread_ap_sync_done();
    void thread_ap_sync_ready();
    void thread_get_total_vegetation_1_U0_ap_continue();
    void thread_get_total_vegetation_1_U0_ap_start();
    void thread_get_total_vegetation_1_U0_start_full_n();
    void thread_get_total_vegetation_1_U0_start_write();
    void thread_get_total_vegetation_2_U0_ap_continue();
    void thread_get_total_vegetation_2_U0_ap_start();
    void thread_get_total_vegetation_2_U0_start_full_n();
    void thread_get_total_vegetation_2_U0_start_write();
    void thread_get_total_vegetation_U0_ap_continue();
    void thread_get_total_vegetation_U0_ap_start();
    void thread_get_total_vegetation_U0_img_in_data_V_full_n();
    void thread_get_total_vegetation_U0_start_full_n();
    void thread_get_total_vegetation_U0_start_write();
    void thread_img_in_data_V_address0();
    void thread_img_in_data_V_address1();
    void thread_img_in_data_V_ce0();
    void thread_img_in_data_V_ce1();
    void thread_img_in_data_V_d0();
    void thread_img_in_data_V_d1();
    void thread_img_in_data_V_i_address0_x();
    void thread_img_in_data_V_i_ce0_x();
    void thread_img_in_data_V_i_d0();
    void thread_img_in_data_V_i_q0_x();
    void thread_img_in_data_V_i_we0();
    void thread_img_in_data_V_t_address0_x();
    void thread_img_in_data_V_t_ce0_x();
    void thread_img_in_data_V_t_d0();
    void thread_img_in_data_V_t_q0_x();
    void thread_img_in_data_V_t_we0();
    void thread_img_in_data_V_we0();
    void thread_img_in_data_V_we1();
};

}

using namespace ap_rtl;

#endif
