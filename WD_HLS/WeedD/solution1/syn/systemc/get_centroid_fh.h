// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _get_centroid_fh_HH_
#define _get_centroid_fh_HH_

#include "systemc.h"
#include "AESL_pkg.h"

#include "get_centroid_fh_entr.h"
#include "get_centroid_fh_Bloc_1.h"
#include "get_centroid_fh_Loop.h"
#include "get_centroid_fh_Bloc.h"
#include "fifo_w16_d3_A.h"
#include "fifo_w8_d3_A.h"
#include "fifo_w8_d2_A_x0.h"
#include "fifo_w16_d2_A.h"
#include "fifo_w32_d2_A_x0.h"
#include "start_for_get_cenJfO.h"

namespace ap_rtl {

struct get_centroid_fh : public sc_module {
    // Port declarations 27
    sc_out< sc_lv<10> > micro_roi_data_V_address0;
    sc_out< sc_logic > micro_roi_data_V_ce0;
    sc_out< sc_lv<8> > micro_roi_data_V_d0;
    sc_in< sc_lv<8> > micro_roi_data_V_q0;
    sc_out< sc_logic > micro_roi_data_V_we0;
    sc_out< sc_lv<10> > micro_roi_data_V_address1;
    sc_out< sc_logic > micro_roi_data_V_ce1;
    sc_out< sc_lv<8> > micro_roi_data_V_d1;
    sc_in< sc_lv<8> > micro_roi_data_V_q1;
    sc_out< sc_logic > micro_roi_data_V_we1;
    sc_in< sc_lv<16> > h_offset;
    sc_in< sc_lv<8> > v_offset;
    sc_in< sc_lv<8> > v_limit;
    sc_in< sc_lv<16> > h_limit;
    sc_out< sc_lv<48> > c;
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > h_offset_ap_vld;
    sc_in< sc_logic > v_offset_ap_vld;
    sc_in< sc_logic > v_limit_ap_vld;
    sc_in< sc_logic > h_limit_ap_vld;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > c_ap_vld;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_ready;
    sc_out< sc_logic > ap_idle;
    sc_in< sc_logic > ap_continue;
    sc_signal< sc_logic > ap_var_for_const0;


    // Module declarations
    get_centroid_fh(sc_module_name name);
    SC_HAS_PROCESS(get_centroid_fh);

    ~get_centroid_fh();

    sc_trace_file* mVcdFile;

    get_centroid_fh_entr* get_centroid_fh_entr_U0;
    get_centroid_fh_Bloc_1* get_centroid_fh_Bloc_1_U0;
    get_centroid_fh_Loop* get_centroid_fh_Loop_U0;
    get_centroid_fh_Bloc* get_centroid_fh_Bloc_U0;
    fifo_w16_d3_A* h_offset_c_U;
    fifo_w8_d3_A* v_offset_c_U;
    fifo_w8_d2_A_x0* v_limit_c_U;
    fifo_w8_d2_A_x0* v_limit_c8_U;
    fifo_w16_d2_A* h_limit_c_U;
    fifo_w16_d2_A* h_limit_c9_U;
    fifo_w16_d2_A* lshr_ln146_cast_loc_s_U;
    fifo_w32_d2_A_x0* lshr_ln147_cast_loc_s_U;
    fifo_w32_d2_A_x0* v_sum_0_loc_channel_U;
    fifo_w32_d2_A_x0* h_sum_0_loc_channel_U;
    fifo_w32_d2_A_x0* p_sum_0_loc_channel_U;
    start_for_get_cenJfO* start_for_get_cenJfO_U;
    sc_signal< sc_logic > get_centroid_fh_entr_U0_ap_start;
    sc_signal< sc_logic > get_centroid_fh_entr_U0_ap_done;
    sc_signal< sc_logic > get_centroid_fh_entr_U0_ap_continue;
    sc_signal< sc_logic > get_centroid_fh_entr_U0_ap_idle;
    sc_signal< sc_logic > get_centroid_fh_entr_U0_ap_ready;
    sc_signal< sc_logic > get_centroid_fh_entr_U0_start_out;
    sc_signal< sc_logic > get_centroid_fh_entr_U0_start_write;
    sc_signal< sc_lv<16> > get_centroid_fh_entr_U0_h_offset_out_din;
    sc_signal< sc_logic > get_centroid_fh_entr_U0_h_offset_out_write;
    sc_signal< sc_lv<8> > get_centroid_fh_entr_U0_v_offset_out_din;
    sc_signal< sc_logic > get_centroid_fh_entr_U0_v_offset_out_write;
    sc_signal< sc_lv<8> > get_centroid_fh_entr_U0_v_limit_out_din;
    sc_signal< sc_logic > get_centroid_fh_entr_U0_v_limit_out_write;
    sc_signal< sc_lv<8> > get_centroid_fh_entr_U0_v_limit_out1_din;
    sc_signal< sc_logic > get_centroid_fh_entr_U0_v_limit_out1_write;
    sc_signal< sc_lv<16> > get_centroid_fh_entr_U0_h_limit_out_din;
    sc_signal< sc_logic > get_centroid_fh_entr_U0_h_limit_out_write;
    sc_signal< sc_lv<16> > get_centroid_fh_entr_U0_h_limit_out2_din;
    sc_signal< sc_logic > get_centroid_fh_entr_U0_h_limit_out2_write;
    sc_signal< sc_logic > get_centroid_fh_Bloc_1_U0_ap_start;
    sc_signal< sc_logic > get_centroid_fh_Bloc_1_U0_ap_done;
    sc_signal< sc_logic > get_centroid_fh_Bloc_1_U0_ap_continue;
    sc_signal< sc_logic > get_centroid_fh_Bloc_1_U0_ap_idle;
    sc_signal< sc_logic > get_centroid_fh_Bloc_1_U0_ap_ready;
    sc_signal< sc_logic > get_centroid_fh_Bloc_1_U0_v_limit_read;
    sc_signal< sc_logic > get_centroid_fh_Bloc_1_U0_h_limit_read;
    sc_signal< sc_lv<16> > get_centroid_fh_Bloc_1_U0_ap_return_0;
    sc_signal< sc_lv<32> > get_centroid_fh_Bloc_1_U0_ap_return_1;
    sc_signal< sc_logic > ap_channel_done_lshr_ln147_cast_loc_s;
    sc_signal< sc_logic > lshr_ln147_cast_loc_s_full_n;
    sc_signal< sc_logic > ap_sync_reg_channel_write_lshr_ln147_cast_loc_s;
    sc_signal< sc_logic > ap_sync_channel_write_lshr_ln147_cast_loc_s;
    sc_signal< sc_logic > ap_channel_done_lshr_ln146_cast_loc_s;
    sc_signal< sc_logic > lshr_ln146_cast_loc_s_full_n;
    sc_signal< sc_logic > ap_sync_reg_channel_write_lshr_ln146_cast_loc_s;
    sc_signal< sc_logic > ap_sync_channel_write_lshr_ln146_cast_loc_s;
    sc_signal< sc_logic > get_centroid_fh_Loop_U0_ap_start;
    sc_signal< sc_logic > get_centroid_fh_Loop_U0_ap_done;
    sc_signal< sc_logic > get_centroid_fh_Loop_U0_ap_continue;
    sc_signal< sc_logic > get_centroid_fh_Loop_U0_ap_idle;
    sc_signal< sc_logic > get_centroid_fh_Loop_U0_ap_ready;
    sc_signal< sc_logic > get_centroid_fh_Loop_U0_h_limit_read;
    sc_signal< sc_logic > get_centroid_fh_Loop_U0_v_limit_read;
    sc_signal< sc_lv<10> > get_centroid_fh_Loop_U0_micro_roi_data_V_address0;
    sc_signal< sc_logic > get_centroid_fh_Loop_U0_micro_roi_data_V_ce0;
    sc_signal< sc_lv<32> > get_centroid_fh_Loop_U0_ap_return_0;
    sc_signal< sc_lv<32> > get_centroid_fh_Loop_U0_ap_return_1;
    sc_signal< sc_lv<32> > get_centroid_fh_Loop_U0_ap_return_2;
    sc_signal< sc_logic > ap_channel_done_p_sum_0_loc_channel;
    sc_signal< sc_logic > p_sum_0_loc_channel_full_n;
    sc_signal< sc_logic > ap_sync_reg_channel_write_p_sum_0_loc_channel;
    sc_signal< sc_logic > ap_sync_channel_write_p_sum_0_loc_channel;
    sc_signal< sc_logic > ap_channel_done_h_sum_0_loc_channel;
    sc_signal< sc_logic > h_sum_0_loc_channel_full_n;
    sc_signal< sc_logic > ap_sync_reg_channel_write_h_sum_0_loc_channel;
    sc_signal< sc_logic > ap_sync_channel_write_h_sum_0_loc_channel;
    sc_signal< sc_logic > ap_channel_done_v_sum_0_loc_channel;
    sc_signal< sc_logic > v_sum_0_loc_channel_full_n;
    sc_signal< sc_logic > ap_sync_reg_channel_write_v_sum_0_loc_channel;
    sc_signal< sc_logic > ap_sync_channel_write_v_sum_0_loc_channel;
    sc_signal< sc_logic > get_centroid_fh_Bloc_U0_ap_start;
    sc_signal< sc_logic > get_centroid_fh_Bloc_U0_ap_done;
    sc_signal< sc_logic > get_centroid_fh_Bloc_U0_ap_continue;
    sc_signal< sc_logic > get_centroid_fh_Bloc_U0_ap_idle;
    sc_signal< sc_logic > get_centroid_fh_Bloc_U0_ap_ready;
    sc_signal< sc_logic > get_centroid_fh_Bloc_U0_v_offset_read;
    sc_signal< sc_logic > get_centroid_fh_Bloc_U0_h_offset_read;
    sc_signal< sc_lv<48> > get_centroid_fh_Bloc_U0_c;
    sc_signal< sc_logic > get_centroid_fh_Bloc_U0_c_ap_vld;
    sc_signal< sc_logic > ap_sync_continue;
    sc_signal< sc_logic > h_offset_c_full_n;
    sc_signal< sc_lv<16> > h_offset_c_dout;
    sc_signal< sc_logic > h_offset_c_empty_n;
    sc_signal< sc_logic > v_offset_c_full_n;
    sc_signal< sc_lv<8> > v_offset_c_dout;
    sc_signal< sc_logic > v_offset_c_empty_n;
    sc_signal< sc_logic > v_limit_c_full_n;
    sc_signal< sc_lv<8> > v_limit_c_dout;
    sc_signal< sc_logic > v_limit_c_empty_n;
    sc_signal< sc_logic > v_limit_c8_full_n;
    sc_signal< sc_lv<8> > v_limit_c8_dout;
    sc_signal< sc_logic > v_limit_c8_empty_n;
    sc_signal< sc_logic > h_limit_c_full_n;
    sc_signal< sc_lv<16> > h_limit_c_dout;
    sc_signal< sc_logic > h_limit_c_empty_n;
    sc_signal< sc_logic > h_limit_c9_full_n;
    sc_signal< sc_lv<16> > h_limit_c9_dout;
    sc_signal< sc_logic > h_limit_c9_empty_n;
    sc_signal< sc_lv<16> > lshr_ln146_cast_loc_s_dout;
    sc_signal< sc_logic > lshr_ln146_cast_loc_s_empty_n;
    sc_signal< sc_lv<32> > lshr_ln147_cast_loc_s_dout;
    sc_signal< sc_logic > lshr_ln147_cast_loc_s_empty_n;
    sc_signal< sc_lv<32> > v_sum_0_loc_channel_dout;
    sc_signal< sc_logic > v_sum_0_loc_channel_empty_n;
    sc_signal< sc_lv<32> > h_sum_0_loc_channel_dout;
    sc_signal< sc_logic > h_sum_0_loc_channel_empty_n;
    sc_signal< sc_lv<32> > p_sum_0_loc_channel_dout;
    sc_signal< sc_logic > p_sum_0_loc_channel_empty_n;
    sc_signal< sc_logic > ap_sync_done;
    sc_signal< sc_logic > ap_sync_ready;
    sc_signal< sc_logic > ap_sync_reg_get_centroid_fh_entr_U0_ap_ready;
    sc_signal< sc_logic > ap_sync_get_centroid_fh_entr_U0_ap_ready;
    sc_signal< sc_lv<2> > get_centroid_fh_entr_U0_ap_ready_count;
    sc_signal< sc_logic > ap_sync_reg_get_centroid_fh_Loop_U0_ap_ready;
    sc_signal< sc_logic > ap_sync_get_centroid_fh_Loop_U0_ap_ready;
    sc_signal< sc_lv<2> > get_centroid_fh_Loop_U0_ap_ready_count;
    sc_signal< sc_lv<1> > start_for_get_centroid_fh_Bloc_1_U0_din;
    sc_signal< sc_logic > start_for_get_centroid_fh_Bloc_1_U0_full_n;
    sc_signal< sc_lv<1> > start_for_get_centroid_fh_Bloc_1_U0_dout;
    sc_signal< sc_logic > start_for_get_centroid_fh_Bloc_1_U0_empty_n;
    sc_signal< sc_logic > get_centroid_fh_Bloc_1_U0_start_full_n;
    sc_signal< sc_logic > get_centroid_fh_Bloc_1_U0_start_write;
    sc_signal< sc_logic > get_centroid_fh_Loop_U0_start_full_n;
    sc_signal< sc_logic > get_centroid_fh_Loop_U0_start_write;
    sc_signal< sc_logic > get_centroid_fh_Bloc_U0_start_full_n;
    sc_signal< sc_logic > get_centroid_fh_Bloc_U0_start_write;
    static const sc_lv<10> ap_const_lv10_0;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<48> ap_const_lv48_0;
    static const sc_logic ap_const_logic_1;
    static const sc_lv<2> ap_const_lv2_0;
    static const sc_lv<2> ap_const_lv2_1;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_var_for_const0();
    void thread_ap_clk_no_reset_();
    void thread_ap_channel_done_h_sum_0_loc_channel();
    void thread_ap_channel_done_lshr_ln146_cast_loc_s();
    void thread_ap_channel_done_lshr_ln147_cast_loc_s();
    void thread_ap_channel_done_p_sum_0_loc_channel();
    void thread_ap_channel_done_v_sum_0_loc_channel();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_ap_sync_channel_write_h_sum_0_loc_channel();
    void thread_ap_sync_channel_write_lshr_ln146_cast_loc_s();
    void thread_ap_sync_channel_write_lshr_ln147_cast_loc_s();
    void thread_ap_sync_channel_write_p_sum_0_loc_channel();
    void thread_ap_sync_channel_write_v_sum_0_loc_channel();
    void thread_ap_sync_continue();
    void thread_ap_sync_done();
    void thread_ap_sync_get_centroid_fh_Loop_U0_ap_ready();
    void thread_ap_sync_get_centroid_fh_entr_U0_ap_ready();
    void thread_ap_sync_ready();
    void thread_c();
    void thread_c_ap_vld();
    void thread_get_centroid_fh_Bloc_1_U0_ap_continue();
    void thread_get_centroid_fh_Bloc_1_U0_ap_start();
    void thread_get_centroid_fh_Bloc_1_U0_start_full_n();
    void thread_get_centroid_fh_Bloc_1_U0_start_write();
    void thread_get_centroid_fh_Bloc_U0_ap_continue();
    void thread_get_centroid_fh_Bloc_U0_ap_start();
    void thread_get_centroid_fh_Bloc_U0_start_full_n();
    void thread_get_centroid_fh_Bloc_U0_start_write();
    void thread_get_centroid_fh_Loop_U0_ap_continue();
    void thread_get_centroid_fh_Loop_U0_ap_start();
    void thread_get_centroid_fh_Loop_U0_start_full_n();
    void thread_get_centroid_fh_Loop_U0_start_write();
    void thread_get_centroid_fh_entr_U0_ap_continue();
    void thread_get_centroid_fh_entr_U0_ap_start();
    void thread_micro_roi_data_V_address0();
    void thread_micro_roi_data_V_address1();
    void thread_micro_roi_data_V_ce0();
    void thread_micro_roi_data_V_ce1();
    void thread_micro_roi_data_V_d0();
    void thread_micro_roi_data_V_d1();
    void thread_micro_roi_data_V_we0();
    void thread_micro_roi_data_V_we1();
    void thread_start_for_get_centroid_fh_Bloc_1_U0_din();
};

}

using namespace ap_rtl;

#endif
