// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "convert_fp_to_8b770.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic convert_fp_to_8b770::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic convert_fp_to_8b770::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<24> convert_fp_to_8b770::ap_ST_fsm_state1 = "1";
const sc_lv<24> convert_fp_to_8b770::ap_ST_fsm_state2 = "10";
const sc_lv<24> convert_fp_to_8b770::ap_ST_fsm_state3 = "100";
const sc_lv<24> convert_fp_to_8b770::ap_ST_fsm_state4 = "1000";
const sc_lv<24> convert_fp_to_8b770::ap_ST_fsm_state5 = "10000";
const sc_lv<24> convert_fp_to_8b770::ap_ST_fsm_state6 = "100000";
const sc_lv<24> convert_fp_to_8b770::ap_ST_fsm_state7 = "1000000";
const sc_lv<24> convert_fp_to_8b770::ap_ST_fsm_state8 = "10000000";
const sc_lv<24> convert_fp_to_8b770::ap_ST_fsm_state9 = "100000000";
const sc_lv<24> convert_fp_to_8b770::ap_ST_fsm_state10 = "1000000000";
const sc_lv<24> convert_fp_to_8b770::ap_ST_fsm_state11 = "10000000000";
const sc_lv<24> convert_fp_to_8b770::ap_ST_fsm_state12 = "100000000000";
const sc_lv<24> convert_fp_to_8b770::ap_ST_fsm_state13 = "1000000000000";
const sc_lv<24> convert_fp_to_8b770::ap_ST_fsm_state14 = "10000000000000";
const sc_lv<24> convert_fp_to_8b770::ap_ST_fsm_state15 = "100000000000000";
const sc_lv<24> convert_fp_to_8b770::ap_ST_fsm_state16 = "1000000000000000";
const sc_lv<24> convert_fp_to_8b770::ap_ST_fsm_state17 = "10000000000000000";
const sc_lv<24> convert_fp_to_8b770::ap_ST_fsm_state18 = "100000000000000000";
const sc_lv<24> convert_fp_to_8b770::ap_ST_fsm_state19 = "1000000000000000000";
const sc_lv<24> convert_fp_to_8b770::ap_ST_fsm_state20 = "10000000000000000000";
const sc_lv<24> convert_fp_to_8b770::ap_ST_fsm_state21 = "100000000000000000000";
const sc_lv<24> convert_fp_to_8b770::ap_ST_fsm_state22 = "1000000000000000000000";
const sc_lv<24> convert_fp_to_8b770::ap_ST_fsm_pp0_stage0 = "10000000000000000000000";
const sc_lv<24> convert_fp_to_8b770::ap_ST_fsm_state25 = "100000000000000000000000";
const sc_lv<32> convert_fp_to_8b770::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool convert_fp_to_8b770::ap_const_boolean_1 = true;
const sc_lv<32> convert_fp_to_8b770::ap_const_lv32_15 = "10101";
const sc_lv<32> convert_fp_to_8b770::ap_const_lv32_16 = "10110";
const bool convert_fp_to_8b770::ap_const_boolean_0 = false;
const sc_lv<1> convert_fp_to_8b770::ap_const_lv1_0 = "0";
const sc_lv<1> convert_fp_to_8b770::ap_const_lv1_1 = "1";
const sc_lv<16> convert_fp_to_8b770::ap_const_lv16_0 = "0000000000000000";
const sc_lv<24> convert_fp_to_8b770::ap_const_lv24_FF00 = "1111111100000000";
const sc_lv<24> convert_fp_to_8b770::ap_const_lv24_8 = "1000";
const sc_lv<16> convert_fp_to_8b770::ap_const_lv16_E100 = "1110000100000000";
const sc_lv<16> convert_fp_to_8b770::ap_const_lv16_1 = "1";
const sc_lv<8> convert_fp_to_8b770::ap_const_lv8_0 = "00000000";
const sc_lv<32> convert_fp_to_8b770::ap_const_lv32_40 = "1000000";
const sc_lv<32> convert_fp_to_8b770::ap_const_lv32_10 = "10000";
const sc_lv<32> convert_fp_to_8b770::ap_const_lv32_17 = "10111";
const sc_lv<8> convert_fp_to_8b770::ap_const_lv8_1 = "1";

convert_fp_to_8b770::convert_fp_to_8b770(sc_module_name name) : sc_module(name), mVcdFile(0) {
    ip_accel_app_sdivrcU_U203 = new ip_accel_app_sdivrcU<1,22,18,24,24>("ip_accel_app_sdivrcU_U203");
    ip_accel_app_sdivrcU_U203->clk(ap_clk);
    ip_accel_app_sdivrcU_U203->reset(ap_rst);
    ip_accel_app_sdivrcU_U203->start(grp_fu_108_ap_start);
    ip_accel_app_sdivrcU_U203->done(grp_fu_108_ap_done);
    ip_accel_app_sdivrcU_U203->din0(grp_fu_108_p0);
    ip_accel_app_sdivrcU_U203->din1(sub_ln703_cast_loc_c);
    ip_accel_app_sdivrcU_U203->ce(grp_fu_108_ce);
    ip_accel_app_sdivrcU_U203->dout(grp_fu_108_p2);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_add_ln851_fu_194_p2);
    sensitive << ( trunc_ln23_i_fu_184_p4 );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state22);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state25);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_01001);
    sensitive << ( veg_temp_data_V_empty_n );
    sensitive << ( img_out_data_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln59_reg_232 );

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( veg_temp_data_V_empty_n );
    sensitive << ( img_out_data_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln59_reg_232 );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( veg_temp_data_V_empty_n );
    sensitive << ( img_out_data_V_full_n );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln59_reg_232 );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_block_state23_pp0_stage0_iter0);

    SC_METHOD(thread_ap_block_state24_pp0_stage0_iter1);
    sensitive << ( veg_temp_data_V_empty_n );
    sensitive << ( img_out_data_V_full_n );
    sensitive << ( icmp_ln59_reg_232 );

    SC_METHOD(thread_ap_condition_pp0_exit_iter0_state23);
    sensitive << ( icmp_ln59_fu_128_p2 );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state25 );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_CS_fsm_state25 );

    SC_METHOD(thread_grp_fu_108_ap_start);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_grp_fu_108_ce);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_CS_fsm_state25 );

    SC_METHOD(thread_grp_fu_108_p0);
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_i_fu_134_p2);
    sensitive << ( i_0_i_i_i_reg_97 );

    SC_METHOD(thread_icmp_ln59_fu_128_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( i_0_i_i_i_reg_97 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_icmp_ln851_fu_178_p2);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln59_reg_232 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( trunc_ln851_fu_174_p1 );

    SC_METHOD(thread_img_out_data_V_blk_n);
    sensitive << ( img_out_data_V_full_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln59_reg_232 );

    SC_METHOD(thread_img_out_data_V_din);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln59_reg_232 );
    sensitive << ( ap_block_pp0_stage0_01001 );
    sensitive << ( trunc_ln23_i_fu_184_p4 );
    sensitive << ( p_Result_s_fu_166_p3 );
    sensitive << ( select_ln851_fu_200_p3 );

    SC_METHOD(thread_img_out_data_V_write);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln59_reg_232 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_min_value_V_c17_blk_n);
    sensitive << ( min_value_V_c17_empty_n );
    sensitive << ( ap_CS_fsm_state22 );

    SC_METHOD(thread_min_value_V_c17_read);
    sensitive << ( min_value_V_c17_empty_n );
    sensitive << ( ap_CS_fsm_state22 );

    SC_METHOD(thread_p_Result_s_fu_166_p3);
    sensitive << ( r_V_fu_161_p2 );

    SC_METHOD(thread_p_Val2_36_fu_140_p3);
    sensitive << ( veg_temp_data_V_dout );

    SC_METHOD(thread_r_V_fu_161_p0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ret_V_fu_152_p2 );

    SC_METHOD(thread_r_V_fu_161_p1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( sext_ln59_reg_222 );

    SC_METHOD(thread_r_V_fu_161_p2);
    sensitive << ( r_V_fu_161_p0 );
    sensitive << ( r_V_fu_161_p1 );

    SC_METHOD(thread_ret_V_fu_152_p2);
    sensitive << ( sext_ln703_reg_227 );
    sensitive << ( zext_ln703_fu_148_p1 );

    SC_METHOD(thread_scalar_V_fu_114_p2);
    sensitive << ( grp_fu_108_p2 );

    SC_METHOD(thread_select_ln851_fu_200_p3);
    sensitive << ( trunc_ln23_i_fu_184_p4 );
    sensitive << ( icmp_ln851_fu_178_p2 );
    sensitive << ( add_ln851_fu_194_p2 );

    SC_METHOD(thread_sext_ln59_fu_120_p1);
    sensitive << ( scalar_V_fu_114_p2 );

    SC_METHOD(thread_sext_ln703_fu_124_p1);
    sensitive << ( min_value_V_c17_dout );

    SC_METHOD(thread_trunc_ln23_i_fu_184_p4);
    sensitive << ( r_V_fu_161_p2 );

    SC_METHOD(thread_trunc_ln851_fu_174_p1);
    sensitive << ( r_V_fu_161_p2 );

    SC_METHOD(thread_veg_temp_data_V_blk_n);
    sensitive << ( veg_temp_data_V_empty_n );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( icmp_ln59_reg_232 );

    SC_METHOD(thread_veg_temp_data_V_read);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( icmp_ln59_reg_232 );
    sensitive << ( ap_block_pp0_stage0_11001 );

    SC_METHOD(thread_zext_ln703_fu_148_p1);
    sensitive << ( p_Val2_36_fu_140_p3 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( min_value_V_c17_empty_n );
    sensitive << ( ap_CS_fsm_state22 );
    sensitive << ( icmp_ln59_fu_128_p2 );
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_block_pp0_stage0_subdone );

    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "000000000000000000000001";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    ap_enable_reg_pp0_iter0 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "convert_fp_to_8b770_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, min_value_V_c17_dout, "(port)min_value_V_c17_dout");
    sc_trace(mVcdFile, min_value_V_c17_empty_n, "(port)min_value_V_c17_empty_n");
    sc_trace(mVcdFile, min_value_V_c17_read, "(port)min_value_V_c17_read");
    sc_trace(mVcdFile, sub_ln703_cast_loc_c, "(port)sub_ln703_cast_loc_c");
    sc_trace(mVcdFile, veg_temp_data_V_dout, "(port)veg_temp_data_V_dout");
    sc_trace(mVcdFile, veg_temp_data_V_empty_n, "(port)veg_temp_data_V_empty_n");
    sc_trace(mVcdFile, veg_temp_data_V_read, "(port)veg_temp_data_V_read");
    sc_trace(mVcdFile, img_out_data_V_din, "(port)img_out_data_V_din");
    sc_trace(mVcdFile, img_out_data_V_full_n, "(port)img_out_data_V_full_n");
    sc_trace(mVcdFile, img_out_data_V_write, "(port)img_out_data_V_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, min_value_V_c17_blk_n, "min_value_V_c17_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_state22, "ap_CS_fsm_state22");
    sc_trace(mVcdFile, veg_temp_data_V_blk_n, "veg_temp_data_V_blk_n");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, icmp_ln59_reg_232, "icmp_ln59_reg_232");
    sc_trace(mVcdFile, img_out_data_V_blk_n, "img_out_data_V_blk_n");
    sc_trace(mVcdFile, i_0_i_i_i_reg_97, "i_0_i_i_i_reg_97");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
    sc_trace(mVcdFile, sext_ln59_fu_120_p1, "sext_ln59_fu_120_p1");
    sc_trace(mVcdFile, sext_ln59_reg_222, "sext_ln59_reg_222");
    sc_trace(mVcdFile, sext_ln703_fu_124_p1, "sext_ln703_fu_124_p1");
    sc_trace(mVcdFile, sext_ln703_reg_227, "sext_ln703_reg_227");
    sc_trace(mVcdFile, icmp_ln59_fu_128_p2, "icmp_ln59_fu_128_p2");
    sc_trace(mVcdFile, ap_block_state23_pp0_stage0_iter0, "ap_block_state23_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state24_pp0_stage0_iter1, "ap_block_state24_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, i_fu_134_p2, "i_fu_134_p2");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_condition_pp0_exit_iter0_state23, "ap_condition_pp0_exit_iter0_state23");
    sc_trace(mVcdFile, ap_block_pp0_stage0_01001, "ap_block_pp0_stage0_01001");
    sc_trace(mVcdFile, grp_fu_108_p0, "grp_fu_108_p0");
    sc_trace(mVcdFile, grp_fu_108_p2, "grp_fu_108_p2");
    sc_trace(mVcdFile, scalar_V_fu_114_p2, "scalar_V_fu_114_p2");
    sc_trace(mVcdFile, p_Val2_36_fu_140_p3, "p_Val2_36_fu_140_p3");
    sc_trace(mVcdFile, zext_ln703_fu_148_p1, "zext_ln703_fu_148_p1");
    sc_trace(mVcdFile, ret_V_fu_152_p2, "ret_V_fu_152_p2");
    sc_trace(mVcdFile, r_V_fu_161_p0, "r_V_fu_161_p0");
    sc_trace(mVcdFile, r_V_fu_161_p1, "r_V_fu_161_p1");
    sc_trace(mVcdFile, r_V_fu_161_p2, "r_V_fu_161_p2");
    sc_trace(mVcdFile, trunc_ln851_fu_174_p1, "trunc_ln851_fu_174_p1");
    sc_trace(mVcdFile, trunc_ln23_i_fu_184_p4, "trunc_ln23_i_fu_184_p4");
    sc_trace(mVcdFile, icmp_ln851_fu_178_p2, "icmp_ln851_fu_178_p2");
    sc_trace(mVcdFile, add_ln851_fu_194_p2, "add_ln851_fu_194_p2");
    sc_trace(mVcdFile, p_Result_s_fu_166_p3, "p_Result_s_fu_166_p3");
    sc_trace(mVcdFile, select_ln851_fu_200_p3, "select_ln851_fu_200_p3");
    sc_trace(mVcdFile, grp_fu_108_ap_start, "grp_fu_108_ap_start");
    sc_trace(mVcdFile, grp_fu_108_ap_done, "grp_fu_108_ap_done");
    sc_trace(mVcdFile, grp_fu_108_ce, "grp_fu_108_ce");
    sc_trace(mVcdFile, ap_CS_fsm_state25, "ap_CS_fsm_state25");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
#endif

    }
}

convert_fp_to_8b770::~convert_fp_to_8b770() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete ip_accel_app_sdivrcU_U203;
}

void convert_fp_to_8b770::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read())) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter0 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state23.read()))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) && 
                    esl_seteq<1,1,1>(min_value_V_c17_empty_n.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter0 = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && 
             esl_seteq<1,1,1>(ap_const_logic_1, ap_condition_pp0_exit_iter0_state23.read()))) {
            ap_enable_reg_pp0_iter1 = (ap_condition_pp0_exit_iter0_state23.read() ^ ap_const_logic_1);
        } else if (esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0)) {
            ap_enable_reg_pp0_iter1 = ap_enable_reg_pp0_iter0.read();
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) && 
                    esl_seteq<1,1,1>(min_value_V_c17_empty_n.read(), ap_const_logic_1))) {
            ap_enable_reg_pp0_iter1 = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln59_fu_128_p2.read()))) {
        i_0_i_i_i_reg_97 = i_fu_134_p2.read();
    } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) && 
                esl_seteq<1,1,1>(min_value_V_c17_empty_n.read(), ap_const_logic_1))) {
        i_0_i_i_i_reg_97 = ap_const_lv16_0;
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        icmp_ln59_reg_232 = icmp_ln59_fu_128_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) && esl_seteq<1,1,1>(min_value_V_c17_empty_n.read(), ap_const_logic_1))) {
        sext_ln59_reg_222 = sext_ln59_fu_120_p1.read();
        sext_ln703_reg_227 = sext_ln703_fu_124_p1.read();
    }
}

void convert_fp_to_8b770::thread_add_ln851_fu_194_p2() {
    add_ln851_fu_194_p2 = (!ap_const_lv8_1.is_01() || !trunc_ln23_i_fu_184_p4.read().is_01())? sc_lv<8>(): (sc_biguint<8>(ap_const_lv8_1) + sc_biguint<8>(trunc_ln23_i_fu_184_p4.read()));
}

void convert_fp_to_8b770::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[22];
}

void convert_fp_to_8b770::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void convert_fp_to_8b770::thread_ap_CS_fsm_state22() {
    ap_CS_fsm_state22 = ap_CS_fsm.read()[21];
}

void convert_fp_to_8b770::thread_ap_CS_fsm_state25() {
    ap_CS_fsm_state25 = ap_CS_fsm.read()[23];
}

void convert_fp_to_8b770::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void convert_fp_to_8b770::thread_ap_block_pp0_stage0_01001() {
    ap_block_pp0_stage0_01001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && ((esl_seteq<1,1,1>(icmp_ln59_reg_232.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, veg_temp_data_V_empty_n.read())) || 
  (esl_seteq<1,1,1>(icmp_ln59_reg_232.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, img_out_data_V_full_n.read()))));
}

void convert_fp_to_8b770::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && ((esl_seteq<1,1,1>(icmp_ln59_reg_232.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, veg_temp_data_V_empty_n.read())) || 
  (esl_seteq<1,1,1>(icmp_ln59_reg_232.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, img_out_data_V_full_n.read()))));
}

void convert_fp_to_8b770::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = (esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && ((esl_seteq<1,1,1>(icmp_ln59_reg_232.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, veg_temp_data_V_empty_n.read())) || 
  (esl_seteq<1,1,1>(icmp_ln59_reg_232.read(), ap_const_lv1_0) && 
   esl_seteq<1,1,1>(ap_const_logic_0, img_out_data_V_full_n.read()))));
}

void convert_fp_to_8b770::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void convert_fp_to_8b770::thread_ap_block_state23_pp0_stage0_iter0() {
    ap_block_state23_pp0_stage0_iter0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void convert_fp_to_8b770::thread_ap_block_state24_pp0_stage0_iter1() {
    ap_block_state24_pp0_stage0_iter1 = ((esl_seteq<1,1,1>(icmp_ln59_reg_232.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, veg_temp_data_V_empty_n.read())) || (esl_seteq<1,1,1>(icmp_ln59_reg_232.read(), ap_const_lv1_0) && 
  esl_seteq<1,1,1>(ap_const_logic_0, img_out_data_V_full_n.read())));
}

void convert_fp_to_8b770::thread_ap_condition_pp0_exit_iter0_state23() {
    if (esl_seteq<1,1,1>(icmp_ln59_fu_128_p2.read(), ap_const_lv1_1)) {
        ap_condition_pp0_exit_iter0_state23 = ap_const_logic_1;
    } else {
        ap_condition_pp0_exit_iter0_state23 = ap_const_logic_0;
    }
}

void convert_fp_to_8b770::thread_ap_done() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read())) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void convert_fp_to_8b770::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void convert_fp_to_8b770::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void convert_fp_to_8b770::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void convert_fp_to_8b770::thread_ap_ready() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read())) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void convert_fp_to_8b770::thread_grp_fu_108_ap_start() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
         !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
        grp_fu_108_ap_start = ap_const_logic_1;
    } else {
        grp_fu_108_ap_start = ap_const_logic_0;
    }
}

void convert_fp_to_8b770::thread_grp_fu_108_ce() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) || 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state25.read()))) {
        grp_fu_108_ce = ap_const_logic_0;
    } else {
        grp_fu_108_ce = ap_const_logic_1;
    }
}

void convert_fp_to_8b770::thread_grp_fu_108_p0() {
    grp_fu_108_p0 =  (sc_lv<18>) (ap_const_lv24_FF00);
}

void convert_fp_to_8b770::thread_i_fu_134_p2() {
    i_fu_134_p2 = (!i_0_i_i_i_reg_97.read().is_01() || !ap_const_lv16_1.is_01())? sc_lv<16>(): (sc_biguint<16>(i_0_i_i_i_reg_97.read()) + sc_biguint<16>(ap_const_lv16_1));
}

void convert_fp_to_8b770::thread_icmp_ln59_fu_128_p2() {
    icmp_ln59_fu_128_p2 = (!i_0_i_i_i_reg_97.read().is_01() || !ap_const_lv16_E100.is_01())? sc_lv<1>(): sc_lv<1>(i_0_i_i_i_reg_97.read() == ap_const_lv16_E100);
}

void convert_fp_to_8b770::thread_icmp_ln851_fu_178_p2() {
    icmp_ln851_fu_178_p2 = (!trunc_ln851_fu_174_p1.read().is_01() || !ap_const_lv16_0.is_01())? sc_lv<1>(): sc_lv<1>(trunc_ln851_fu_174_p1.read() == ap_const_lv16_0);
}

void convert_fp_to_8b770::thread_img_out_data_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln59_reg_232.read(), ap_const_lv1_0))) {
        img_out_data_V_blk_n = img_out_data_V_full_n.read();
    } else {
        img_out_data_V_blk_n = ap_const_logic_1;
    }
}

void convert_fp_to_8b770::thread_img_out_data_V_din() {
    img_out_data_V_din = (!p_Result_s_fu_166_p3.read()[0].is_01())? sc_lv<8>(): ((p_Result_s_fu_166_p3.read()[0].to_bool())? select_ln851_fu_200_p3.read(): trunc_ln23_i_fu_184_p4.read());
}

void convert_fp_to_8b770::thread_img_out_data_V_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln59_reg_232.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        img_out_data_V_write = ap_const_logic_1;
    } else {
        img_out_data_V_write = ap_const_logic_0;
    }
}

void convert_fp_to_8b770::thread_min_value_V_c17_blk_n() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read())) {
        min_value_V_c17_blk_n = min_value_V_c17_empty_n.read();
    } else {
        min_value_V_c17_blk_n = ap_const_logic_1;
    }
}

void convert_fp_to_8b770::thread_min_value_V_c17_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) && 
         esl_seteq<1,1,1>(min_value_V_c17_empty_n.read(), ap_const_logic_1))) {
        min_value_V_c17_read = ap_const_logic_1;
    } else {
        min_value_V_c17_read = ap_const_logic_0;
    }
}

void convert_fp_to_8b770::thread_p_Result_s_fu_166_p3() {
    p_Result_s_fu_166_p3 = r_V_fu_161_p2.read().range(64, 64);
}

void convert_fp_to_8b770::thread_p_Val2_36_fu_140_p3() {
    p_Val2_36_fu_140_p3 = esl_concat<32,8>(veg_temp_data_V_dout.read(), ap_const_lv8_0);
}

void convert_fp_to_8b770::thread_r_V_fu_161_p0() {
    r_V_fu_161_p0 = ret_V_fu_152_p2.read();
}

void convert_fp_to_8b770::thread_r_V_fu_161_p1() {
    r_V_fu_161_p1 =  (sc_lv<24>) (sext_ln59_reg_222.read());
}

void convert_fp_to_8b770::thread_r_V_fu_161_p2() {
    r_V_fu_161_p2 = (!r_V_fu_161_p0.read().is_01() || !r_V_fu_161_p1.read().is_01())? sc_lv<65>(): sc_bigint<42>(r_V_fu_161_p0.read()) * sc_bigint<24>(r_V_fu_161_p1.read());
}

void convert_fp_to_8b770::thread_ret_V_fu_152_p2() {
    ret_V_fu_152_p2 = (!zext_ln703_fu_148_p1.read().is_01() || !sext_ln703_reg_227.read().is_01())? sc_lv<42>(): (sc_biguint<42>(zext_ln703_fu_148_p1.read()) - sc_bigint<42>(sext_ln703_reg_227.read()));
}

void convert_fp_to_8b770::thread_scalar_V_fu_114_p2() {
    scalar_V_fu_114_p2 = (!ap_const_lv24_8.is_01())? sc_lv<24>(): grp_fu_108_p2.read() << (unsigned short)ap_const_lv24_8.to_uint();
}

void convert_fp_to_8b770::thread_select_ln851_fu_200_p3() {
    select_ln851_fu_200_p3 = (!icmp_ln851_fu_178_p2.read()[0].is_01())? sc_lv<8>(): ((icmp_ln851_fu_178_p2.read()[0].to_bool())? trunc_ln23_i_fu_184_p4.read(): add_ln851_fu_194_p2.read());
}

void convert_fp_to_8b770::thread_sext_ln59_fu_120_p1() {
    sext_ln59_fu_120_p1 = esl_sext<65,24>(scalar_V_fu_114_p2.read());
}

void convert_fp_to_8b770::thread_sext_ln703_fu_124_p1() {
    sext_ln703_fu_124_p1 = esl_sext<42,28>(min_value_V_c17_dout.read());
}

void convert_fp_to_8b770::thread_trunc_ln23_i_fu_184_p4() {
    trunc_ln23_i_fu_184_p4 = r_V_fu_161_p2.read().range(23, 16);
}

void convert_fp_to_8b770::thread_trunc_ln851_fu_174_p1() {
    trunc_ln851_fu_174_p1 = r_V_fu_161_p2.read().range(16-1, 0);
}

void convert_fp_to_8b770::thread_veg_temp_data_V_blk_n() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(icmp_ln59_reg_232.read(), ap_const_lv1_0))) {
        veg_temp_data_V_blk_n = veg_temp_data_V_empty_n.read();
    } else {
        veg_temp_data_V_blk_n = ap_const_logic_1;
    }
}

void convert_fp_to_8b770::thread_veg_temp_data_V_read() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read()) && 
         esl_seteq<1,1,1>(icmp_ln59_reg_232.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0))) {
        veg_temp_data_V_read = ap_const_logic_1;
    } else {
        veg_temp_data_V_read = ap_const_logic_0;
    }
}

void convert_fp_to_8b770::thread_zext_ln703_fu_148_p1() {
    zext_ln703_fu_148_p1 = esl_zext<42,40>(p_Val2_36_fu_140_p3.read());
}

void convert_fp_to_8b770::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            ap_NS_fsm = ap_ST_fsm_state3;
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            ap_NS_fsm = ap_ST_fsm_state5;
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            ap_NS_fsm = ap_ST_fsm_state7;
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            ap_NS_fsm = ap_ST_fsm_state9;
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            ap_NS_fsm = ap_ST_fsm_state11;
            break;
        case 1024 : 
            ap_NS_fsm = ap_ST_fsm_state12;
            break;
        case 2048 : 
            ap_NS_fsm = ap_ST_fsm_state13;
            break;
        case 4096 : 
            ap_NS_fsm = ap_ST_fsm_state14;
            break;
        case 8192 : 
            ap_NS_fsm = ap_ST_fsm_state15;
            break;
        case 16384 : 
            ap_NS_fsm = ap_ST_fsm_state16;
            break;
        case 32768 : 
            ap_NS_fsm = ap_ST_fsm_state17;
            break;
        case 65536 : 
            ap_NS_fsm = ap_ST_fsm_state18;
            break;
        case 131072 : 
            ap_NS_fsm = ap_ST_fsm_state19;
            break;
        case 262144 : 
            ap_NS_fsm = ap_ST_fsm_state20;
            break;
        case 524288 : 
            ap_NS_fsm = ap_ST_fsm_state21;
            break;
        case 1048576 : 
            ap_NS_fsm = ap_ST_fsm_state22;
            break;
        case 2097152 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state22.read()) && esl_seteq<1,1,1>(min_value_V_c17_empty_n.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else {
                ap_NS_fsm = ap_ST_fsm_state22;
            }
            break;
        case 4194304 : 
            if (!(esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln59_fu_128_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(icmp_ln59_fu_128_p2.read(), ap_const_lv1_1))) {
                ap_NS_fsm = ap_ST_fsm_state25;
            } else {
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            }
            break;
        case 8388608 : 
            ap_NS_fsm = ap_ST_fsm_state1;
            break;
        default : 
            ap_NS_fsm = "XXXXXXXXXXXXXXXXXXXXXXXX";
            break;
    }
}

}

