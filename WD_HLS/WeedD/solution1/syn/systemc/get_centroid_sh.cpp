// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "get_centroid_sh.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_lv<10> get_centroid_sh::ap_const_lv10_0 = "0000000000";
const sc_logic get_centroid_sh::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<8> get_centroid_sh::ap_const_lv8_0 = "00000000";
const sc_lv<48> get_centroid_sh::ap_const_lv48_0 = "000000000000000000000000000000000000000000000000";
const sc_logic get_centroid_sh::ap_const_logic_1 = sc_dt::Log_1;
const bool get_centroid_sh::ap_const_boolean_1 = true;

get_centroid_sh::get_centroid_sh(sc_module_name name) : sc_module(name), mVcdFile(0) {
    get_centroid_sh_Loop_U0 = new get_centroid_sh_Loop("get_centroid_sh_Loop_U0");
    get_centroid_sh_Loop_U0->ap_clk(ap_clk);
    get_centroid_sh_Loop_U0->ap_rst(ap_rst);
    get_centroid_sh_Loop_U0->ap_start(get_centroid_sh_Loop_U0_ap_start);
    get_centroid_sh_Loop_U0->ap_done(get_centroid_sh_Loop_U0_ap_done);
    get_centroid_sh_Loop_U0->ap_continue(get_centroid_sh_Loop_U0_ap_continue);
    get_centroid_sh_Loop_U0->ap_idle(get_centroid_sh_Loop_U0_ap_idle);
    get_centroid_sh_Loop_U0->ap_ready(get_centroid_sh_Loop_U0_ap_ready);
    get_centroid_sh_Loop_U0->micro_roi_data_V_address0(get_centroid_sh_Loop_U0_micro_roi_data_V_address0);
    get_centroid_sh_Loop_U0->micro_roi_data_V_ce0(get_centroid_sh_Loop_U0_micro_roi_data_V_ce0);
    get_centroid_sh_Loop_U0->micro_roi_data_V_q0(micro_roi_data_V_q0);
    get_centroid_sh_Loop_U0->v_limit(v_limit);
    get_centroid_sh_Loop_U0->h_limit(h_limit);
    get_centroid_sh_Loop_U0->h_offset(h_offset);
    get_centroid_sh_Loop_U0->v_offset_read(v_offset_read);
    get_centroid_sh_Loop_U0->possible_c_x(possible_c_x);
    get_centroid_sh_Loop_U0->possible_c_y(possible_c_y);
    get_centroid_sh_Loop_U0->c_read(c_read);
    get_centroid_sh_Loop_U0->h_offset_out_din(get_centroid_sh_Loop_U0_h_offset_out_din);
    get_centroid_sh_Loop_U0->h_offset_out_full_n(h_offset_c_full_n);
    get_centroid_sh_Loop_U0->h_offset_out_write(get_centroid_sh_Loop_U0_h_offset_out_write);
    get_centroid_sh_Loop_U0->v_offset_read_out_din(get_centroid_sh_Loop_U0_v_offset_read_out_din);
    get_centroid_sh_Loop_U0->v_offset_read_out_full_n(v_offset_read_c_full_n);
    get_centroid_sh_Loop_U0->v_offset_read_out_write(get_centroid_sh_Loop_U0_v_offset_read_out_write);
    get_centroid_sh_Loop_U0->possible_c_x_out_din(get_centroid_sh_Loop_U0_possible_c_x_out_din);
    get_centroid_sh_Loop_U0->possible_c_x_out_full_n(possible_c_x_c_full_n);
    get_centroid_sh_Loop_U0->possible_c_x_out_write(get_centroid_sh_Loop_U0_possible_c_x_out_write);
    get_centroid_sh_Loop_U0->possible_c_y_out_din(get_centroid_sh_Loop_U0_possible_c_y_out_din);
    get_centroid_sh_Loop_U0->possible_c_y_out_full_n(possible_c_y_c_full_n);
    get_centroid_sh_Loop_U0->possible_c_y_out_write(get_centroid_sh_Loop_U0_possible_c_y_out_write);
    get_centroid_sh_Loop_U0->c_read_out_din(get_centroid_sh_Loop_U0_c_read_out_din);
    get_centroid_sh_Loop_U0->c_read_out_full_n(c_read_c_full_n);
    get_centroid_sh_Loop_U0->c_read_out_write(get_centroid_sh_Loop_U0_c_read_out_write);
    get_centroid_sh_Loop_U0->ap_return_0(get_centroid_sh_Loop_U0_ap_return_0);
    get_centroid_sh_Loop_U0->ap_return_1(get_centroid_sh_Loop_U0_ap_return_1);
    get_centroid_sh_Loop_U0->ap_return_2(get_centroid_sh_Loop_U0_ap_return_2);
    get_centroid_sh_Bloc_U0 = new get_centroid_sh_Bloc("get_centroid_sh_Bloc_U0");
    get_centroid_sh_Bloc_U0->ap_clk(ap_clk);
    get_centroid_sh_Bloc_U0->ap_rst(ap_rst);
    get_centroid_sh_Bloc_U0->ap_start(get_centroid_sh_Bloc_U0_ap_start);
    get_centroid_sh_Bloc_U0->ap_done(get_centroid_sh_Bloc_U0_ap_done);
    get_centroid_sh_Bloc_U0->ap_continue(get_centroid_sh_Bloc_U0_ap_continue);
    get_centroid_sh_Bloc_U0->ap_idle(get_centroid_sh_Bloc_U0_ap_idle);
    get_centroid_sh_Bloc_U0->ap_ready(get_centroid_sh_Bloc_U0_ap_ready);
    get_centroid_sh_Bloc_U0->p_read(p_sum_0_loc_0_i_loc_c_dout);
    get_centroid_sh_Bloc_U0->possible_c_x_dout(possible_c_x_c_dout);
    get_centroid_sh_Bloc_U0->possible_c_x_empty_n(possible_c_x_c_empty_n);
    get_centroid_sh_Bloc_U0->possible_c_x_read(get_centroid_sh_Bloc_U0_possible_c_x_read);
    get_centroid_sh_Bloc_U0->c_read_dout(c_read_c_dout);
    get_centroid_sh_Bloc_U0->c_read_empty_n(c_read_c_empty_n);
    get_centroid_sh_Bloc_U0->c_read_read(get_centroid_sh_Bloc_U0_c_read_read);
    get_centroid_sh_Bloc_U0->p_read1(v_sum_0_loc_0_i_loc_s_dout);
    get_centroid_sh_Bloc_U0->v_offset_read_dout(v_offset_read_c_dout);
    get_centroid_sh_Bloc_U0->v_offset_read_empty_n(v_offset_read_c_empty_n);
    get_centroid_sh_Bloc_U0->v_offset_read_read(get_centroid_sh_Bloc_U0_v_offset_read_read);
    get_centroid_sh_Bloc_U0->p_read2(h_sum_0_loc_0_i_loc_s_dout);
    get_centroid_sh_Bloc_U0->h_offset_dout(h_offset_c_dout);
    get_centroid_sh_Bloc_U0->h_offset_empty_n(h_offset_c_empty_n);
    get_centroid_sh_Bloc_U0->h_offset_read(get_centroid_sh_Bloc_U0_h_offset_read);
    get_centroid_sh_Bloc_U0->possible_c_y_dout(possible_c_y_c_dout);
    get_centroid_sh_Bloc_U0->possible_c_y_empty_n(possible_c_y_c_empty_n);
    get_centroid_sh_Bloc_U0->possible_c_y_read(get_centroid_sh_Bloc_U0_possible_c_y_read);
    get_centroid_sh_Bloc_U0->c(get_centroid_sh_Bloc_U0_c);
    get_centroid_sh_Bloc_U0->c_ap_vld(get_centroid_sh_Bloc_U0_c_ap_vld);
    h_offset_c_U = new fifo_w16_d2_A_x("h_offset_c_U");
    h_offset_c_U->clk(ap_clk);
    h_offset_c_U->reset(ap_rst);
    h_offset_c_U->if_read_ce(ap_var_for_const0);
    h_offset_c_U->if_write_ce(ap_var_for_const0);
    h_offset_c_U->if_din(get_centroid_sh_Loop_U0_h_offset_out_din);
    h_offset_c_U->if_full_n(h_offset_c_full_n);
    h_offset_c_U->if_write(get_centroid_sh_Loop_U0_h_offset_out_write);
    h_offset_c_U->if_dout(h_offset_c_dout);
    h_offset_c_U->if_empty_n(h_offset_c_empty_n);
    h_offset_c_U->if_read(get_centroid_sh_Bloc_U0_h_offset_read);
    v_offset_read_c_U = new fifo_w8_d2_A_x1("v_offset_read_c_U");
    v_offset_read_c_U->clk(ap_clk);
    v_offset_read_c_U->reset(ap_rst);
    v_offset_read_c_U->if_read_ce(ap_var_for_const0);
    v_offset_read_c_U->if_write_ce(ap_var_for_const0);
    v_offset_read_c_U->if_din(get_centroid_sh_Loop_U0_v_offset_read_out_din);
    v_offset_read_c_U->if_full_n(v_offset_read_c_full_n);
    v_offset_read_c_U->if_write(get_centroid_sh_Loop_U0_v_offset_read_out_write);
    v_offset_read_c_U->if_dout(v_offset_read_c_dout);
    v_offset_read_c_U->if_empty_n(v_offset_read_c_empty_n);
    v_offset_read_c_U->if_read(get_centroid_sh_Bloc_U0_v_offset_read_read);
    possible_c_x_c_U = new fifo_w8_d2_A_x1("possible_c_x_c_U");
    possible_c_x_c_U->clk(ap_clk);
    possible_c_x_c_U->reset(ap_rst);
    possible_c_x_c_U->if_read_ce(ap_var_for_const0);
    possible_c_x_c_U->if_write_ce(ap_var_for_const0);
    possible_c_x_c_U->if_din(get_centroid_sh_Loop_U0_possible_c_x_out_din);
    possible_c_x_c_U->if_full_n(possible_c_x_c_full_n);
    possible_c_x_c_U->if_write(get_centroid_sh_Loop_U0_possible_c_x_out_write);
    possible_c_x_c_U->if_dout(possible_c_x_c_dout);
    possible_c_x_c_U->if_empty_n(possible_c_x_c_empty_n);
    possible_c_x_c_U->if_read(get_centroid_sh_Bloc_U0_possible_c_x_read);
    possible_c_y_c_U = new fifo_w32_d2_A_x1("possible_c_y_c_U");
    possible_c_y_c_U->clk(ap_clk);
    possible_c_y_c_U->reset(ap_rst);
    possible_c_y_c_U->if_read_ce(ap_var_for_const0);
    possible_c_y_c_U->if_write_ce(ap_var_for_const0);
    possible_c_y_c_U->if_din(get_centroid_sh_Loop_U0_possible_c_y_out_din);
    possible_c_y_c_U->if_full_n(possible_c_y_c_full_n);
    possible_c_y_c_U->if_write(get_centroid_sh_Loop_U0_possible_c_y_out_write);
    possible_c_y_c_U->if_dout(possible_c_y_c_dout);
    possible_c_y_c_U->if_empty_n(possible_c_y_c_empty_n);
    possible_c_y_c_U->if_read(get_centroid_sh_Bloc_U0_possible_c_y_read);
    c_read_c_U = new fifo_w48_d2_A("c_read_c_U");
    c_read_c_U->clk(ap_clk);
    c_read_c_U->reset(ap_rst);
    c_read_c_U->if_read_ce(ap_var_for_const0);
    c_read_c_U->if_write_ce(ap_var_for_const0);
    c_read_c_U->if_din(get_centroid_sh_Loop_U0_c_read_out_din);
    c_read_c_U->if_full_n(c_read_c_full_n);
    c_read_c_U->if_write(get_centroid_sh_Loop_U0_c_read_out_write);
    c_read_c_U->if_dout(c_read_c_dout);
    c_read_c_U->if_empty_n(c_read_c_empty_n);
    c_read_c_U->if_read(get_centroid_sh_Bloc_U0_c_read_read);
    v_sum_0_loc_0_i_loc_s_U = new fifo_w32_d2_A_x1("v_sum_0_loc_0_i_loc_s_U");
    v_sum_0_loc_0_i_loc_s_U->clk(ap_clk);
    v_sum_0_loc_0_i_loc_s_U->reset(ap_rst);
    v_sum_0_loc_0_i_loc_s_U->if_read_ce(ap_var_for_const0);
    v_sum_0_loc_0_i_loc_s_U->if_write_ce(ap_var_for_const0);
    v_sum_0_loc_0_i_loc_s_U->if_din(get_centroid_sh_Loop_U0_ap_return_0);
    v_sum_0_loc_0_i_loc_s_U->if_full_n(v_sum_0_loc_0_i_loc_s_full_n);
    v_sum_0_loc_0_i_loc_s_U->if_write(ap_channel_done_v_sum_0_loc_0_i_loc_s);
    v_sum_0_loc_0_i_loc_s_U->if_dout(v_sum_0_loc_0_i_loc_s_dout);
    v_sum_0_loc_0_i_loc_s_U->if_empty_n(v_sum_0_loc_0_i_loc_s_empty_n);
    v_sum_0_loc_0_i_loc_s_U->if_read(get_centroid_sh_Bloc_U0_ap_ready);
    h_sum_0_loc_0_i_loc_s_U = new fifo_w32_d2_A_x1("h_sum_0_loc_0_i_loc_s_U");
    h_sum_0_loc_0_i_loc_s_U->clk(ap_clk);
    h_sum_0_loc_0_i_loc_s_U->reset(ap_rst);
    h_sum_0_loc_0_i_loc_s_U->if_read_ce(ap_var_for_const0);
    h_sum_0_loc_0_i_loc_s_U->if_write_ce(ap_var_for_const0);
    h_sum_0_loc_0_i_loc_s_U->if_din(get_centroid_sh_Loop_U0_ap_return_1);
    h_sum_0_loc_0_i_loc_s_U->if_full_n(h_sum_0_loc_0_i_loc_s_full_n);
    h_sum_0_loc_0_i_loc_s_U->if_write(ap_channel_done_h_sum_0_loc_0_i_loc_s);
    h_sum_0_loc_0_i_loc_s_U->if_dout(h_sum_0_loc_0_i_loc_s_dout);
    h_sum_0_loc_0_i_loc_s_U->if_empty_n(h_sum_0_loc_0_i_loc_s_empty_n);
    h_sum_0_loc_0_i_loc_s_U->if_read(get_centroid_sh_Bloc_U0_ap_ready);
    p_sum_0_loc_0_i_loc_c_U = new fifo_w32_d2_A_x1("p_sum_0_loc_0_i_loc_c_U");
    p_sum_0_loc_0_i_loc_c_U->clk(ap_clk);
    p_sum_0_loc_0_i_loc_c_U->reset(ap_rst);
    p_sum_0_loc_0_i_loc_c_U->if_read_ce(ap_var_for_const0);
    p_sum_0_loc_0_i_loc_c_U->if_write_ce(ap_var_for_const0);
    p_sum_0_loc_0_i_loc_c_U->if_din(get_centroid_sh_Loop_U0_ap_return_2);
    p_sum_0_loc_0_i_loc_c_U->if_full_n(p_sum_0_loc_0_i_loc_c_full_n);
    p_sum_0_loc_0_i_loc_c_U->if_write(ap_channel_done_p_sum_0_loc_0_i_loc_c);
    p_sum_0_loc_0_i_loc_c_U->if_dout(p_sum_0_loc_0_i_loc_c_dout);
    p_sum_0_loc_0_i_loc_c_U->if_empty_n(p_sum_0_loc_0_i_loc_c_empty_n);
    p_sum_0_loc_0_i_loc_c_U->if_read(get_centroid_sh_Bloc_U0_ap_ready);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_channel_done_h_sum_0_loc_0_i_loc_s);
    sensitive << ( get_centroid_sh_Loop_U0_ap_done );
    sensitive << ( ap_sync_reg_channel_write_h_sum_0_loc_0_i_loc_s );

    SC_METHOD(thread_ap_channel_done_p_sum_0_loc_0_i_loc_c);
    sensitive << ( get_centroid_sh_Loop_U0_ap_done );
    sensitive << ( ap_sync_reg_channel_write_p_sum_0_loc_0_i_loc_c );

    SC_METHOD(thread_ap_channel_done_v_sum_0_loc_0_i_loc_s);
    sensitive << ( get_centroid_sh_Loop_U0_ap_done );
    sensitive << ( ap_sync_reg_channel_write_v_sum_0_loc_0_i_loc_s );

    SC_METHOD(thread_ap_done);
    sensitive << ( get_centroid_sh_Bloc_U0_ap_done );

    SC_METHOD(thread_ap_idle);
    sensitive << ( get_centroid_sh_Loop_U0_ap_idle );
    sensitive << ( get_centroid_sh_Bloc_U0_ap_idle );
    sensitive << ( v_sum_0_loc_0_i_loc_s_empty_n );
    sensitive << ( h_sum_0_loc_0_i_loc_s_empty_n );
    sensitive << ( p_sum_0_loc_0_i_loc_c_empty_n );

    SC_METHOD(thread_ap_ready);
    sensitive << ( get_centroid_sh_Loop_U0_ap_ready );

    SC_METHOD(thread_ap_sync_channel_write_h_sum_0_loc_0_i_loc_s);
    sensitive << ( ap_channel_done_h_sum_0_loc_0_i_loc_s );
    sensitive << ( h_sum_0_loc_0_i_loc_s_full_n );
    sensitive << ( ap_sync_reg_channel_write_h_sum_0_loc_0_i_loc_s );

    SC_METHOD(thread_ap_sync_channel_write_p_sum_0_loc_0_i_loc_c);
    sensitive << ( ap_channel_done_p_sum_0_loc_0_i_loc_c );
    sensitive << ( p_sum_0_loc_0_i_loc_c_full_n );
    sensitive << ( ap_sync_reg_channel_write_p_sum_0_loc_0_i_loc_c );

    SC_METHOD(thread_ap_sync_channel_write_v_sum_0_loc_0_i_loc_s);
    sensitive << ( ap_channel_done_v_sum_0_loc_0_i_loc_s );
    sensitive << ( v_sum_0_loc_0_i_loc_s_full_n );
    sensitive << ( ap_sync_reg_channel_write_v_sum_0_loc_0_i_loc_s );

    SC_METHOD(thread_ap_sync_continue);
    sensitive << ( ap_continue );

    SC_METHOD(thread_ap_sync_done);
    sensitive << ( get_centroid_sh_Bloc_U0_ap_done );

    SC_METHOD(thread_ap_sync_ready);
    sensitive << ( get_centroid_sh_Loop_U0_ap_ready );

    SC_METHOD(thread_c);
    sensitive << ( get_centroid_sh_Bloc_U0_c );

    SC_METHOD(thread_c_ap_vld);
    sensitive << ( get_centroid_sh_Bloc_U0_c_ap_vld );

    SC_METHOD(thread_get_centroid_sh_Bloc_U0_ap_continue);
    sensitive << ( ap_continue );

    SC_METHOD(thread_get_centroid_sh_Bloc_U0_ap_start);
    sensitive << ( v_sum_0_loc_0_i_loc_s_empty_n );
    sensitive << ( h_sum_0_loc_0_i_loc_s_empty_n );
    sensitive << ( p_sum_0_loc_0_i_loc_c_empty_n );

    SC_METHOD(thread_get_centroid_sh_Bloc_U0_start_full_n);

    SC_METHOD(thread_get_centroid_sh_Bloc_U0_start_write);

    SC_METHOD(thread_get_centroid_sh_Loop_U0_ap_continue);
    sensitive << ( ap_sync_channel_write_p_sum_0_loc_0_i_loc_c );
    sensitive << ( ap_sync_channel_write_h_sum_0_loc_0_i_loc_s );
    sensitive << ( ap_sync_channel_write_v_sum_0_loc_0_i_loc_s );

    SC_METHOD(thread_get_centroid_sh_Loop_U0_ap_start);
    sensitive << ( ap_start );

    SC_METHOD(thread_get_centroid_sh_Loop_U0_start_full_n);

    SC_METHOD(thread_get_centroid_sh_Loop_U0_start_write);

    SC_METHOD(thread_micro_roi_data_V_address0);
    sensitive << ( get_centroid_sh_Loop_U0_micro_roi_data_V_address0 );

    SC_METHOD(thread_micro_roi_data_V_address1);

    SC_METHOD(thread_micro_roi_data_V_ce0);
    sensitive << ( get_centroid_sh_Loop_U0_micro_roi_data_V_ce0 );

    SC_METHOD(thread_micro_roi_data_V_ce1);

    SC_METHOD(thread_micro_roi_data_V_d0);

    SC_METHOD(thread_micro_roi_data_V_d1);

    SC_METHOD(thread_micro_roi_data_V_we0);

    SC_METHOD(thread_micro_roi_data_V_we1);

    SC_THREAD(thread_ap_var_for_const0);

    ap_sync_reg_channel_write_p_sum_0_loc_0_i_loc_c = SC_LOGIC_0;
    ap_sync_reg_channel_write_h_sum_0_loc_0_i_loc_s = SC_LOGIC_0;
    ap_sync_reg_channel_write_v_sum_0_loc_0_i_loc_s = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "get_centroid_sh_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, micro_roi_data_V_address0, "(port)micro_roi_data_V_address0");
    sc_trace(mVcdFile, micro_roi_data_V_ce0, "(port)micro_roi_data_V_ce0");
    sc_trace(mVcdFile, micro_roi_data_V_d0, "(port)micro_roi_data_V_d0");
    sc_trace(mVcdFile, micro_roi_data_V_q0, "(port)micro_roi_data_V_q0");
    sc_trace(mVcdFile, micro_roi_data_V_we0, "(port)micro_roi_data_V_we0");
    sc_trace(mVcdFile, micro_roi_data_V_address1, "(port)micro_roi_data_V_address1");
    sc_trace(mVcdFile, micro_roi_data_V_ce1, "(port)micro_roi_data_V_ce1");
    sc_trace(mVcdFile, micro_roi_data_V_d1, "(port)micro_roi_data_V_d1");
    sc_trace(mVcdFile, micro_roi_data_V_q1, "(port)micro_roi_data_V_q1");
    sc_trace(mVcdFile, micro_roi_data_V_we1, "(port)micro_roi_data_V_we1");
    sc_trace(mVcdFile, h_offset, "(port)h_offset");
    sc_trace(mVcdFile, v_offset_read, "(port)v_offset_read");
    sc_trace(mVcdFile, v_limit, "(port)v_limit");
    sc_trace(mVcdFile, h_limit, "(port)h_limit");
    sc_trace(mVcdFile, possible_c_x, "(port)possible_c_x");
    sc_trace(mVcdFile, possible_c_y, "(port)possible_c_y");
    sc_trace(mVcdFile, c, "(port)c");
    sc_trace(mVcdFile, c_read, "(port)c_read");
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, v_limit_ap_vld, "(port)v_limit_ap_vld");
    sc_trace(mVcdFile, h_limit_ap_vld, "(port)h_limit_ap_vld");
    sc_trace(mVcdFile, h_offset_ap_vld, "(port)h_offset_ap_vld");
    sc_trace(mVcdFile, v_offset_read_ap_vld, "(port)v_offset_read_ap_vld");
    sc_trace(mVcdFile, possible_c_x_ap_vld, "(port)possible_c_x_ap_vld");
    sc_trace(mVcdFile, possible_c_y_ap_vld, "(port)possible_c_y_ap_vld");
    sc_trace(mVcdFile, c_read_ap_vld, "(port)c_read_ap_vld");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, c_ap_vld, "(port)c_ap_vld");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, get_centroid_sh_Loop_U0_ap_start, "get_centroid_sh_Loop_U0_ap_start");
    sc_trace(mVcdFile, get_centroid_sh_Loop_U0_ap_done, "get_centroid_sh_Loop_U0_ap_done");
    sc_trace(mVcdFile, get_centroid_sh_Loop_U0_ap_continue, "get_centroid_sh_Loop_U0_ap_continue");
    sc_trace(mVcdFile, get_centroid_sh_Loop_U0_ap_idle, "get_centroid_sh_Loop_U0_ap_idle");
    sc_trace(mVcdFile, get_centroid_sh_Loop_U0_ap_ready, "get_centroid_sh_Loop_U0_ap_ready");
    sc_trace(mVcdFile, get_centroid_sh_Loop_U0_micro_roi_data_V_address0, "get_centroid_sh_Loop_U0_micro_roi_data_V_address0");
    sc_trace(mVcdFile, get_centroid_sh_Loop_U0_micro_roi_data_V_ce0, "get_centroid_sh_Loop_U0_micro_roi_data_V_ce0");
    sc_trace(mVcdFile, get_centroid_sh_Loop_U0_h_offset_out_din, "get_centroid_sh_Loop_U0_h_offset_out_din");
    sc_trace(mVcdFile, get_centroid_sh_Loop_U0_h_offset_out_write, "get_centroid_sh_Loop_U0_h_offset_out_write");
    sc_trace(mVcdFile, get_centroid_sh_Loop_U0_v_offset_read_out_din, "get_centroid_sh_Loop_U0_v_offset_read_out_din");
    sc_trace(mVcdFile, get_centroid_sh_Loop_U0_v_offset_read_out_write, "get_centroid_sh_Loop_U0_v_offset_read_out_write");
    sc_trace(mVcdFile, get_centroid_sh_Loop_U0_possible_c_x_out_din, "get_centroid_sh_Loop_U0_possible_c_x_out_din");
    sc_trace(mVcdFile, get_centroid_sh_Loop_U0_possible_c_x_out_write, "get_centroid_sh_Loop_U0_possible_c_x_out_write");
    sc_trace(mVcdFile, get_centroid_sh_Loop_U0_possible_c_y_out_din, "get_centroid_sh_Loop_U0_possible_c_y_out_din");
    sc_trace(mVcdFile, get_centroid_sh_Loop_U0_possible_c_y_out_write, "get_centroid_sh_Loop_U0_possible_c_y_out_write");
    sc_trace(mVcdFile, get_centroid_sh_Loop_U0_c_read_out_din, "get_centroid_sh_Loop_U0_c_read_out_din");
    sc_trace(mVcdFile, get_centroid_sh_Loop_U0_c_read_out_write, "get_centroid_sh_Loop_U0_c_read_out_write");
    sc_trace(mVcdFile, get_centroid_sh_Loop_U0_ap_return_0, "get_centroid_sh_Loop_U0_ap_return_0");
    sc_trace(mVcdFile, get_centroid_sh_Loop_U0_ap_return_1, "get_centroid_sh_Loop_U0_ap_return_1");
    sc_trace(mVcdFile, get_centroid_sh_Loop_U0_ap_return_2, "get_centroid_sh_Loop_U0_ap_return_2");
    sc_trace(mVcdFile, ap_channel_done_p_sum_0_loc_0_i_loc_c, "ap_channel_done_p_sum_0_loc_0_i_loc_c");
    sc_trace(mVcdFile, p_sum_0_loc_0_i_loc_c_full_n, "p_sum_0_loc_0_i_loc_c_full_n");
    sc_trace(mVcdFile, ap_sync_reg_channel_write_p_sum_0_loc_0_i_loc_c, "ap_sync_reg_channel_write_p_sum_0_loc_0_i_loc_c");
    sc_trace(mVcdFile, ap_sync_channel_write_p_sum_0_loc_0_i_loc_c, "ap_sync_channel_write_p_sum_0_loc_0_i_loc_c");
    sc_trace(mVcdFile, ap_channel_done_h_sum_0_loc_0_i_loc_s, "ap_channel_done_h_sum_0_loc_0_i_loc_s");
    sc_trace(mVcdFile, h_sum_0_loc_0_i_loc_s_full_n, "h_sum_0_loc_0_i_loc_s_full_n");
    sc_trace(mVcdFile, ap_sync_reg_channel_write_h_sum_0_loc_0_i_loc_s, "ap_sync_reg_channel_write_h_sum_0_loc_0_i_loc_s");
    sc_trace(mVcdFile, ap_sync_channel_write_h_sum_0_loc_0_i_loc_s, "ap_sync_channel_write_h_sum_0_loc_0_i_loc_s");
    sc_trace(mVcdFile, ap_channel_done_v_sum_0_loc_0_i_loc_s, "ap_channel_done_v_sum_0_loc_0_i_loc_s");
    sc_trace(mVcdFile, v_sum_0_loc_0_i_loc_s_full_n, "v_sum_0_loc_0_i_loc_s_full_n");
    sc_trace(mVcdFile, ap_sync_reg_channel_write_v_sum_0_loc_0_i_loc_s, "ap_sync_reg_channel_write_v_sum_0_loc_0_i_loc_s");
    sc_trace(mVcdFile, ap_sync_channel_write_v_sum_0_loc_0_i_loc_s, "ap_sync_channel_write_v_sum_0_loc_0_i_loc_s");
    sc_trace(mVcdFile, get_centroid_sh_Bloc_U0_ap_start, "get_centroid_sh_Bloc_U0_ap_start");
    sc_trace(mVcdFile, get_centroid_sh_Bloc_U0_ap_done, "get_centroid_sh_Bloc_U0_ap_done");
    sc_trace(mVcdFile, get_centroid_sh_Bloc_U0_ap_continue, "get_centroid_sh_Bloc_U0_ap_continue");
    sc_trace(mVcdFile, get_centroid_sh_Bloc_U0_ap_idle, "get_centroid_sh_Bloc_U0_ap_idle");
    sc_trace(mVcdFile, get_centroid_sh_Bloc_U0_ap_ready, "get_centroid_sh_Bloc_U0_ap_ready");
    sc_trace(mVcdFile, get_centroid_sh_Bloc_U0_possible_c_x_read, "get_centroid_sh_Bloc_U0_possible_c_x_read");
    sc_trace(mVcdFile, get_centroid_sh_Bloc_U0_c_read_read, "get_centroid_sh_Bloc_U0_c_read_read");
    sc_trace(mVcdFile, get_centroid_sh_Bloc_U0_v_offset_read_read, "get_centroid_sh_Bloc_U0_v_offset_read_read");
    sc_trace(mVcdFile, get_centroid_sh_Bloc_U0_h_offset_read, "get_centroid_sh_Bloc_U0_h_offset_read");
    sc_trace(mVcdFile, get_centroid_sh_Bloc_U0_possible_c_y_read, "get_centroid_sh_Bloc_U0_possible_c_y_read");
    sc_trace(mVcdFile, get_centroid_sh_Bloc_U0_c, "get_centroid_sh_Bloc_U0_c");
    sc_trace(mVcdFile, get_centroid_sh_Bloc_U0_c_ap_vld, "get_centroid_sh_Bloc_U0_c_ap_vld");
    sc_trace(mVcdFile, ap_sync_continue, "ap_sync_continue");
    sc_trace(mVcdFile, h_offset_c_full_n, "h_offset_c_full_n");
    sc_trace(mVcdFile, h_offset_c_dout, "h_offset_c_dout");
    sc_trace(mVcdFile, h_offset_c_empty_n, "h_offset_c_empty_n");
    sc_trace(mVcdFile, v_offset_read_c_full_n, "v_offset_read_c_full_n");
    sc_trace(mVcdFile, v_offset_read_c_dout, "v_offset_read_c_dout");
    sc_trace(mVcdFile, v_offset_read_c_empty_n, "v_offset_read_c_empty_n");
    sc_trace(mVcdFile, possible_c_x_c_full_n, "possible_c_x_c_full_n");
    sc_trace(mVcdFile, possible_c_x_c_dout, "possible_c_x_c_dout");
    sc_trace(mVcdFile, possible_c_x_c_empty_n, "possible_c_x_c_empty_n");
    sc_trace(mVcdFile, possible_c_y_c_full_n, "possible_c_y_c_full_n");
    sc_trace(mVcdFile, possible_c_y_c_dout, "possible_c_y_c_dout");
    sc_trace(mVcdFile, possible_c_y_c_empty_n, "possible_c_y_c_empty_n");
    sc_trace(mVcdFile, c_read_c_full_n, "c_read_c_full_n");
    sc_trace(mVcdFile, c_read_c_dout, "c_read_c_dout");
    sc_trace(mVcdFile, c_read_c_empty_n, "c_read_c_empty_n");
    sc_trace(mVcdFile, v_sum_0_loc_0_i_loc_s_dout, "v_sum_0_loc_0_i_loc_s_dout");
    sc_trace(mVcdFile, v_sum_0_loc_0_i_loc_s_empty_n, "v_sum_0_loc_0_i_loc_s_empty_n");
    sc_trace(mVcdFile, h_sum_0_loc_0_i_loc_s_dout, "h_sum_0_loc_0_i_loc_s_dout");
    sc_trace(mVcdFile, h_sum_0_loc_0_i_loc_s_empty_n, "h_sum_0_loc_0_i_loc_s_empty_n");
    sc_trace(mVcdFile, p_sum_0_loc_0_i_loc_c_dout, "p_sum_0_loc_0_i_loc_c_dout");
    sc_trace(mVcdFile, p_sum_0_loc_0_i_loc_c_empty_n, "p_sum_0_loc_0_i_loc_c_empty_n");
    sc_trace(mVcdFile, ap_sync_done, "ap_sync_done");
    sc_trace(mVcdFile, ap_sync_ready, "ap_sync_ready");
    sc_trace(mVcdFile, get_centroid_sh_Loop_U0_start_full_n, "get_centroid_sh_Loop_U0_start_full_n");
    sc_trace(mVcdFile, get_centroid_sh_Loop_U0_start_write, "get_centroid_sh_Loop_U0_start_write");
    sc_trace(mVcdFile, get_centroid_sh_Bloc_U0_start_full_n, "get_centroid_sh_Bloc_U0_start_full_n");
    sc_trace(mVcdFile, get_centroid_sh_Bloc_U0_start_write, "get_centroid_sh_Bloc_U0_start_write");
#endif

    }
}

get_centroid_sh::~get_centroid_sh() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete get_centroid_sh_Loop_U0;
    delete get_centroid_sh_Bloc_U0;
    delete h_offset_c_U;
    delete v_offset_read_c_U;
    delete possible_c_x_c_U;
    delete possible_c_y_c_U;
    delete c_read_c_U;
    delete v_sum_0_loc_0_i_loc_s_U;
    delete h_sum_0_loc_0_i_loc_s_U;
    delete p_sum_0_loc_0_i_loc_c_U;
}

void get_centroid_sh::thread_ap_var_for_const0() {
    ap_var_for_const0 = ap_const_logic_1;
}

void get_centroid_sh::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_sync_reg_channel_write_h_sum_0_loc_0_i_loc_s = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, (get_centroid_sh_Loop_U0_ap_done.read() & 
             get_centroid_sh_Loop_U0_ap_continue.read()))) {
            ap_sync_reg_channel_write_h_sum_0_loc_0_i_loc_s = ap_const_logic_0;
        } else {
            ap_sync_reg_channel_write_h_sum_0_loc_0_i_loc_s = ap_sync_channel_write_h_sum_0_loc_0_i_loc_s.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_sync_reg_channel_write_p_sum_0_loc_0_i_loc_c = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, (get_centroid_sh_Loop_U0_ap_done.read() & 
             get_centroid_sh_Loop_U0_ap_continue.read()))) {
            ap_sync_reg_channel_write_p_sum_0_loc_0_i_loc_c = ap_const_logic_0;
        } else {
            ap_sync_reg_channel_write_p_sum_0_loc_0_i_loc_c = ap_sync_channel_write_p_sum_0_loc_0_i_loc_c.read();
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_sync_reg_channel_write_v_sum_0_loc_0_i_loc_s = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, (get_centroid_sh_Loop_U0_ap_done.read() & 
             get_centroid_sh_Loop_U0_ap_continue.read()))) {
            ap_sync_reg_channel_write_v_sum_0_loc_0_i_loc_s = ap_const_logic_0;
        } else {
            ap_sync_reg_channel_write_v_sum_0_loc_0_i_loc_s = ap_sync_channel_write_v_sum_0_loc_0_i_loc_s.read();
        }
    }
}

void get_centroid_sh::thread_ap_channel_done_h_sum_0_loc_0_i_loc_s() {
    ap_channel_done_h_sum_0_loc_0_i_loc_s = (get_centroid_sh_Loop_U0_ap_done.read() & (ap_sync_reg_channel_write_h_sum_0_loc_0_i_loc_s.read() ^ 
  ap_const_logic_1));
}

void get_centroid_sh::thread_ap_channel_done_p_sum_0_loc_0_i_loc_c() {
    ap_channel_done_p_sum_0_loc_0_i_loc_c = (get_centroid_sh_Loop_U0_ap_done.read() & (ap_sync_reg_channel_write_p_sum_0_loc_0_i_loc_c.read() ^ 
  ap_const_logic_1));
}

void get_centroid_sh::thread_ap_channel_done_v_sum_0_loc_0_i_loc_s() {
    ap_channel_done_v_sum_0_loc_0_i_loc_s = (get_centroid_sh_Loop_U0_ap_done.read() & (ap_sync_reg_channel_write_v_sum_0_loc_0_i_loc_s.read() ^ 
  ap_const_logic_1));
}

void get_centroid_sh::thread_ap_done() {
    ap_done = get_centroid_sh_Bloc_U0_ap_done.read();
}

void get_centroid_sh::thread_ap_idle() {
    ap_idle = (get_centroid_sh_Loop_U0_ap_idle.read() & get_centroid_sh_Bloc_U0_ap_idle.read() & (v_sum_0_loc_0_i_loc_s_empty_n.read() ^ 
  ap_const_logic_1) & (h_sum_0_loc_0_i_loc_s_empty_n.read() ^ 
  ap_const_logic_1) & (p_sum_0_loc_0_i_loc_c_empty_n.read() ^ 
  ap_const_logic_1));
}

void get_centroid_sh::thread_ap_ready() {
    ap_ready = get_centroid_sh_Loop_U0_ap_ready.read();
}

void get_centroid_sh::thread_ap_sync_channel_write_h_sum_0_loc_0_i_loc_s() {
    ap_sync_channel_write_h_sum_0_loc_0_i_loc_s = ((ap_channel_done_h_sum_0_loc_0_i_loc_s.read() & 
  h_sum_0_loc_0_i_loc_s_full_n.read()) | ap_sync_reg_channel_write_h_sum_0_loc_0_i_loc_s.read());
}

void get_centroid_sh::thread_ap_sync_channel_write_p_sum_0_loc_0_i_loc_c() {
    ap_sync_channel_write_p_sum_0_loc_0_i_loc_c = ((ap_channel_done_p_sum_0_loc_0_i_loc_c.read() & 
  p_sum_0_loc_0_i_loc_c_full_n.read()) | ap_sync_reg_channel_write_p_sum_0_loc_0_i_loc_c.read());
}

void get_centroid_sh::thread_ap_sync_channel_write_v_sum_0_loc_0_i_loc_s() {
    ap_sync_channel_write_v_sum_0_loc_0_i_loc_s = ((ap_channel_done_v_sum_0_loc_0_i_loc_s.read() & 
  v_sum_0_loc_0_i_loc_s_full_n.read()) | ap_sync_reg_channel_write_v_sum_0_loc_0_i_loc_s.read());
}

void get_centroid_sh::thread_ap_sync_continue() {
    ap_sync_continue = ap_continue.read();
}

void get_centroid_sh::thread_ap_sync_done() {
    ap_sync_done = get_centroid_sh_Bloc_U0_ap_done.read();
}

void get_centroid_sh::thread_ap_sync_ready() {
    ap_sync_ready = get_centroid_sh_Loop_U0_ap_ready.read();
}

void get_centroid_sh::thread_c() {
    c = get_centroid_sh_Bloc_U0_c.read();
}

void get_centroid_sh::thread_c_ap_vld() {
    c_ap_vld = get_centroid_sh_Bloc_U0_c_ap_vld.read();
}

void get_centroid_sh::thread_get_centroid_sh_Bloc_U0_ap_continue() {
    get_centroid_sh_Bloc_U0_ap_continue = ap_continue.read();
}

void get_centroid_sh::thread_get_centroid_sh_Bloc_U0_ap_start() {
    get_centroid_sh_Bloc_U0_ap_start = (v_sum_0_loc_0_i_loc_s_empty_n.read() & h_sum_0_loc_0_i_loc_s_empty_n.read() & p_sum_0_loc_0_i_loc_c_empty_n.read());
}

void get_centroid_sh::thread_get_centroid_sh_Bloc_U0_start_full_n() {
    get_centroid_sh_Bloc_U0_start_full_n = ap_const_logic_1;
}

void get_centroid_sh::thread_get_centroid_sh_Bloc_U0_start_write() {
    get_centroid_sh_Bloc_U0_start_write = ap_const_logic_0;
}

void get_centroid_sh::thread_get_centroid_sh_Loop_U0_ap_continue() {
    get_centroid_sh_Loop_U0_ap_continue = (ap_sync_channel_write_p_sum_0_loc_0_i_loc_c.read() & ap_sync_channel_write_h_sum_0_loc_0_i_loc_s.read() & ap_sync_channel_write_v_sum_0_loc_0_i_loc_s.read());
}

void get_centroid_sh::thread_get_centroid_sh_Loop_U0_ap_start() {
    get_centroid_sh_Loop_U0_ap_start = ap_start.read();
}

void get_centroid_sh::thread_get_centroid_sh_Loop_U0_start_full_n() {
    get_centroid_sh_Loop_U0_start_full_n = ap_const_logic_1;
}

void get_centroid_sh::thread_get_centroid_sh_Loop_U0_start_write() {
    get_centroid_sh_Loop_U0_start_write = ap_const_logic_0;
}

void get_centroid_sh::thread_micro_roi_data_V_address0() {
    micro_roi_data_V_address0 = get_centroid_sh_Loop_U0_micro_roi_data_V_address0.read();
}

void get_centroid_sh::thread_micro_roi_data_V_address1() {
    micro_roi_data_V_address1 = ap_const_lv10_0;
}

void get_centroid_sh::thread_micro_roi_data_V_ce0() {
    micro_roi_data_V_ce0 = get_centroid_sh_Loop_U0_micro_roi_data_V_ce0.read();
}

void get_centroid_sh::thread_micro_roi_data_V_ce1() {
    micro_roi_data_V_ce1 = ap_const_logic_0;
}

void get_centroid_sh::thread_micro_roi_data_V_d0() {
    micro_roi_data_V_d0 = ap_const_lv8_0;
}

void get_centroid_sh::thread_micro_roi_data_V_d1() {
    micro_roi_data_V_d1 = ap_const_lv8_0;
}

void get_centroid_sh::thread_micro_roi_data_V_we0() {
    micro_roi_data_V_we0 = ap_const_logic_0;
}

void get_centroid_sh::thread_micro_roi_data_V_we1() {
    micro_roi_data_V_we1 = ap_const_logic_0;
}

}

