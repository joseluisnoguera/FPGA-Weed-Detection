// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "get_crop_lines.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic get_crop_lines::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic get_crop_lines::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<10> get_crop_lines::ap_ST_fsm_state1 = "1";
const sc_lv<10> get_crop_lines::ap_ST_fsm_state2 = "10";
const sc_lv<10> get_crop_lines::ap_ST_fsm_state3 = "100";
const sc_lv<10> get_crop_lines::ap_ST_fsm_state4 = "1000";
const sc_lv<10> get_crop_lines::ap_ST_fsm_state5 = "10000";
const sc_lv<10> get_crop_lines::ap_ST_fsm_state6 = "100000";
const sc_lv<10> get_crop_lines::ap_ST_fsm_state7 = "1000000";
const sc_lv<10> get_crop_lines::ap_ST_fsm_state8 = "10000000";
const sc_lv<10> get_crop_lines::ap_ST_fsm_state9 = "100000000";
const sc_lv<10> get_crop_lines::ap_ST_fsm_state10 = "1000000000";
const sc_lv<32> get_crop_lines::ap_const_lv32_0 = "00000000000000000000000000000000";
const sc_lv<32> get_crop_lines::ap_const_lv32_7 = "111";
const sc_lv<32> get_crop_lines::ap_const_lv32_2 = "10";
const sc_lv<32> get_crop_lines::ap_const_lv32_3 = "11";
const sc_lv<32> get_crop_lines::ap_const_lv32_4 = "100";
const sc_lv<32> get_crop_lines::ap_const_lv32_5 = "101";
const sc_lv<32> get_crop_lines::ap_const_lv32_6 = "110";
const sc_lv<32> get_crop_lines::ap_const_lv32_1 = "1";
const sc_lv<32> get_crop_lines::ap_const_lv32_8 = "1000";
const sc_lv<32> get_crop_lines::ap_const_lv32_9 = "1001";
const bool get_crop_lines::ap_const_boolean_1 = true;

get_crop_lines::get_crop_lines(sc_module_name name) : sc_module(name), mVcdFile(0) {
    line_bases_U = new get_crop_lines_li0iy("line_bases_U");
    line_bases_U->clk(ap_clk);
    line_bases_U->reset(ap_rst);
    line_bases_U->address0(line_bases_address0);
    line_bases_U->ce0(line_bases_ce0);
    line_bases_U->we0(line_bases_we0);
    line_bases_U->d0(grp_get_line_bases_fu_88_line_bases_d0);
    line_bases_U->q0(line_bases_q0);
    line_bases_U->address1(grp_get_line_bases_fu_88_line_bases_address1);
    line_bases_U->ce1(line_bases_ce1);
    line_bases_U->we1(line_bases_we1);
    line_bases_U->d1(grp_get_line_bases_fu_88_line_bases_d1);
    centroids_U = new get_crop_lines_ce1iI("centroids_U");
    centroids_U->clk(ap_clk);
    centroids_U->reset(ap_rst);
    centroids_U->address0(centroids_address0);
    centroids_U->ce0(centroids_ce0);
    centroids_U->we0(centroids_we0);
    centroids_U->d0(centroids_d0);
    centroids_U->q0(centroids_q0);
    lines_U = new get_crop_lines_li2iS("lines_U");
    lines_U->clk(ap_clk);
    lines_U->reset(ap_rst);
    lines_U->address0(lines_address0);
    lines_U->ce0(lines_ce0);
    lines_U->we0(lines_we0);
    lines_U->d0(grp_get_lines_lsl_fu_76_lines_d0);
    lines_U->q0(lines_q0);
    grp_extr_half_1_cent_fu_48 = new extr_half_1_cent("grp_extr_half_1_cent_fu_48");
    grp_extr_half_1_cent_fu_48->ap_clk(ap_clk);
    grp_extr_half_1_cent_fu_48->ap_rst(ap_rst);
    grp_extr_half_1_cent_fu_48->ap_start(grp_extr_half_1_cent_fu_48_ap_start);
    grp_extr_half_1_cent_fu_48->ap_done(grp_extr_half_1_cent_fu_48_ap_done);
    grp_extr_half_1_cent_fu_48->ap_idle(grp_extr_half_1_cent_fu_48_ap_idle);
    grp_extr_half_1_cent_fu_48->ap_ready(grp_extr_half_1_cent_fu_48_ap_ready);
    grp_extr_half_1_cent_fu_48->line_bases_address0(grp_extr_half_1_cent_fu_48_line_bases_address0);
    grp_extr_half_1_cent_fu_48->line_bases_ce0(grp_extr_half_1_cent_fu_48_line_bases_ce0);
    grp_extr_half_1_cent_fu_48->line_bases_q0(line_bases_q0);
    grp_extr_half_1_cent_fu_48->eroded_data_V_dout(eroded_data_V_dout);
    grp_extr_half_1_cent_fu_48->eroded_data_V_empty_n(eroded_data_V_empty_n);
    grp_extr_half_1_cent_fu_48->eroded_data_V_read(grp_extr_half_1_cent_fu_48_eroded_data_V_read);
    grp_extr_half_1_cent_fu_48->centroids_address0(grp_extr_half_1_cent_fu_48_centroids_address0);
    grp_extr_half_1_cent_fu_48->centroids_ce0(grp_extr_half_1_cent_fu_48_centroids_ce0);
    grp_extr_half_1_cent_fu_48->centroids_we0(grp_extr_half_1_cent_fu_48_centroids_we0);
    grp_extr_half_1_cent_fu_48->centroids_d0(grp_extr_half_1_cent_fu_48_centroids_d0);
    grp_extr_half_1_cent_fu_48->centroids_q0(centroids_q0);
    grp_extr_half_2_cent_fu_62 = new extr_half_2_cent("grp_extr_half_2_cent_fu_62");
    grp_extr_half_2_cent_fu_62->ap_clk(ap_clk);
    grp_extr_half_2_cent_fu_62->ap_rst(ap_rst);
    grp_extr_half_2_cent_fu_62->ap_start(grp_extr_half_2_cent_fu_62_ap_start);
    grp_extr_half_2_cent_fu_62->ap_done(grp_extr_half_2_cent_fu_62_ap_done);
    grp_extr_half_2_cent_fu_62->ap_idle(grp_extr_half_2_cent_fu_62_ap_idle);
    grp_extr_half_2_cent_fu_62->ap_ready(grp_extr_half_2_cent_fu_62_ap_ready);
    grp_extr_half_2_cent_fu_62->line_bases_active_address0(grp_extr_half_2_cent_fu_62_line_bases_active_address0);
    grp_extr_half_2_cent_fu_62->line_bases_active_ce0(grp_extr_half_2_cent_fu_62_line_bases_active_ce0);
    grp_extr_half_2_cent_fu_62->line_bases_active_q0(line_bases_q0);
    grp_extr_half_2_cent_fu_62->eroded_data_V_dout(eroded_data_V_dout);
    grp_extr_half_2_cent_fu_62->eroded_data_V_empty_n(eroded_data_V_empty_n);
    grp_extr_half_2_cent_fu_62->eroded_data_V_read(grp_extr_half_2_cent_fu_62_eroded_data_V_read);
    grp_extr_half_2_cent_fu_62->centroids_address0(grp_extr_half_2_cent_fu_62_centroids_address0);
    grp_extr_half_2_cent_fu_62->centroids_ce0(grp_extr_half_2_cent_fu_62_centroids_ce0);
    grp_extr_half_2_cent_fu_62->centroids_we0(grp_extr_half_2_cent_fu_62_centroids_we0);
    grp_extr_half_2_cent_fu_62->centroids_d0(grp_extr_half_2_cent_fu_62_centroids_d0);
    grp_extr_half_2_cent_fu_62->centroids_q0(centroids_q0);
    grp_get_lines_lsl_fu_76 = new get_lines_lsl("grp_get_lines_lsl_fu_76");
    grp_get_lines_lsl_fu_76->ap_clk(ap_clk);
    grp_get_lines_lsl_fu_76->ap_rst(ap_rst);
    grp_get_lines_lsl_fu_76->ap_start(grp_get_lines_lsl_fu_76_ap_start);
    grp_get_lines_lsl_fu_76->ap_done(grp_get_lines_lsl_fu_76_ap_done);
    grp_get_lines_lsl_fu_76->ap_idle(grp_get_lines_lsl_fu_76_ap_idle);
    grp_get_lines_lsl_fu_76->ap_ready(grp_get_lines_lsl_fu_76_ap_ready);
    grp_get_lines_lsl_fu_76->line_bases_address0(grp_get_lines_lsl_fu_76_line_bases_address0);
    grp_get_lines_lsl_fu_76->line_bases_ce0(grp_get_lines_lsl_fu_76_line_bases_ce0);
    grp_get_lines_lsl_fu_76->line_bases_q0(line_bases_q0);
    grp_get_lines_lsl_fu_76->centroids_address0(grp_get_lines_lsl_fu_76_centroids_address0);
    grp_get_lines_lsl_fu_76->centroids_ce0(grp_get_lines_lsl_fu_76_centroids_ce0);
    grp_get_lines_lsl_fu_76->centroids_q0(centroids_q0);
    grp_get_lines_lsl_fu_76->lines_address0(grp_get_lines_lsl_fu_76_lines_address0);
    grp_get_lines_lsl_fu_76->lines_ce0(grp_get_lines_lsl_fu_76_lines_ce0);
    grp_get_lines_lsl_fu_76->lines_we0(grp_get_lines_lsl_fu_76_lines_we0);
    grp_get_lines_lsl_fu_76->lines_d0(grp_get_lines_lsl_fu_76_lines_d0);
    grp_get_lines_lsl_fu_76->lines_q0(lines_q0);
    grp_get_lines_lsl_fu_76->ap_return(grp_get_lines_lsl_fu_76_ap_return);
    grp_get_line_bases_fu_88 = new get_line_bases("grp_get_line_bases_fu_88");
    grp_get_line_bases_fu_88->ap_clk(ap_clk);
    grp_get_line_bases_fu_88->ap_rst(ap_rst);
    grp_get_line_bases_fu_88->ap_start(grp_get_line_bases_fu_88_ap_start);
    grp_get_line_bases_fu_88->ap_done(grp_get_line_bases_fu_88_ap_done);
    grp_get_line_bases_fu_88->ap_idle(grp_get_line_bases_fu_88_ap_idle);
    grp_get_line_bases_fu_88->ap_ready(grp_get_line_bases_fu_88_ap_ready);
    grp_get_line_bases_fu_88->bottom_data_V_dout(bottom_data_V_dout);
    grp_get_line_bases_fu_88->bottom_data_V_empty_n(bottom_data_V_empty_n);
    grp_get_line_bases_fu_88->bottom_data_V_read(grp_get_line_bases_fu_88_bottom_data_V_read);
    grp_get_line_bases_fu_88->line_bases_address0(grp_get_line_bases_fu_88_line_bases_address0);
    grp_get_line_bases_fu_88->line_bases_ce0(grp_get_line_bases_fu_88_line_bases_ce0);
    grp_get_line_bases_fu_88->line_bases_we0(grp_get_line_bases_fu_88_line_bases_we0);
    grp_get_line_bases_fu_88->line_bases_d0(grp_get_line_bases_fu_88_line_bases_d0);
    grp_get_line_bases_fu_88->line_bases_q0(line_bases_q0);
    grp_get_line_bases_fu_88->line_bases_address1(grp_get_line_bases_fu_88_line_bases_address1);
    grp_get_line_bases_fu_88->line_bases_ce1(grp_get_line_bases_fu_88_line_bases_ce1);
    grp_get_line_bases_fu_88->line_bases_we1(grp_get_line_bases_fu_88_line_bases_we1);
    grp_get_line_bases_fu_88->line_bases_d1(grp_get_line_bases_fu_88_line_bases_d1);
    grp_get_weed_mask_fu_100 = new get_weed_mask("grp_get_weed_mask_fu_100");
    grp_get_weed_mask_fu_100->ap_clk(ap_clk);
    grp_get_weed_mask_fu_100->ap_rst(ap_rst);
    grp_get_weed_mask_fu_100->ap_start(grp_get_weed_mask_fu_100_ap_start);
    grp_get_weed_mask_fu_100->ap_done(grp_get_weed_mask_fu_100_ap_done);
    grp_get_weed_mask_fu_100->ap_idle(grp_get_weed_mask_fu_100_ap_idle);
    grp_get_weed_mask_fu_100->ap_ready(grp_get_weed_mask_fu_100_ap_ready);
    grp_get_weed_mask_fu_100->weed_mask_tmp_data_V_din(grp_get_weed_mask_fu_100_weed_mask_tmp_data_V_din);
    grp_get_weed_mask_fu_100->weed_mask_tmp_data_V_full_n(weed_mask_tmp_data_V_full_n);
    grp_get_weed_mask_fu_100->weed_mask_tmp_data_V_write(grp_get_weed_mask_fu_100_weed_mask_tmp_data_V_write);
    grp_get_weed_mask_fu_100->lines_founded_read(grp_get_weed_mask_fu_100_lines_founded_read);
    grp_get_weed_mask_fu_100->lines_address0(grp_get_weed_mask_fu_100_lines_address0);
    grp_get_weed_mask_fu_100->lines_ce0(grp_get_weed_mask_fu_100_lines_ce0);
    grp_get_weed_mask_fu_100->lines_q0(lines_q0);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_ap_CS_fsm_state1);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state10);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state2);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state3);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state4);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state5);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state6);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state7);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state8);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_CS_fsm_state9);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_state1);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_block_state1_ignore_call3);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_done_reg );
    sensitive << ( grp_get_weed_mask_fu_100_ap_done );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_ap_idle);
    sensitive << ( real_start );
    sensitive << ( ap_CS_fsm_state1 );

    SC_METHOD(thread_ap_ready);
    sensitive << ( internal_ap_ready );

    SC_METHOD(thread_bottom_data_V_read);
    sensitive << ( grp_get_line_bases_fu_88_bottom_data_V_read );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_centroids_address0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_extr_half_1_cent_fu_48_centroids_address0 );
    sensitive << ( grp_extr_half_2_cent_fu_62_centroids_address0 );
    sensitive << ( grp_get_lines_lsl_fu_76_centroids_address0 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_centroids_ce0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_extr_half_1_cent_fu_48_centroids_ce0 );
    sensitive << ( grp_extr_half_2_cent_fu_62_centroids_ce0 );
    sensitive << ( grp_get_lines_lsl_fu_76_centroids_ce0 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_centroids_d0);
    sensitive << ( grp_extr_half_1_cent_fu_48_centroids_d0 );
    sensitive << ( grp_extr_half_2_cent_fu_62_centroids_d0 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_centroids_we0);
    sensitive << ( grp_extr_half_1_cent_fu_48_centroids_we0 );
    sensitive << ( grp_extr_half_2_cent_fu_62_centroids_we0 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_eroded_data_V_read);
    sensitive << ( grp_extr_half_1_cent_fu_48_eroded_data_V_read );
    sensitive << ( grp_extr_half_2_cent_fu_62_eroded_data_V_read );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );

    SC_METHOD(thread_grp_extr_half_1_cent_fu_48_ap_start);
    sensitive << ( grp_extr_half_1_cent_fu_48_ap_start_reg );

    SC_METHOD(thread_grp_extr_half_2_cent_fu_62_ap_start);
    sensitive << ( grp_extr_half_2_cent_fu_62_ap_start_reg );

    SC_METHOD(thread_grp_get_line_bases_fu_88_ap_start);
    sensitive << ( grp_get_line_bases_fu_88_ap_start_reg );

    SC_METHOD(thread_grp_get_lines_lsl_fu_76_ap_start);
    sensitive << ( grp_get_lines_lsl_fu_76_ap_start_reg );

    SC_METHOD(thread_grp_get_weed_mask_fu_100_ap_start);
    sensitive << ( grp_get_weed_mask_fu_100_ap_start_reg );

    SC_METHOD(thread_grp_get_weed_mask_fu_100_lines_founded_read);
    sensitive << ( lines_founded_reg_109 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_internal_ap_ready);
    sensitive << ( grp_get_weed_mask_fu_100_ap_done );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_line_bases_address0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_extr_half_1_cent_fu_48_line_bases_address0 );
    sensitive << ( grp_extr_half_2_cent_fu_62_line_bases_active_address0 );
    sensitive << ( grp_get_lines_lsl_fu_76_line_bases_address0 );
    sensitive << ( grp_get_line_bases_fu_88_line_bases_address0 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_line_bases_ce0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_extr_half_1_cent_fu_48_line_bases_ce0 );
    sensitive << ( grp_extr_half_2_cent_fu_62_line_bases_active_ce0 );
    sensitive << ( grp_get_lines_lsl_fu_76_line_bases_ce0 );
    sensitive << ( grp_get_line_bases_fu_88_line_bases_ce0 );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_line_bases_ce1);
    sensitive << ( grp_get_line_bases_fu_88_line_bases_ce1 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_line_bases_we0);
    sensitive << ( grp_get_line_bases_fu_88_line_bases_we0 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_line_bases_we1);
    sensitive << ( grp_get_line_bases_fu_88_line_bases_we1 );
    sensitive << ( ap_CS_fsm_state2 );

    SC_METHOD(thread_lines_address0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_get_lines_lsl_fu_76_lines_address0 );
    sensitive << ( grp_get_weed_mask_fu_100_lines_address0 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_lines_ce0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_get_lines_lsl_fu_76_lines_ce0 );
    sensitive << ( grp_get_weed_mask_fu_100_lines_ce0 );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_lines_we0);
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_get_lines_lsl_fu_76_lines_we0 );

    SC_METHOD(thread_real_start);
    sensitive << ( ap_start );
    sensitive << ( start_full_n );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_start_out);
    sensitive << ( real_start );

    SC_METHOD(thread_start_write);
    sensitive << ( real_start );
    sensitive << ( start_once_reg );

    SC_METHOD(thread_weed_mask_tmp_data_V_din);
    sensitive << ( grp_get_weed_mask_fu_100_weed_mask_tmp_data_V_din );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_weed_mask_tmp_data_V_write);
    sensitive << ( grp_get_weed_mask_fu_100_weed_mask_tmp_data_V_write );
    sensitive << ( ap_CS_fsm_state10 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( real_start );
    sensitive << ( ap_done_reg );
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_CS_fsm_state1 );
    sensitive << ( ap_CS_fsm_state8 );
    sensitive << ( grp_get_lines_lsl_fu_76_ap_done );
    sensitive << ( grp_extr_half_1_cent_fu_48_ap_done );
    sensitive << ( grp_extr_half_2_cent_fu_62_ap_done );
    sensitive << ( grp_get_line_bases_fu_88_ap_done );
    sensitive << ( grp_get_weed_mask_fu_100_ap_done );
    sensitive << ( ap_CS_fsm_state4 );
    sensitive << ( ap_CS_fsm_state6 );
    sensitive << ( ap_CS_fsm_state2 );
    sensitive << ( ap_CS_fsm_state10 );

    start_once_reg = SC_LOGIC_0;
    ap_done_reg = SC_LOGIC_0;
    ap_CS_fsm = "0000000001";
    grp_extr_half_1_cent_fu_48_ap_start_reg = SC_LOGIC_0;
    grp_extr_half_2_cent_fu_62_ap_start_reg = SC_LOGIC_0;
    grp_get_lines_lsl_fu_76_ap_start_reg = SC_LOGIC_0;
    grp_get_line_bases_fu_88_ap_start_reg = SC_LOGIC_0;
    grp_get_weed_mask_fu_100_ap_start_reg = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "get_crop_lines_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, start_full_n, "(port)start_full_n");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_continue, "(port)ap_continue");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, start_out, "(port)start_out");
    sc_trace(mVcdFile, start_write, "(port)start_write");
    sc_trace(mVcdFile, bottom_data_V_dout, "(port)bottom_data_V_dout");
    sc_trace(mVcdFile, bottom_data_V_empty_n, "(port)bottom_data_V_empty_n");
    sc_trace(mVcdFile, bottom_data_V_read, "(port)bottom_data_V_read");
    sc_trace(mVcdFile, eroded_data_V_dout, "(port)eroded_data_V_dout");
    sc_trace(mVcdFile, eroded_data_V_empty_n, "(port)eroded_data_V_empty_n");
    sc_trace(mVcdFile, eroded_data_V_read, "(port)eroded_data_V_read");
    sc_trace(mVcdFile, weed_mask_tmp_data_V_din, "(port)weed_mask_tmp_data_V_din");
    sc_trace(mVcdFile, weed_mask_tmp_data_V_full_n, "(port)weed_mask_tmp_data_V_full_n");
    sc_trace(mVcdFile, weed_mask_tmp_data_V_write, "(port)weed_mask_tmp_data_V_write");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, real_start, "real_start");
    sc_trace(mVcdFile, start_once_reg, "start_once_reg");
    sc_trace(mVcdFile, ap_done_reg, "ap_done_reg");
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_state1, "ap_CS_fsm_state1");
    sc_trace(mVcdFile, internal_ap_ready, "internal_ap_ready");
    sc_trace(mVcdFile, line_bases_address0, "line_bases_address0");
    sc_trace(mVcdFile, line_bases_ce0, "line_bases_ce0");
    sc_trace(mVcdFile, line_bases_we0, "line_bases_we0");
    sc_trace(mVcdFile, line_bases_q0, "line_bases_q0");
    sc_trace(mVcdFile, line_bases_ce1, "line_bases_ce1");
    sc_trace(mVcdFile, line_bases_we1, "line_bases_we1");
    sc_trace(mVcdFile, centroids_address0, "centroids_address0");
    sc_trace(mVcdFile, centroids_ce0, "centroids_ce0");
    sc_trace(mVcdFile, centroids_we0, "centroids_we0");
    sc_trace(mVcdFile, centroids_d0, "centroids_d0");
    sc_trace(mVcdFile, centroids_q0, "centroids_q0");
    sc_trace(mVcdFile, lines_address0, "lines_address0");
    sc_trace(mVcdFile, lines_ce0, "lines_ce0");
    sc_trace(mVcdFile, lines_we0, "lines_we0");
    sc_trace(mVcdFile, lines_q0, "lines_q0");
    sc_trace(mVcdFile, grp_get_lines_lsl_fu_76_ap_return, "grp_get_lines_lsl_fu_76_ap_return");
    sc_trace(mVcdFile, lines_founded_reg_109, "lines_founded_reg_109");
    sc_trace(mVcdFile, ap_CS_fsm_state8, "ap_CS_fsm_state8");
    sc_trace(mVcdFile, grp_get_lines_lsl_fu_76_ap_ready, "grp_get_lines_lsl_fu_76_ap_ready");
    sc_trace(mVcdFile, grp_get_lines_lsl_fu_76_ap_done, "grp_get_lines_lsl_fu_76_ap_done");
    sc_trace(mVcdFile, grp_extr_half_1_cent_fu_48_ap_start, "grp_extr_half_1_cent_fu_48_ap_start");
    sc_trace(mVcdFile, grp_extr_half_1_cent_fu_48_ap_done, "grp_extr_half_1_cent_fu_48_ap_done");
    sc_trace(mVcdFile, grp_extr_half_1_cent_fu_48_ap_idle, "grp_extr_half_1_cent_fu_48_ap_idle");
    sc_trace(mVcdFile, grp_extr_half_1_cent_fu_48_ap_ready, "grp_extr_half_1_cent_fu_48_ap_ready");
    sc_trace(mVcdFile, grp_extr_half_1_cent_fu_48_line_bases_address0, "grp_extr_half_1_cent_fu_48_line_bases_address0");
    sc_trace(mVcdFile, grp_extr_half_1_cent_fu_48_line_bases_ce0, "grp_extr_half_1_cent_fu_48_line_bases_ce0");
    sc_trace(mVcdFile, grp_extr_half_1_cent_fu_48_eroded_data_V_read, "grp_extr_half_1_cent_fu_48_eroded_data_V_read");
    sc_trace(mVcdFile, grp_extr_half_1_cent_fu_48_centroids_address0, "grp_extr_half_1_cent_fu_48_centroids_address0");
    sc_trace(mVcdFile, grp_extr_half_1_cent_fu_48_centroids_ce0, "grp_extr_half_1_cent_fu_48_centroids_ce0");
    sc_trace(mVcdFile, grp_extr_half_1_cent_fu_48_centroids_we0, "grp_extr_half_1_cent_fu_48_centroids_we0");
    sc_trace(mVcdFile, grp_extr_half_1_cent_fu_48_centroids_d0, "grp_extr_half_1_cent_fu_48_centroids_d0");
    sc_trace(mVcdFile, grp_extr_half_2_cent_fu_62_ap_start, "grp_extr_half_2_cent_fu_62_ap_start");
    sc_trace(mVcdFile, grp_extr_half_2_cent_fu_62_ap_done, "grp_extr_half_2_cent_fu_62_ap_done");
    sc_trace(mVcdFile, grp_extr_half_2_cent_fu_62_ap_idle, "grp_extr_half_2_cent_fu_62_ap_idle");
    sc_trace(mVcdFile, grp_extr_half_2_cent_fu_62_ap_ready, "grp_extr_half_2_cent_fu_62_ap_ready");
    sc_trace(mVcdFile, grp_extr_half_2_cent_fu_62_line_bases_active_address0, "grp_extr_half_2_cent_fu_62_line_bases_active_address0");
    sc_trace(mVcdFile, grp_extr_half_2_cent_fu_62_line_bases_active_ce0, "grp_extr_half_2_cent_fu_62_line_bases_active_ce0");
    sc_trace(mVcdFile, grp_extr_half_2_cent_fu_62_eroded_data_V_read, "grp_extr_half_2_cent_fu_62_eroded_data_V_read");
    sc_trace(mVcdFile, grp_extr_half_2_cent_fu_62_centroids_address0, "grp_extr_half_2_cent_fu_62_centroids_address0");
    sc_trace(mVcdFile, grp_extr_half_2_cent_fu_62_centroids_ce0, "grp_extr_half_2_cent_fu_62_centroids_ce0");
    sc_trace(mVcdFile, grp_extr_half_2_cent_fu_62_centroids_we0, "grp_extr_half_2_cent_fu_62_centroids_we0");
    sc_trace(mVcdFile, grp_extr_half_2_cent_fu_62_centroids_d0, "grp_extr_half_2_cent_fu_62_centroids_d0");
    sc_trace(mVcdFile, grp_get_lines_lsl_fu_76_ap_start, "grp_get_lines_lsl_fu_76_ap_start");
    sc_trace(mVcdFile, grp_get_lines_lsl_fu_76_ap_idle, "grp_get_lines_lsl_fu_76_ap_idle");
    sc_trace(mVcdFile, grp_get_lines_lsl_fu_76_line_bases_address0, "grp_get_lines_lsl_fu_76_line_bases_address0");
    sc_trace(mVcdFile, grp_get_lines_lsl_fu_76_line_bases_ce0, "grp_get_lines_lsl_fu_76_line_bases_ce0");
    sc_trace(mVcdFile, grp_get_lines_lsl_fu_76_centroids_address0, "grp_get_lines_lsl_fu_76_centroids_address0");
    sc_trace(mVcdFile, grp_get_lines_lsl_fu_76_centroids_ce0, "grp_get_lines_lsl_fu_76_centroids_ce0");
    sc_trace(mVcdFile, grp_get_lines_lsl_fu_76_lines_address0, "grp_get_lines_lsl_fu_76_lines_address0");
    sc_trace(mVcdFile, grp_get_lines_lsl_fu_76_lines_ce0, "grp_get_lines_lsl_fu_76_lines_ce0");
    sc_trace(mVcdFile, grp_get_lines_lsl_fu_76_lines_we0, "grp_get_lines_lsl_fu_76_lines_we0");
    sc_trace(mVcdFile, grp_get_lines_lsl_fu_76_lines_d0, "grp_get_lines_lsl_fu_76_lines_d0");
    sc_trace(mVcdFile, grp_get_line_bases_fu_88_ap_start, "grp_get_line_bases_fu_88_ap_start");
    sc_trace(mVcdFile, grp_get_line_bases_fu_88_ap_done, "grp_get_line_bases_fu_88_ap_done");
    sc_trace(mVcdFile, grp_get_line_bases_fu_88_ap_idle, "grp_get_line_bases_fu_88_ap_idle");
    sc_trace(mVcdFile, grp_get_line_bases_fu_88_ap_ready, "grp_get_line_bases_fu_88_ap_ready");
    sc_trace(mVcdFile, grp_get_line_bases_fu_88_bottom_data_V_read, "grp_get_line_bases_fu_88_bottom_data_V_read");
    sc_trace(mVcdFile, grp_get_line_bases_fu_88_line_bases_address0, "grp_get_line_bases_fu_88_line_bases_address0");
    sc_trace(mVcdFile, grp_get_line_bases_fu_88_line_bases_ce0, "grp_get_line_bases_fu_88_line_bases_ce0");
    sc_trace(mVcdFile, grp_get_line_bases_fu_88_line_bases_we0, "grp_get_line_bases_fu_88_line_bases_we0");
    sc_trace(mVcdFile, grp_get_line_bases_fu_88_line_bases_d0, "grp_get_line_bases_fu_88_line_bases_d0");
    sc_trace(mVcdFile, grp_get_line_bases_fu_88_line_bases_address1, "grp_get_line_bases_fu_88_line_bases_address1");
    sc_trace(mVcdFile, grp_get_line_bases_fu_88_line_bases_ce1, "grp_get_line_bases_fu_88_line_bases_ce1");
    sc_trace(mVcdFile, grp_get_line_bases_fu_88_line_bases_we1, "grp_get_line_bases_fu_88_line_bases_we1");
    sc_trace(mVcdFile, grp_get_line_bases_fu_88_line_bases_d1, "grp_get_line_bases_fu_88_line_bases_d1");
    sc_trace(mVcdFile, grp_get_weed_mask_fu_100_ap_start, "grp_get_weed_mask_fu_100_ap_start");
    sc_trace(mVcdFile, grp_get_weed_mask_fu_100_ap_done, "grp_get_weed_mask_fu_100_ap_done");
    sc_trace(mVcdFile, grp_get_weed_mask_fu_100_ap_idle, "grp_get_weed_mask_fu_100_ap_idle");
    sc_trace(mVcdFile, grp_get_weed_mask_fu_100_ap_ready, "grp_get_weed_mask_fu_100_ap_ready");
    sc_trace(mVcdFile, grp_get_weed_mask_fu_100_weed_mask_tmp_data_V_din, "grp_get_weed_mask_fu_100_weed_mask_tmp_data_V_din");
    sc_trace(mVcdFile, grp_get_weed_mask_fu_100_weed_mask_tmp_data_V_write, "grp_get_weed_mask_fu_100_weed_mask_tmp_data_V_write");
    sc_trace(mVcdFile, grp_get_weed_mask_fu_100_lines_founded_read, "grp_get_weed_mask_fu_100_lines_founded_read");
    sc_trace(mVcdFile, grp_get_weed_mask_fu_100_lines_address0, "grp_get_weed_mask_fu_100_lines_address0");
    sc_trace(mVcdFile, grp_get_weed_mask_fu_100_lines_ce0, "grp_get_weed_mask_fu_100_lines_ce0");
    sc_trace(mVcdFile, grp_extr_half_1_cent_fu_48_ap_start_reg, "grp_extr_half_1_cent_fu_48_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state3, "ap_CS_fsm_state3");
    sc_trace(mVcdFile, ap_CS_fsm_state4, "ap_CS_fsm_state4");
    sc_trace(mVcdFile, grp_extr_half_2_cent_fu_62_ap_start_reg, "grp_extr_half_2_cent_fu_62_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state5, "ap_CS_fsm_state5");
    sc_trace(mVcdFile, ap_CS_fsm_state6, "ap_CS_fsm_state6");
    sc_trace(mVcdFile, grp_get_lines_lsl_fu_76_ap_start_reg, "grp_get_lines_lsl_fu_76_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state7, "ap_CS_fsm_state7");
    sc_trace(mVcdFile, grp_get_line_bases_fu_88_ap_start_reg, "grp_get_line_bases_fu_88_ap_start_reg");
    sc_trace(mVcdFile, ap_block_state1_ignore_call3, "ap_block_state1_ignore_call3");
    sc_trace(mVcdFile, ap_CS_fsm_state2, "ap_CS_fsm_state2");
    sc_trace(mVcdFile, grp_get_weed_mask_fu_100_ap_start_reg, "grp_get_weed_mask_fu_100_ap_start_reg");
    sc_trace(mVcdFile, ap_CS_fsm_state9, "ap_CS_fsm_state9");
    sc_trace(mVcdFile, ap_CS_fsm_state10, "ap_CS_fsm_state10");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_block_state1, "ap_block_state1");
#endif

    }
}

get_crop_lines::~get_crop_lines() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete line_bases_U;
    delete centroids_U;
    delete lines_U;
    delete grp_extr_half_1_cent_fu_48;
    delete grp_extr_half_2_cent_fu_62;
    delete grp_get_lines_lsl_fu_76;
    delete grp_get_line_bases_fu_88;
    delete grp_get_weed_mask_fu_100;
}

void get_crop_lines::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_state1;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_done_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_continue.read())) {
            ap_done_reg = ap_const_logic_0;
        } else if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
                    esl_seteq<1,1,1>(grp_get_weed_mask_fu_100_ap_done.read(), ap_const_logic_1))) {
            ap_done_reg = ap_const_logic_1;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_extr_half_1_cent_fu_48_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state3.read())) {
            grp_extr_half_1_cent_fu_48_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_extr_half_1_cent_fu_48_ap_ready.read())) {
            grp_extr_half_1_cent_fu_48_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_extr_half_2_cent_fu_62_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state5.read())) {
            grp_extr_half_2_cent_fu_62_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_extr_half_2_cent_fu_62_ap_ready.read())) {
            grp_extr_half_2_cent_fu_62_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_get_line_bases_fu_88_ap_start_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && 
             !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
            grp_get_line_bases_fu_88_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_get_line_bases_fu_88_ap_ready.read())) {
            grp_get_line_bases_fu_88_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_get_lines_lsl_fu_76_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state7.read())) {
            grp_get_lines_lsl_fu_76_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_get_lines_lsl_fu_76_ap_ready.read())) {
            grp_get_lines_lsl_fu_76_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        grp_get_weed_mask_fu_100_ap_start_reg = ap_const_logic_0;
    } else {
        if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state9.read())) {
            grp_get_weed_mask_fu_100_ap_start_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, grp_get_weed_mask_fu_100_ap_ready.read())) {
            grp_get_weed_mask_fu_100_ap_start_reg = ap_const_logic_0;
        }
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        start_once_reg = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()) && 
             esl_seteq<1,1,1>(ap_const_logic_0, internal_ap_ready.read()))) {
            start_once_reg = ap_const_logic_1;
        } else if (esl_seteq<1,1,1>(ap_const_logic_1, internal_ap_ready.read())) {
            start_once_reg = ap_const_logic_0;
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(grp_get_lines_lsl_fu_76_ap_done.read(), ap_const_logic_1))) {
        lines_founded_reg_109 = grp_get_lines_lsl_fu_76_ap_return.read();
    }
}

void get_crop_lines::thread_ap_CS_fsm_state1() {
    ap_CS_fsm_state1 = ap_CS_fsm.read()[0];
}

void get_crop_lines::thread_ap_CS_fsm_state10() {
    ap_CS_fsm_state10 = ap_CS_fsm.read()[9];
}

void get_crop_lines::thread_ap_CS_fsm_state2() {
    ap_CS_fsm_state2 = ap_CS_fsm.read()[1];
}

void get_crop_lines::thread_ap_CS_fsm_state3() {
    ap_CS_fsm_state3 = ap_CS_fsm.read()[2];
}

void get_crop_lines::thread_ap_CS_fsm_state4() {
    ap_CS_fsm_state4 = ap_CS_fsm.read()[3];
}

void get_crop_lines::thread_ap_CS_fsm_state5() {
    ap_CS_fsm_state5 = ap_CS_fsm.read()[4];
}

void get_crop_lines::thread_ap_CS_fsm_state6() {
    ap_CS_fsm_state6 = ap_CS_fsm.read()[5];
}

void get_crop_lines::thread_ap_CS_fsm_state7() {
    ap_CS_fsm_state7 = ap_CS_fsm.read()[6];
}

void get_crop_lines::thread_ap_CS_fsm_state8() {
    ap_CS_fsm_state8 = ap_CS_fsm.read()[7];
}

void get_crop_lines::thread_ap_CS_fsm_state9() {
    ap_CS_fsm_state9 = ap_CS_fsm.read()[8];
}

void get_crop_lines::thread_ap_block_state1() {
    ap_block_state1 = (esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void get_crop_lines::thread_ap_block_state1_ignore_call3() {
    ap_block_state1_ignore_call3 = (esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1));
}

void get_crop_lines::thread_ap_done() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(grp_get_weed_mask_fu_100_ap_done.read(), ap_const_logic_1))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_done_reg.read();
    }
}

void get_crop_lines::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void get_crop_lines::thread_ap_ready() {
    ap_ready = internal_ap_ready.read();
}

void get_crop_lines::thread_bottom_data_V_read() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        bottom_data_V_read = grp_get_line_bases_fu_88_bottom_data_V_read.read();
    } else {
        bottom_data_V_read = ap_const_logic_0;
    }
}

void get_crop_lines::thread_centroids_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        centroids_address0 = grp_get_lines_lsl_fu_76_centroids_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        centroids_address0 = grp_extr_half_2_cent_fu_62_centroids_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        centroids_address0 = grp_extr_half_1_cent_fu_48_centroids_address0.read();
    } else {
        centroids_address0 = "XXXXXXX";
    }
}

void get_crop_lines::thread_centroids_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        centroids_ce0 = grp_get_lines_lsl_fu_76_centroids_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        centroids_ce0 = grp_extr_half_2_cent_fu_62_centroids_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        centroids_ce0 = grp_extr_half_1_cent_fu_48_centroids_ce0.read();
    } else {
        centroids_ce0 = ap_const_logic_0;
    }
}

void get_crop_lines::thread_centroids_d0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        centroids_d0 = grp_extr_half_2_cent_fu_62_centroids_d0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        centroids_d0 = grp_extr_half_1_cent_fu_48_centroids_d0.read();
    } else {
        centroids_d0 =  (sc_lv<48>) ("XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX");
    }
}

void get_crop_lines::thread_centroids_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        centroids_we0 = grp_extr_half_2_cent_fu_62_centroids_we0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        centroids_we0 = grp_extr_half_1_cent_fu_48_centroids_we0.read();
    } else {
        centroids_we0 = ap_const_logic_0;
    }
}

void get_crop_lines::thread_eroded_data_V_read() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        eroded_data_V_read = grp_extr_half_2_cent_fu_62_eroded_data_V_read.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        eroded_data_V_read = grp_extr_half_1_cent_fu_48_eroded_data_V_read.read();
    } else {
        eroded_data_V_read = ap_const_logic_0;
    }
}

void get_crop_lines::thread_grp_extr_half_1_cent_fu_48_ap_start() {
    grp_extr_half_1_cent_fu_48_ap_start = grp_extr_half_1_cent_fu_48_ap_start_reg.read();
}

void get_crop_lines::thread_grp_extr_half_2_cent_fu_62_ap_start() {
    grp_extr_half_2_cent_fu_62_ap_start = grp_extr_half_2_cent_fu_62_ap_start_reg.read();
}

void get_crop_lines::thread_grp_get_line_bases_fu_88_ap_start() {
    grp_get_line_bases_fu_88_ap_start = grp_get_line_bases_fu_88_ap_start_reg.read();
}

void get_crop_lines::thread_grp_get_lines_lsl_fu_76_ap_start() {
    grp_get_lines_lsl_fu_76_ap_start = grp_get_lines_lsl_fu_76_ap_start_reg.read();
}

void get_crop_lines::thread_grp_get_weed_mask_fu_100_ap_start() {
    grp_get_weed_mask_fu_100_ap_start = grp_get_weed_mask_fu_100_ap_start_reg.read();
}

void get_crop_lines::thread_grp_get_weed_mask_fu_100_lines_founded_read() {
    grp_get_weed_mask_fu_100_lines_founded_read =  (sc_logic) (lines_founded_reg_109.read()[0]);
}

void get_crop_lines::thread_internal_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && 
         esl_seteq<1,1,1>(grp_get_weed_mask_fu_100_ap_done.read(), ap_const_logic_1))) {
        internal_ap_ready = ap_const_logic_1;
    } else {
        internal_ap_ready = ap_const_logic_0;
    }
}

void get_crop_lines::thread_line_bases_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        line_bases_address0 = grp_get_line_bases_fu_88_line_bases_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        line_bases_address0 = grp_get_lines_lsl_fu_76_line_bases_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        line_bases_address0 = grp_extr_half_2_cent_fu_62_line_bases_active_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        line_bases_address0 = grp_extr_half_1_cent_fu_48_line_bases_address0.read();
    } else {
        line_bases_address0 =  (sc_lv<3>) ("XXX");
    }
}

void get_crop_lines::thread_line_bases_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        line_bases_ce0 = grp_get_line_bases_fu_88_line_bases_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        line_bases_ce0 = grp_get_lines_lsl_fu_76_line_bases_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read())) {
        line_bases_ce0 = grp_extr_half_2_cent_fu_62_line_bases_active_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read())) {
        line_bases_ce0 = grp_extr_half_1_cent_fu_48_line_bases_ce0.read();
    } else {
        line_bases_ce0 = ap_const_logic_0;
    }
}

void get_crop_lines::thread_line_bases_ce1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        line_bases_ce1 = grp_get_line_bases_fu_88_line_bases_ce1.read();
    } else {
        line_bases_ce1 = ap_const_logic_0;
    }
}

void get_crop_lines::thread_line_bases_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        line_bases_we0 = grp_get_line_bases_fu_88_line_bases_we0.read();
    } else {
        line_bases_we0 = ap_const_logic_0;
    }
}

void get_crop_lines::thread_line_bases_we1() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read())) {
        line_bases_we1 = grp_get_line_bases_fu_88_line_bases_we1.read();
    } else {
        line_bases_we1 = ap_const_logic_0;
    }
}

void get_crop_lines::thread_lines_address0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        lines_address0 = grp_get_weed_mask_fu_100_lines_address0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        lines_address0 = grp_get_lines_lsl_fu_76_lines_address0.read();
    } else {
        lines_address0 =  (sc_lv<3>) ("XXX");
    }
}

void get_crop_lines::thread_lines_ce0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        lines_ce0 = grp_get_weed_mask_fu_100_lines_ce0.read();
    } else if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        lines_ce0 = grp_get_lines_lsl_fu_76_lines_ce0.read();
    } else {
        lines_ce0 = ap_const_logic_0;
    }
}

void get_crop_lines::thread_lines_we0() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read())) {
        lines_we0 = grp_get_lines_lsl_fu_76_lines_we0.read();
    } else {
        lines_we0 = ap_const_logic_0;
    }
}

void get_crop_lines::thread_real_start() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_full_n.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()))) {
        real_start = ap_const_logic_0;
    } else {
        real_start = ap_start.read();
    }
}

void get_crop_lines::thread_start_out() {
    start_out = real_start.read();
}

void get_crop_lines::thread_start_write() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, start_once_reg.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, real_start.read()))) {
        start_write = ap_const_logic_1;
    } else {
        start_write = ap_const_logic_0;
    }
}

void get_crop_lines::thread_weed_mask_tmp_data_V_din() {
    weed_mask_tmp_data_V_din = grp_get_weed_mask_fu_100_weed_mask_tmp_data_V_din.read();
}

void get_crop_lines::thread_weed_mask_tmp_data_V_write() {
    if (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read())) {
        weed_mask_tmp_data_V_write = grp_get_weed_mask_fu_100_weed_mask_tmp_data_V_write.read();
    } else {
        weed_mask_tmp_data_V_write = ap_const_logic_0;
    }
}

void get_crop_lines::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state1.read()) && !(esl_seteq<1,1,1>(ap_const_logic_0, real_start.read()) || esl_seteq<1,1,1>(ap_done_reg.read(), ap_const_logic_1)))) {
                ap_NS_fsm = ap_ST_fsm_state2;
            } else {
                ap_NS_fsm = ap_ST_fsm_state1;
            }
            break;
        case 2 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state2.read()) && esl_seteq<1,1,1>(grp_get_line_bases_fu_88_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state3;
            } else {
                ap_NS_fsm = ap_ST_fsm_state2;
            }
            break;
        case 4 : 
            ap_NS_fsm = ap_ST_fsm_state4;
            break;
        case 8 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state4.read()) && esl_seteq<1,1,1>(grp_extr_half_1_cent_fu_48_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state5;
            } else {
                ap_NS_fsm = ap_ST_fsm_state4;
            }
            break;
        case 16 : 
            ap_NS_fsm = ap_ST_fsm_state6;
            break;
        case 32 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state6.read()) && esl_seteq<1,1,1>(grp_extr_half_2_cent_fu_62_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state7;
            } else {
                ap_NS_fsm = ap_ST_fsm_state6;
            }
            break;
        case 64 : 
            ap_NS_fsm = ap_ST_fsm_state8;
            break;
        case 128 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state8.read()) && esl_seteq<1,1,1>(grp_get_lines_lsl_fu_76_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state9;
            } else {
                ap_NS_fsm = ap_ST_fsm_state8;
            }
            break;
        case 256 : 
            ap_NS_fsm = ap_ST_fsm_state10;
            break;
        case 512 : 
            if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_state10.read()) && esl_seteq<1,1,1>(grp_get_weed_mask_fu_100_ap_done.read(), ap_const_logic_1))) {
                ap_NS_fsm = ap_ST_fsm_state1;
            } else {
                ap_NS_fsm = ap_ST_fsm_state10;
            }
            break;
        default : 
            ap_NS_fsm =  (sc_lv<10>) ("XXXXXXXXXX");
            break;
    }
}

}

