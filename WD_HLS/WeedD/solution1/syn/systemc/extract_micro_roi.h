// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _extract_micro_roi_HH_
#define _extract_micro_roi_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct extract_micro_roi : public sc_module {
    // Port declarations 17
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<8> > img_in_mr_data_V_dout;
    sc_in< sc_logic > img_in_mr_data_V_empty_n;
    sc_out< sc_logic > img_in_mr_data_V_read;
    sc_in< sc_lv<10> > x_top;
    sc_in< sc_lv<10> > x_bottom;
    sc_in< sc_lv<16> > y_left;
    sc_in< sc_lv<16> > y_right;
    sc_out< sc_lv<10> > micro_roi_data_V_address0;
    sc_out< sc_logic > micro_roi_data_V_ce0;
    sc_out< sc_logic > micro_roi_data_V_we0;
    sc_out< sc_lv<8> > micro_roi_data_V_d0;


    // Module declarations
    extract_micro_roi(sc_module_name name);
    SC_HAS_PROCESS(extract_micro_roi);

    ~extract_micro_roi();

    sc_trace_file* mVcdFile;

    sc_signal< sc_lv<3> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< sc_logic > img_in_mr_data_V_blk_n;
    sc_signal< sc_logic > ap_CS_fsm_state3;
    sc_signal< sc_lv<1> > icmp_ln111_fu_170_p2;
    sc_signal< sc_lv<1> > and_ln114_fu_196_p2;
    sc_signal< sc_lv<8> > trunc_ln112_fu_128_p1;
    sc_signal< sc_lv<8> > trunc_ln112_reg_225;
    sc_signal< sc_lv<8> > trunc_ln110_fu_132_p1;
    sc_signal< sc_lv<8> > trunc_ln110_reg_230;
    sc_signal< sc_lv<5> > v_fu_146_p2;
    sc_signal< sc_lv<5> > v_reg_238;
    sc_signal< sc_logic > ap_CS_fsm_state2;
    sc_signal< sc_lv<1> > icmp_ln114_fu_157_p2;
    sc_signal< sc_lv<1> > icmp_ln114_reg_243;
    sc_signal< sc_lv<1> > icmp_ln110_fu_140_p2;
    sc_signal< sc_lv<10> > shl_ln_fu_162_p3;
    sc_signal< sc_lv<10> > shl_ln_reg_248;
    sc_signal< sc_lv<6> > h_fu_176_p2;
    sc_signal< bool > ap_predicate_op38_read_state3;
    sc_signal< bool > ap_block_state3;
    sc_signal< sc_lv<5> > v_0_reg_106;
    sc_signal< sc_lv<6> > h_0_reg_117;
    sc_signal< sc_lv<64> > zext_ln115_1_fu_210_p1;
    sc_signal< sc_lv<8> > zext_ln110_fu_136_p1;
    sc_signal< sc_lv<8> > p_v_fu_152_p2;
    sc_signal< sc_lv<16> > zext_ln113_fu_182_p1;
    sc_signal< sc_lv<16> > p_h_fu_186_p2;
    sc_signal< sc_lv<1> > icmp_ln114_1_fu_191_p2;
    sc_signal< sc_lv<10> > zext_ln115_fu_201_p1;
    sc_signal< sc_lv<10> > add_ln115_fu_205_p2;
    sc_signal< sc_lv<3> > ap_NS_fsm;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<3> ap_ST_fsm_state1;
    static const sc_lv<3> ap_ST_fsm_state2;
    static const sc_lv<3> ap_ST_fsm_state3;
    static const bool ap_const_boolean_1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<32> ap_const_lv32_2;
    static const sc_lv<1> ap_const_lv1_0;
    static const sc_lv<1> ap_const_lv1_1;
    static const sc_lv<32> ap_const_lv32_1;
    static const sc_lv<5> ap_const_lv5_0;
    static const sc_lv<6> ap_const_lv6_0;
    static const sc_lv<5> ap_const_lv5_17;
    static const sc_lv<5> ap_const_lv5_1;
    static const sc_lv<6> ap_const_lv6_20;
    static const sc_lv<6> ap_const_lv6_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_add_ln115_fu_205_p2();
    void thread_and_ln114_fu_196_p2();
    void thread_ap_CS_fsm_state1();
    void thread_ap_CS_fsm_state2();
    void thread_ap_CS_fsm_state3();
    void thread_ap_block_state3();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_predicate_op38_read_state3();
    void thread_ap_ready();
    void thread_h_fu_176_p2();
    void thread_icmp_ln110_fu_140_p2();
    void thread_icmp_ln111_fu_170_p2();
    void thread_icmp_ln114_1_fu_191_p2();
    void thread_icmp_ln114_fu_157_p2();
    void thread_img_in_mr_data_V_blk_n();
    void thread_img_in_mr_data_V_read();
    void thread_micro_roi_data_V_address0();
    void thread_micro_roi_data_V_ce0();
    void thread_micro_roi_data_V_d0();
    void thread_micro_roi_data_V_we0();
    void thread_p_h_fu_186_p2();
    void thread_p_v_fu_152_p2();
    void thread_shl_ln_fu_162_p3();
    void thread_trunc_ln110_fu_132_p1();
    void thread_trunc_ln112_fu_128_p1();
    void thread_v_fu_146_p2();
    void thread_zext_ln110_fu_136_p1();
    void thread_zext_ln113_fu_182_p1();
    void thread_zext_ln115_1_fu_210_p1();
    void thread_zext_ln115_fu_201_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
