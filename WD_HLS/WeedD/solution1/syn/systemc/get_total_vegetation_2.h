// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#ifndef _get_total_vegetation_2_HH_
#define _get_total_vegetation_2_HH_

#include "systemc.h"
#include "AESL_pkg.h"


namespace ap_rtl {

struct get_total_vegetation_2 : public sc_module {
    // Port declarations 11
    sc_in_clk ap_clk;
    sc_in< sc_logic > ap_rst;
    sc_in< sc_logic > ap_start;
    sc_out< sc_logic > ap_done;
    sc_in< sc_logic > ap_continue;
    sc_out< sc_logic > ap_idle;
    sc_out< sc_logic > ap_ready;
    sc_in< sc_lv<24> > p_read;
    sc_in< sc_lv<24> > p_read1;
    sc_out< sc_lv<24> > agg_result_V;
    sc_out< sc_logic > agg_result_V_ap_vld;


    // Module declarations
    get_total_vegetation_2(sc_module_name name);
    SC_HAS_PROCESS(get_total_vegetation_2);

    ~get_total_vegetation_2();

    sc_trace_file* mVcdFile;

    sc_signal< sc_logic > ap_done_reg;
    sc_signal< sc_lv<1> > ap_CS_fsm;
    sc_signal< sc_logic > ap_CS_fsm_state1;
    sc_signal< bool > ap_block_state1;
    sc_signal< sc_lv<24> > zext_ln703_2_fu_83_p1;
    sc_signal< sc_lv<24> > agg_result_V_preg;
    sc_signal< sc_lv<25> > zext_ln703_1_fu_45_p1;
    sc_signal< sc_lv<25> > zext_ln703_fu_41_p1;
    sc_signal< sc_lv<25> > ret_V_fu_49_p2;
    sc_signal< sc_lv<33> > t_V_fu_55_p3;
    sc_signal< sc_lv<33> > mul_ln1148_fu_67_p0;
    sc_signal< sc_lv<67> > mul_ln1148_fu_67_p2;
    sc_signal< sc_lv<10> > tmp_fu_73_p4;
    sc_signal< sc_lv<1> > ap_NS_fsm;
    sc_signal< sc_lv<67> > mul_ln1148_fu_67_p00;
    static const sc_logic ap_const_logic_1;
    static const sc_logic ap_const_logic_0;
    static const sc_lv<1> ap_ST_fsm_state1;
    static const sc_lv<32> ap_const_lv32_0;
    static const sc_lv<24> ap_const_lv24_0;
    static const sc_lv<8> ap_const_lv8_0;
    static const sc_lv<67> ap_const_lv67_2468ACF14;
    static const sc_lv<32> ap_const_lv32_39;
    static const sc_lv<32> ap_const_lv32_42;
    static const bool ap_const_boolean_1;
    // Thread declarations
    void thread_ap_clk_no_reset_();
    void thread_agg_result_V();
    void thread_agg_result_V_ap_vld();
    void thread_ap_CS_fsm_state1();
    void thread_ap_block_state1();
    void thread_ap_done();
    void thread_ap_idle();
    void thread_ap_ready();
    void thread_mul_ln1148_fu_67_p0();
    void thread_mul_ln1148_fu_67_p00();
    void thread_mul_ln1148_fu_67_p2();
    void thread_ret_V_fu_49_p2();
    void thread_t_V_fu_55_p3();
    void thread_tmp_fu_73_p4();
    void thread_zext_ln703_1_fu_45_p1();
    void thread_zext_ln703_2_fu_83_p1();
    void thread_zext_ln703_fu_41_p1();
    void thread_ap_NS_fsm();
};

}

using namespace ap_rtl;

#endif
