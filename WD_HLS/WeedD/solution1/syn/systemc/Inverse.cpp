// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2019.2.1
// Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

#include "Inverse.h"
#include "AESL_pkg.h"

using namespace std;

namespace ap_rtl {

const sc_logic Inverse::ap_const_logic_1 = sc_dt::Log_1;
const sc_logic Inverse::ap_const_logic_0 = sc_dt::Log_0;
const sc_lv<1> Inverse::ap_ST_fsm_pp0_stage0 = "1";
const bool Inverse::ap_const_boolean_1 = true;
const sc_lv<32> Inverse::ap_const_lv32_0 = "00000000000000000000000000000000";
const bool Inverse::ap_const_boolean_0 = false;
const sc_lv<1> Inverse::ap_const_lv1_0 = "0";
const sc_lv<3> Inverse::ap_const_lv3_1 = "1";
const sc_lv<1> Inverse::ap_const_lv1_1 = "1";
const sc_lv<3> Inverse::ap_const_lv3_2 = "10";
const sc_lv<3> Inverse::ap_const_lv3_3 = "11";
const sc_lv<4> Inverse::ap_const_lv4_0 = "0000";
const sc_lv<4> Inverse::ap_const_lv4_4 = "100";
const sc_lv<4> Inverse::ap_const_lv4_8 = "1000";
const sc_lv<4> Inverse::ap_const_lv4_C = "1100";
const sc_lv<16> Inverse::ap_const_lv16_FFFF = "1111111111111111";
const sc_lv<32> Inverse::ap_const_lv32_8 = "1000";
const sc_lv<32> Inverse::ap_const_lv32_B = "1011";
const sc_lv<32> Inverse::ap_const_lv32_4 = "100";
const sc_lv<32> Inverse::ap_const_lv32_7 = "111";
const sc_lv<16> Inverse::ap_const_lv16_0 = "0000000000000000";
const sc_lv<32> Inverse::ap_const_lv32_C = "1100";
const sc_lv<32> Inverse::ap_const_lv32_F = "1111";
const sc_lv<32> Inverse::ap_const_lv32_E = "1110";
const sc_lv<2> Inverse::ap_const_lv2_0 = "00";
const sc_lv<32> Inverse::ap_const_lv32_D = "1101";
const sc_lv<3> Inverse::ap_const_lv3_0 = "000";
const sc_lv<3> Inverse::ap_const_lv3_4 = "100";
const sc_lv<32> Inverse::ap_const_lv32_A = "1010";
const sc_lv<32> Inverse::ap_const_lv32_9 = "1001";
const sc_lv<32> Inverse::ap_const_lv32_6 = "110";
const sc_lv<32> Inverse::ap_const_lv32_5 = "101";
const sc_lv<32> Inverse::ap_const_lv32_3 = "11";
const sc_lv<32> Inverse::ap_const_lv32_2 = "10";
const sc_lv<32> Inverse::ap_const_lv32_1 = "1";
const sc_lv<5> Inverse::ap_const_lv5_0 = "00000";
const sc_lv<5> Inverse::ap_const_lv5_1F = "11111";
const sc_lv<6> Inverse::ap_const_lv6_10 = "10000";

Inverse::Inverse(sc_module_name name) : sc_module(name), mVcdFile(0) {
    xf_division_lut_U = new Inverse_xf_divisiwdI("xf_division_lut_U");
    xf_division_lut_U->clk(ap_clk);
    xf_division_lut_U->reset(ap_rst);
    xf_division_lut_U->address0(xf_division_lut_address0);
    xf_division_lut_U->ce0(xf_division_lut_ce0);
    xf_division_lut_U->q0(xf_division_lut_q0);

    SC_METHOD(thread_ap_clk_no_reset_);
    dont_initialize();
    sensitive << ( ap_clk.pos() );

    SC_METHOD(thread_B_L_fu_501_p2);
    sensitive << ( zext_ln299_1_fu_497_p1 );
    sensitive << ( zext_ln299_fu_493_p1 );

    SC_METHOD(thread_add_ln302_fu_522_p2);
    sensitive << ( B_L_fu_501_p2 );

    SC_METHOD(thread_add_ln307_fu_554_p2);
    sensitive << ( M );

    SC_METHOD(thread_ap_CS_fsm_pp0_stage0);
    sensitive << ( ap_CS_fsm );

    SC_METHOD(thread_ap_block_pp0_stage0);

    SC_METHOD(thread_ap_block_pp0_stage0_11001);
    sensitive << ( ap_start );

    SC_METHOD(thread_ap_block_pp0_stage0_subdone);
    sensitive << ( ap_start );
    sensitive << ( ap_ce );

    SC_METHOD(thread_ap_block_state1_pp0_stage0_iter0);
    sensitive << ( ap_start );

    SC_METHOD(thread_ap_block_state2_pp0_stage0_iter1);

    SC_METHOD(thread_ap_condition_48);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_ce );

    SC_METHOD(thread_ap_done);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_ce );

    SC_METHOD(thread_ap_enable_pp0);
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_enable_reg_pp0_iter0);
    sensitive << ( ap_start );

    SC_METHOD(thread_ap_idle);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_idle_pp0 );

    SC_METHOD(thread_ap_idle_pp0);
    sensitive << ( ap_enable_reg_pp0_iter0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );

    SC_METHOD(thread_ap_idle_pp0_0to0);
    sensitive << ( ap_enable_reg_pp0_iter0 );

    SC_METHOD(thread_ap_phi_mux_block_2_phi_fu_162_p26);
    sensitive << ( icmp_ln242_fu_257_p2 );
    sensitive << ( icmp_ln246_fu_273_p2 );
    sensitive << ( tmp_62_fu_279_p3 );
    sensitive << ( icmp_ln253_fu_297_p2 );
    sensitive << ( icmp_ln259_fu_328_p2 );
    sensitive << ( tmp_63_fu_334_p3 );
    sensitive << ( icmp_ln266_fu_352_p2 );
    sensitive << ( icmp_ln272_fu_383_p2 );
    sensitive << ( tmp_66_fu_389_p3 );
    sensitive << ( icmp_ln279_fu_407_p2 );
    sensitive << ( tmp_65_fu_438_p3 );
    sensitive << ( icmp_ln292_fu_456_p2 );
    sensitive << ( icmp_ln292_1_fu_472_p2 );
    sensitive << ( ap_phi_reg_pp0_iter0_block_2_reg_159 );

    SC_METHOD(thread_ap_phi_mux_index_0_in_in_phi_fu_206_p4);
    sensitive << ( icmp_ln242_fu_257_p2 );
    sensitive << ( shl_ln302_fu_532_p2 );
    sensitive << ( ap_phi_reg_pp0_iter0_index_0_in_in_reg_203 );
    sensitive << ( icmp_ln301_fu_511_p2 );
    sensitive << ( trunc_ln301_fu_517_p1 );

    SC_METHOD(thread_ap_phi_mux_p_0_in_phi_fu_225_p4);
    sensitive << ( xf_division_lut_q0 );
    sensitive << ( icmp_ln242_reg_591 );
    sensitive << ( ap_phi_reg_pp0_iter1_p_0_in_reg_221 );

    SC_METHOD(thread_ap_phi_mux_phi_ln311_phi_fu_215_p4);
    sensitive << ( icmp_ln242_reg_591 );
    sensitive << ( zext_ln307_fu_566_p1 );
    sensitive << ( ap_phi_reg_pp0_iter1_phi_ln311_reg_212 );

    SC_METHOD(thread_ap_phi_mux_pos_6_phi_fu_122_p26);
    sensitive << ( icmp_ln242_fu_257_p2 );
    sensitive << ( ap_phi_reg_pp0_iter0_pos_6_reg_119 );
    sensitive << ( icmp_ln246_fu_273_p2 );
    sensitive << ( tmp_62_fu_279_p3 );
    sensitive << ( icmp_ln253_fu_297_p2 );
    sensitive << ( icmp_ln259_fu_328_p2 );
    sensitive << ( tmp_63_fu_334_p3 );
    sensitive << ( icmp_ln266_fu_352_p2 );
    sensitive << ( icmp_ln272_fu_383_p2 );
    sensitive << ( tmp_66_fu_389_p3 );
    sensitive << ( icmp_ln279_fu_407_p2 );
    sensitive << ( tmp_65_fu_438_p3 );
    sensitive << ( icmp_ln292_fu_456_p2 );
    sensitive << ( icmp_ln292_1_fu_472_p2 );
    sensitive << ( select_ln292_fu_484_p3 );
    sensitive << ( select_ln279_fu_429_p3 );
    sensitive << ( select_ln266_fu_374_p3 );
    sensitive << ( select_ln253_fu_319_p3 );

    SC_METHOD(thread_ap_phi_reg_pp0_iter0_block_2_reg_159);

    SC_METHOD(thread_ap_phi_reg_pp0_iter0_index_0_in_in_reg_203);

    SC_METHOD(thread_ap_phi_reg_pp0_iter0_p_0_in_reg_221);

    SC_METHOD(thread_ap_phi_reg_pp0_iter0_phi_ln311_reg_212);

    SC_METHOD(thread_ap_phi_reg_pp0_iter0_pos_6_reg_119);

    SC_METHOD(thread_ap_ready);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_ce );

    SC_METHOD(thread_ap_reset_idle_pp0);
    sensitive << ( ap_start );
    sensitive << ( ap_idle_pp0_0to0 );

    SC_METHOD(thread_ap_return_0);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_ce );
    sensitive << ( val_fu_570_p1 );

    SC_METHOD(thread_ap_return_1);
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_enable_reg_pp0_iter1 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_ce );
    sensitive << ( ap_phi_mux_phi_ln311_phi_fu_215_p4 );

    SC_METHOD(thread_icmp_ln242_fu_257_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_ce );
    sensitive << ( x );

    SC_METHOD(thread_icmp_ln246_fu_273_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_ce );
    sensitive << ( icmp_ln242_fu_257_p2 );
    sensitive << ( tmp_fu_263_p4 );

    SC_METHOD(thread_icmp_ln253_1_fu_313_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_ce );
    sensitive << ( icmp_ln242_fu_257_p2 );
    sensitive << ( icmp_ln246_fu_273_p2 );
    sensitive << ( tmp_62_fu_279_p3 );
    sensitive << ( icmp_ln253_fu_297_p2 );
    sensitive << ( tmp_68_fu_303_p4 );

    SC_METHOD(thread_icmp_ln253_fu_297_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_ce );
    sensitive << ( icmp_ln242_fu_257_p2 );
    sensitive << ( icmp_ln246_fu_273_p2 );
    sensitive << ( tmp_62_fu_279_p3 );
    sensitive << ( tmp_64_fu_287_p4 );

    SC_METHOD(thread_icmp_ln259_fu_328_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_ce );
    sensitive << ( icmp_ln242_fu_257_p2 );
    sensitive << ( icmp_ln246_fu_273_p2 );
    sensitive << ( tmpx_fu_233_p4 );

    SC_METHOD(thread_icmp_ln266_1_fu_368_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_ce );
    sensitive << ( icmp_ln242_fu_257_p2 );
    sensitive << ( icmp_ln246_fu_273_p2 );
    sensitive << ( icmp_ln259_fu_328_p2 );
    sensitive << ( tmp_63_fu_334_p3 );
    sensitive << ( icmp_ln266_fu_352_p2 );
    sensitive << ( tmp_71_fu_358_p4 );

    SC_METHOD(thread_icmp_ln266_fu_352_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_ce );
    sensitive << ( icmp_ln242_fu_257_p2 );
    sensitive << ( icmp_ln246_fu_273_p2 );
    sensitive << ( icmp_ln259_fu_328_p2 );
    sensitive << ( tmp_63_fu_334_p3 );
    sensitive << ( tmp_67_fu_342_p4 );

    SC_METHOD(thread_icmp_ln272_fu_383_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_ce );
    sensitive << ( icmp_ln242_fu_257_p2 );
    sensitive << ( icmp_ln246_fu_273_p2 );
    sensitive << ( icmp_ln259_fu_328_p2 );
    sensitive << ( tmpx_1_fu_243_p4 );

    SC_METHOD(thread_icmp_ln279_1_fu_423_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_ce );
    sensitive << ( icmp_ln242_fu_257_p2 );
    sensitive << ( icmp_ln246_fu_273_p2 );
    sensitive << ( icmp_ln259_fu_328_p2 );
    sensitive << ( icmp_ln272_fu_383_p2 );
    sensitive << ( tmp_66_fu_389_p3 );
    sensitive << ( icmp_ln279_fu_407_p2 );
    sensitive << ( tmp_73_fu_413_p4 );

    SC_METHOD(thread_icmp_ln279_fu_407_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_ce );
    sensitive << ( icmp_ln242_fu_257_p2 );
    sensitive << ( icmp_ln246_fu_273_p2 );
    sensitive << ( icmp_ln259_fu_328_p2 );
    sensitive << ( icmp_ln272_fu_383_p2 );
    sensitive << ( tmp_66_fu_389_p3 );
    sensitive << ( tmp_70_fu_397_p4 );

    SC_METHOD(thread_icmp_ln292_1_fu_472_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_ce );
    sensitive << ( icmp_ln242_fu_257_p2 );
    sensitive << ( icmp_ln246_fu_273_p2 );
    sensitive << ( icmp_ln259_fu_328_p2 );
    sensitive << ( icmp_ln272_fu_383_p2 );
    sensitive << ( tmp_65_fu_438_p3 );
    sensitive << ( icmp_ln292_fu_456_p2 );
    sensitive << ( tmp_72_fu_462_p4 );

    SC_METHOD(thread_icmp_ln292_2_fu_478_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_ce );
    sensitive << ( icmp_ln242_fu_257_p2 );
    sensitive << ( icmp_ln246_fu_273_p2 );
    sensitive << ( icmp_ln259_fu_328_p2 );
    sensitive << ( icmp_ln272_fu_383_p2 );
    sensitive << ( tmp_65_fu_438_p3 );
    sensitive << ( icmp_ln292_fu_456_p2 );
    sensitive << ( icmp_ln292_1_fu_472_p2 );
    sensitive << ( tmpx_2_fu_253_p1 );

    SC_METHOD(thread_icmp_ln292_fu_456_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_ce );
    sensitive << ( icmp_ln242_fu_257_p2 );
    sensitive << ( icmp_ln246_fu_273_p2 );
    sensitive << ( icmp_ln259_fu_328_p2 );
    sensitive << ( icmp_ln272_fu_383_p2 );
    sensitive << ( tmp_65_fu_438_p3 );
    sensitive << ( tmp_69_fu_446_p4 );

    SC_METHOD(thread_icmp_ln301_fu_511_p2);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_ce );
    sensitive << ( icmp_ln242_fu_257_p2 );
    sensitive << ( B_L_fu_501_p2 );

    SC_METHOD(thread_index_fu_539_p4);
    sensitive << ( ap_phi_mux_index_0_in_in_phi_fu_206_p4 );

    SC_METHOD(thread_select_ln253_fu_319_p3);
    sensitive << ( icmp_ln253_1_fu_313_p2 );

    SC_METHOD(thread_select_ln266_fu_374_p3);
    sensitive << ( icmp_ln266_1_fu_368_p2 );

    SC_METHOD(thread_select_ln279_fu_429_p3);
    sensitive << ( icmp_ln279_1_fu_423_p2 );

    SC_METHOD(thread_select_ln292_fu_484_p3);
    sensitive << ( icmp_ln292_2_fu_478_p2 );

    SC_METHOD(thread_shl_ln302_fu_532_p2);
    sensitive << ( trunc_ln301_fu_517_p1 );
    sensitive << ( zext_ln302_fu_528_p1 );

    SC_METHOD(thread_sub_ln307_fu_560_p2);
    sensitive << ( add_ln307_fu_554_p2 );
    sensitive << ( zext_ln299_2_fu_507_p1 );

    SC_METHOD(thread_tmp_62_fu_279_p3);
    sensitive << ( x );

    SC_METHOD(thread_tmp_63_fu_334_p3);
    sensitive << ( x );

    SC_METHOD(thread_tmp_64_fu_287_p4);
    sensitive << ( x );

    SC_METHOD(thread_tmp_65_fu_438_p3);
    sensitive << ( x );

    SC_METHOD(thread_tmp_66_fu_389_p3);
    sensitive << ( x );

    SC_METHOD(thread_tmp_67_fu_342_p4);
    sensitive << ( x );

    SC_METHOD(thread_tmp_68_fu_303_p4);
    sensitive << ( x );

    SC_METHOD(thread_tmp_69_fu_446_p4);
    sensitive << ( x );

    SC_METHOD(thread_tmp_70_fu_397_p4);
    sensitive << ( x );

    SC_METHOD(thread_tmp_71_fu_358_p4);
    sensitive << ( x );

    SC_METHOD(thread_tmp_72_fu_462_p4);
    sensitive << ( x );

    SC_METHOD(thread_tmp_73_fu_413_p4);
    sensitive << ( x );

    SC_METHOD(thread_tmp_fu_263_p4);
    sensitive << ( x );

    SC_METHOD(thread_tmpx_1_fu_243_p4);
    sensitive << ( x );

    SC_METHOD(thread_tmpx_2_fu_253_p1);
    sensitive << ( x );

    SC_METHOD(thread_tmpx_fu_233_p4);
    sensitive << ( x );

    SC_METHOD(thread_trunc_ln301_fu_517_p1);
    sensitive << ( x );

    SC_METHOD(thread_val_fu_570_p1);
    sensitive << ( ap_phi_mux_p_0_in_phi_fu_225_p4 );

    SC_METHOD(thread_xf_division_lut_address0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0 );
    sensitive << ( zext_ln306_fu_549_p1 );

    SC_METHOD(thread_xf_division_lut_ce0);
    sensitive << ( ap_start );
    sensitive << ( ap_CS_fsm_pp0_stage0 );
    sensitive << ( ap_block_pp0_stage0_11001 );
    sensitive << ( ap_ce );

    SC_METHOD(thread_zext_ln299_1_fu_497_p1);
    sensitive << ( ap_phi_mux_block_2_phi_fu_162_p26 );

    SC_METHOD(thread_zext_ln299_2_fu_507_p1);
    sensitive << ( B_L_fu_501_p2 );

    SC_METHOD(thread_zext_ln299_fu_493_p1);
    sensitive << ( ap_phi_mux_pos_6_phi_fu_122_p26 );

    SC_METHOD(thread_zext_ln302_fu_528_p1);
    sensitive << ( add_ln302_fu_522_p2 );

    SC_METHOD(thread_zext_ln306_fu_549_p1);
    sensitive << ( index_fu_539_p4 );

    SC_METHOD(thread_zext_ln307_fu_566_p1);
    sensitive << ( sub_ln307_reg_639 );

    SC_METHOD(thread_ap_NS_fsm);
    sensitive << ( ap_CS_fsm );
    sensitive << ( ap_block_pp0_stage0_subdone );
    sensitive << ( ap_reset_idle_pp0 );

    ap_CS_fsm = "1";
    ap_enable_reg_pp0_iter1 = SC_LOGIC_0;
    static int apTFileNum = 0;
    stringstream apTFilenSS;
    apTFilenSS << "Inverse_sc_trace_" << apTFileNum ++;
    string apTFn = apTFilenSS.str();
    mVcdFile = sc_create_vcd_trace_file(apTFn.c_str());
    mVcdFile->set_time_unit(1, SC_PS);
    if (1) {
#ifdef __HLS_TRACE_LEVEL_PORT_HIER__
    sc_trace(mVcdFile, ap_clk, "(port)ap_clk");
    sc_trace(mVcdFile, ap_rst, "(port)ap_rst");
    sc_trace(mVcdFile, ap_start, "(port)ap_start");
    sc_trace(mVcdFile, ap_done, "(port)ap_done");
    sc_trace(mVcdFile, ap_idle, "(port)ap_idle");
    sc_trace(mVcdFile, ap_ready, "(port)ap_ready");
    sc_trace(mVcdFile, ap_ce, "(port)ap_ce");
    sc_trace(mVcdFile, x, "(port)x");
    sc_trace(mVcdFile, M, "(port)M");
    sc_trace(mVcdFile, N_read, "(port)N_read");
    sc_trace(mVcdFile, ap_return_0, "(port)ap_return_0");
    sc_trace(mVcdFile, ap_return_1, "(port)ap_return_1");
#endif
#ifdef __HLS_TRACE_LEVEL_INT__
    sc_trace(mVcdFile, ap_CS_fsm, "ap_CS_fsm");
    sc_trace(mVcdFile, ap_CS_fsm_pp0_stage0, "ap_CS_fsm_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter0, "ap_enable_reg_pp0_iter0");
    sc_trace(mVcdFile, ap_block_pp0_stage0, "ap_block_pp0_stage0");
    sc_trace(mVcdFile, ap_enable_reg_pp0_iter1, "ap_enable_reg_pp0_iter1");
    sc_trace(mVcdFile, ap_idle_pp0, "ap_idle_pp0");
    sc_trace(mVcdFile, ap_block_state1_pp0_stage0_iter0, "ap_block_state1_pp0_stage0_iter0");
    sc_trace(mVcdFile, ap_block_state2_pp0_stage0_iter1, "ap_block_state2_pp0_stage0_iter1");
    sc_trace(mVcdFile, ap_block_pp0_stage0_11001, "ap_block_pp0_stage0_11001");
    sc_trace(mVcdFile, xf_division_lut_address0, "xf_division_lut_address0");
    sc_trace(mVcdFile, xf_division_lut_ce0, "xf_division_lut_ce0");
    sc_trace(mVcdFile, xf_division_lut_q0, "xf_division_lut_q0");
    sc_trace(mVcdFile, icmp_ln242_fu_257_p2, "icmp_ln242_fu_257_p2");
    sc_trace(mVcdFile, icmp_ln242_reg_591, "icmp_ln242_reg_591");
    sc_trace(mVcdFile, sub_ln307_fu_560_p2, "sub_ln307_fu_560_p2");
    sc_trace(mVcdFile, sub_ln307_reg_639, "sub_ln307_reg_639");
    sc_trace(mVcdFile, ap_block_pp0_stage0_subdone, "ap_block_pp0_stage0_subdone");
    sc_trace(mVcdFile, ap_phi_mux_pos_6_phi_fu_122_p26, "ap_phi_mux_pos_6_phi_fu_122_p26");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter0_pos_6_reg_119, "ap_phi_reg_pp0_iter0_pos_6_reg_119");
    sc_trace(mVcdFile, icmp_ln246_fu_273_p2, "icmp_ln246_fu_273_p2");
    sc_trace(mVcdFile, tmp_62_fu_279_p3, "tmp_62_fu_279_p3");
    sc_trace(mVcdFile, icmp_ln253_fu_297_p2, "icmp_ln253_fu_297_p2");
    sc_trace(mVcdFile, icmp_ln259_fu_328_p2, "icmp_ln259_fu_328_p2");
    sc_trace(mVcdFile, tmp_63_fu_334_p3, "tmp_63_fu_334_p3");
    sc_trace(mVcdFile, icmp_ln266_fu_352_p2, "icmp_ln266_fu_352_p2");
    sc_trace(mVcdFile, icmp_ln272_fu_383_p2, "icmp_ln272_fu_383_p2");
    sc_trace(mVcdFile, tmp_66_fu_389_p3, "tmp_66_fu_389_p3");
    sc_trace(mVcdFile, icmp_ln279_fu_407_p2, "icmp_ln279_fu_407_p2");
    sc_trace(mVcdFile, tmp_65_fu_438_p3, "tmp_65_fu_438_p3");
    sc_trace(mVcdFile, icmp_ln292_fu_456_p2, "icmp_ln292_fu_456_p2");
    sc_trace(mVcdFile, icmp_ln292_1_fu_472_p2, "icmp_ln292_1_fu_472_p2");
    sc_trace(mVcdFile, select_ln292_fu_484_p3, "select_ln292_fu_484_p3");
    sc_trace(mVcdFile, select_ln279_fu_429_p3, "select_ln279_fu_429_p3");
    sc_trace(mVcdFile, select_ln266_fu_374_p3, "select_ln266_fu_374_p3");
    sc_trace(mVcdFile, select_ln253_fu_319_p3, "select_ln253_fu_319_p3");
    sc_trace(mVcdFile, ap_phi_mux_block_2_phi_fu_162_p26, "ap_phi_mux_block_2_phi_fu_162_p26");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter0_block_2_reg_159, "ap_phi_reg_pp0_iter0_block_2_reg_159");
    sc_trace(mVcdFile, ap_phi_mux_index_0_in_in_phi_fu_206_p4, "ap_phi_mux_index_0_in_in_phi_fu_206_p4");
    sc_trace(mVcdFile, shl_ln302_fu_532_p2, "shl_ln302_fu_532_p2");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter0_index_0_in_in_reg_203, "ap_phi_reg_pp0_iter0_index_0_in_in_reg_203");
    sc_trace(mVcdFile, icmp_ln301_fu_511_p2, "icmp_ln301_fu_511_p2");
    sc_trace(mVcdFile, trunc_ln301_fu_517_p1, "trunc_ln301_fu_517_p1");
    sc_trace(mVcdFile, ap_phi_mux_phi_ln311_phi_fu_215_p4, "ap_phi_mux_phi_ln311_phi_fu_215_p4");
    sc_trace(mVcdFile, zext_ln307_fu_566_p1, "zext_ln307_fu_566_p1");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter1_phi_ln311_reg_212, "ap_phi_reg_pp0_iter1_phi_ln311_reg_212");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter0_phi_ln311_reg_212, "ap_phi_reg_pp0_iter0_phi_ln311_reg_212");
    sc_trace(mVcdFile, ap_phi_mux_p_0_in_phi_fu_225_p4, "ap_phi_mux_p_0_in_phi_fu_225_p4");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter1_p_0_in_reg_221, "ap_phi_reg_pp0_iter1_p_0_in_reg_221");
    sc_trace(mVcdFile, ap_phi_reg_pp0_iter0_p_0_in_reg_221, "ap_phi_reg_pp0_iter0_p_0_in_reg_221");
    sc_trace(mVcdFile, zext_ln306_fu_549_p1, "zext_ln306_fu_549_p1");
    sc_trace(mVcdFile, tmp_fu_263_p4, "tmp_fu_263_p4");
    sc_trace(mVcdFile, tmp_64_fu_287_p4, "tmp_64_fu_287_p4");
    sc_trace(mVcdFile, tmp_68_fu_303_p4, "tmp_68_fu_303_p4");
    sc_trace(mVcdFile, icmp_ln253_1_fu_313_p2, "icmp_ln253_1_fu_313_p2");
    sc_trace(mVcdFile, tmpx_fu_233_p4, "tmpx_fu_233_p4");
    sc_trace(mVcdFile, tmp_67_fu_342_p4, "tmp_67_fu_342_p4");
    sc_trace(mVcdFile, tmp_71_fu_358_p4, "tmp_71_fu_358_p4");
    sc_trace(mVcdFile, icmp_ln266_1_fu_368_p2, "icmp_ln266_1_fu_368_p2");
    sc_trace(mVcdFile, tmpx_1_fu_243_p4, "tmpx_1_fu_243_p4");
    sc_trace(mVcdFile, tmp_70_fu_397_p4, "tmp_70_fu_397_p4");
    sc_trace(mVcdFile, tmp_73_fu_413_p4, "tmp_73_fu_413_p4");
    sc_trace(mVcdFile, icmp_ln279_1_fu_423_p2, "icmp_ln279_1_fu_423_p2");
    sc_trace(mVcdFile, tmp_69_fu_446_p4, "tmp_69_fu_446_p4");
    sc_trace(mVcdFile, tmp_72_fu_462_p4, "tmp_72_fu_462_p4");
    sc_trace(mVcdFile, tmpx_2_fu_253_p1, "tmpx_2_fu_253_p1");
    sc_trace(mVcdFile, icmp_ln292_2_fu_478_p2, "icmp_ln292_2_fu_478_p2");
    sc_trace(mVcdFile, zext_ln299_1_fu_497_p1, "zext_ln299_1_fu_497_p1");
    sc_trace(mVcdFile, zext_ln299_fu_493_p1, "zext_ln299_fu_493_p1");
    sc_trace(mVcdFile, B_L_fu_501_p2, "B_L_fu_501_p2");
    sc_trace(mVcdFile, add_ln302_fu_522_p2, "add_ln302_fu_522_p2");
    sc_trace(mVcdFile, zext_ln302_fu_528_p1, "zext_ln302_fu_528_p1");
    sc_trace(mVcdFile, index_fu_539_p4, "index_fu_539_p4");
    sc_trace(mVcdFile, add_ln307_fu_554_p2, "add_ln307_fu_554_p2");
    sc_trace(mVcdFile, zext_ln299_2_fu_507_p1, "zext_ln299_2_fu_507_p1");
    sc_trace(mVcdFile, val_fu_570_p1, "val_fu_570_p1");
    sc_trace(mVcdFile, ap_NS_fsm, "ap_NS_fsm");
    sc_trace(mVcdFile, ap_idle_pp0_0to0, "ap_idle_pp0_0to0");
    sc_trace(mVcdFile, ap_reset_idle_pp0, "ap_reset_idle_pp0");
    sc_trace(mVcdFile, ap_enable_pp0, "ap_enable_pp0");
    sc_trace(mVcdFile, ap_condition_48, "ap_condition_48");
#endif

    }
}

Inverse::~Inverse() {
    if (mVcdFile) 
        sc_close_vcd_trace_file(mVcdFile);

    delete xf_division_lut_U;
}

void Inverse::thread_ap_clk_no_reset_() {
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_CS_fsm = ap_ST_fsm_pp0_stage0;
    } else {
        ap_CS_fsm = ap_NS_fsm.read();
    }
    if ( ap_rst.read() == ap_const_logic_1) {
        ap_enable_reg_pp0_iter1 = ap_const_logic_0;
    } else {
        if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
             esl_seteq<1,1,1>(ap_block_pp0_stage0_subdone.read(), ap_const_boolean_0))) {
            ap_enable_reg_pp0_iter1 = ap_start.read();
        }
    }
    if (esl_seteq<1,1,1>(ap_condition_48.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(icmp_ln242_fu_257_p2.read(), ap_const_lv1_1)) {
            ap_phi_reg_pp0_iter1_p_0_in_reg_221 = ap_const_lv16_FFFF;
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
            ap_phi_reg_pp0_iter1_p_0_in_reg_221 = ap_phi_reg_pp0_iter0_p_0_in_reg_221.read();
        }
    }
    if (esl_seteq<1,1,1>(ap_condition_48.read(), ap_const_boolean_1)) {
        if (esl_seteq<1,1,1>(icmp_ln242_fu_257_p2.read(), ap_const_lv1_1)) {
            ap_phi_reg_pp0_iter1_phi_ln311_reg_212 = N_read.read();
        } else if (esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1)) {
            ap_phi_reg_pp0_iter1_phi_ln311_reg_212 = ap_phi_reg_pp0_iter0_phi_ln311_reg_212.read();
        }
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1))) {
        icmp_ln242_reg_591 = icmp_ln242_fu_257_p2.read();
    }
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && esl_seteq<1,1,1>(icmp_ln242_fu_257_p2.read(), ap_const_lv1_0))) {
        sub_ln307_reg_639 = sub_ln307_fu_560_p2.read();
    }
}

void Inverse::thread_B_L_fu_501_p2() {
    B_L_fu_501_p2 = (!zext_ln299_1_fu_497_p1.read().is_01() || !zext_ln299_fu_493_p1.read().is_01())? sc_lv<5>(): (sc_biguint<5>(zext_ln299_1_fu_497_p1.read()) + sc_biguint<5>(zext_ln299_fu_493_p1.read()));
}

void Inverse::thread_add_ln302_fu_522_p2() {
    add_ln302_fu_522_p2 = (!B_L_fu_501_p2.read().is_01() || !ap_const_lv5_1F.is_01())? sc_lv<5>(): (sc_biguint<5>(B_L_fu_501_p2.read()) + sc_bigint<5>(ap_const_lv5_1F));
}

void Inverse::thread_add_ln307_fu_554_p2() {
    add_ln307_fu_554_p2 = (!M.read().is_01() || !ap_const_lv6_10.is_01())? sc_lv<6>(): (sc_biguint<6>(M.read()) + sc_biguint<6>(ap_const_lv6_10));
}

void Inverse::thread_ap_CS_fsm_pp0_stage0() {
    ap_CS_fsm_pp0_stage0 = ap_CS_fsm.read()[0];
}

void Inverse::thread_ap_block_pp0_stage0() {
    ap_block_pp0_stage0 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Inverse::thread_ap_block_pp0_stage0_11001() {
    ap_block_pp0_stage0_11001 = (esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()));
}

void Inverse::thread_ap_block_pp0_stage0_subdone() {
    ap_block_pp0_stage0_subdone = ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
  esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read())) || esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_0));
}

void Inverse::thread_ap_block_state1_pp0_stage0_iter0() {
    ap_block_state1_pp0_stage0_iter0 = esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read());
}

void Inverse::thread_ap_block_state2_pp0_stage0_iter1() {
    ap_block_state2_pp0_stage0_iter1 = !esl_seteq<1,1,1>(ap_const_boolean_1, ap_const_boolean_1);
}

void Inverse::thread_ap_condition_48() {
    ap_condition_48 = (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1));
}

void Inverse::thread_ap_done() {
    if (((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0.read(), ap_const_boolean_0)) || 
         (esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
          esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
          esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1) && 
          esl_seteq<1,1,1>(ap_const_logic_1, ap_enable_reg_pp0_iter1.read())))) {
        ap_done = ap_const_logic_1;
    } else {
        ap_done = ap_const_logic_0;
    }
}

void Inverse::thread_ap_enable_pp0() {
    ap_enable_pp0 = (ap_idle_pp0.read() ^ ap_const_logic_1);
}

void Inverse::thread_ap_enable_reg_pp0_iter0() {
    ap_enable_reg_pp0_iter0 = ap_start.read();
}

void Inverse::thread_ap_idle() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_idle_pp0.read()))) {
        ap_idle = ap_const_logic_1;
    } else {
        ap_idle = ap_const_logic_0;
    }
}

void Inverse::thread_ap_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter1.read()))) {
        ap_idle_pp0 = ap_const_logic_1;
    } else {
        ap_idle_pp0 = ap_const_logic_0;
    }
}

void Inverse::thread_ap_idle_pp0_0to0() {
    if (esl_seteq<1,1,1>(ap_const_logic_0, ap_enable_reg_pp0_iter0.read())) {
        ap_idle_pp0_0to0 = ap_const_logic_1;
    } else {
        ap_idle_pp0_0to0 = ap_const_logic_0;
    }
}

void Inverse::thread_ap_phi_mux_block_2_phi_fu_162_p26() {
    if (((esl_seteq<1,1,1>(icmp_ln242_fu_257_p2.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(icmp_ln246_fu_273_p2.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln259_fu_328_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln272_fu_383_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, tmp_65_fu_438_p3.read())) || 
         (esl_seteq<1,1,1>(icmp_ln242_fu_257_p2.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(icmp_ln246_fu_273_p2.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln259_fu_328_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln272_fu_383_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_65_fu_438_p3.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln292_fu_456_p2.read())) || 
         (esl_seteq<1,1,1>(icmp_ln242_fu_257_p2.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(icmp_ln246_fu_273_p2.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln259_fu_328_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln272_fu_383_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_65_fu_438_p3.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln292_fu_456_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln292_1_fu_472_p2.read())) || 
         (esl_seteq<1,1,1>(icmp_ln242_fu_257_p2.read(), ap_const_lv1_0) && 
          esl_seteq<1,1,1>(icmp_ln246_fu_273_p2.read(), ap_const_lv1_1) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln259_fu_328_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln272_fu_383_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_0, tmp_65_fu_438_p3.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln292_fu_456_p2.read()) && 
          esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln292_1_fu_472_p2.read())))) {
        ap_phi_mux_block_2_phi_fu_162_p26 = ap_const_lv4_C;
    } else if (((esl_seteq<1,1,1>(icmp_ln242_fu_257_p2.read(), ap_const_lv1_0) && 
                 esl_seteq<1,1,1>(icmp_ln246_fu_273_p2.read(), ap_const_lv1_1) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln259_fu_328_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln272_fu_383_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_66_fu_389_p3.read())) || 
                (esl_seteq<1,1,1>(icmp_ln242_fu_257_p2.read(), ap_const_lv1_0) && 
                 esl_seteq<1,1,1>(icmp_ln246_fu_273_p2.read(), ap_const_lv1_1) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln259_fu_328_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln272_fu_383_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, tmp_66_fu_389_p3.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln279_fu_407_p2.read())) || 
                (esl_seteq<1,1,1>(icmp_ln242_fu_257_p2.read(), ap_const_lv1_0) && 
                 esl_seteq<1,1,1>(icmp_ln246_fu_273_p2.read(), ap_const_lv1_1) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln259_fu_328_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln272_fu_383_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, tmp_66_fu_389_p3.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln279_fu_407_p2.read())))) {
        ap_phi_mux_block_2_phi_fu_162_p26 = ap_const_lv4_8;
    } else if (((esl_seteq<1,1,1>(icmp_ln242_fu_257_p2.read(), ap_const_lv1_0) && 
                 esl_seteq<1,1,1>(icmp_ln246_fu_273_p2.read(), ap_const_lv1_1) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln259_fu_328_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_63_fu_334_p3.read())) || 
                (esl_seteq<1,1,1>(icmp_ln242_fu_257_p2.read(), ap_const_lv1_0) && 
                 esl_seteq<1,1,1>(icmp_ln246_fu_273_p2.read(), ap_const_lv1_1) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln259_fu_328_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, tmp_63_fu_334_p3.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln266_fu_352_p2.read())) || 
                (esl_seteq<1,1,1>(icmp_ln242_fu_257_p2.read(), ap_const_lv1_0) && 
                 esl_seteq<1,1,1>(icmp_ln246_fu_273_p2.read(), ap_const_lv1_1) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln259_fu_328_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, tmp_63_fu_334_p3.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln266_fu_352_p2.read())))) {
        ap_phi_mux_block_2_phi_fu_162_p26 = ap_const_lv4_4;
    } else if (((esl_seteq<1,1,1>(icmp_ln242_fu_257_p2.read(), ap_const_lv1_0) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln246_fu_273_p2.read()) && 
                 esl_seteq<1,1,1>(tmp_62_fu_279_p3.read(), ap_const_lv1_1)) || 
                (esl_seteq<1,1,1>(icmp_ln242_fu_257_p2.read(), ap_const_lv1_0) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln246_fu_273_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, tmp_62_fu_279_p3.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln253_fu_297_p2.read())) || 
                (esl_seteq<1,1,1>(icmp_ln242_fu_257_p2.read(), ap_const_lv1_0) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln246_fu_273_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, tmp_62_fu_279_p3.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln253_fu_297_p2.read())))) {
        ap_phi_mux_block_2_phi_fu_162_p26 = ap_const_lv4_0;
    } else {
        ap_phi_mux_block_2_phi_fu_162_p26 = ap_phi_reg_pp0_iter0_block_2_reg_159.read();
    }
}

void Inverse::thread_ap_phi_mux_index_0_in_in_phi_fu_206_p4() {
    if (esl_seteq<1,1,1>(icmp_ln242_fu_257_p2.read(), ap_const_lv1_0)) {
        if (esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln301_fu_511_p2.read())) {
            ap_phi_mux_index_0_in_in_phi_fu_206_p4 = trunc_ln301_fu_517_p1.read();
        } else if (esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln301_fu_511_p2.read())) {
            ap_phi_mux_index_0_in_in_phi_fu_206_p4 = shl_ln302_fu_532_p2.read();
        } else {
            ap_phi_mux_index_0_in_in_phi_fu_206_p4 = ap_phi_reg_pp0_iter0_index_0_in_in_reg_203.read();
        }
    } else {
        ap_phi_mux_index_0_in_in_phi_fu_206_p4 = ap_phi_reg_pp0_iter0_index_0_in_in_reg_203.read();
    }
}

void Inverse::thread_ap_phi_mux_p_0_in_phi_fu_225_p4() {
    if (esl_seteq<1,1,1>(icmp_ln242_reg_591.read(), ap_const_lv1_0)) {
        ap_phi_mux_p_0_in_phi_fu_225_p4 = xf_division_lut_q0.read();
    } else {
        ap_phi_mux_p_0_in_phi_fu_225_p4 = ap_phi_reg_pp0_iter1_p_0_in_reg_221.read();
    }
}

void Inverse::thread_ap_phi_mux_phi_ln311_phi_fu_215_p4() {
    if (esl_seteq<1,1,1>(icmp_ln242_reg_591.read(), ap_const_lv1_0)) {
        ap_phi_mux_phi_ln311_phi_fu_215_p4 = zext_ln307_fu_566_p1.read();
    } else {
        ap_phi_mux_phi_ln311_phi_fu_215_p4 = ap_phi_reg_pp0_iter1_phi_ln311_reg_212.read();
    }
}

void Inverse::thread_ap_phi_mux_pos_6_phi_fu_122_p26() {
    if ((esl_seteq<1,1,1>(icmp_ln242_fu_257_p2.read(), ap_const_lv1_0) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln246_fu_273_p2.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_0, tmp_62_fu_279_p3.read()) && 
         esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln253_fu_297_p2.read()))) {
        ap_phi_mux_pos_6_phi_fu_122_p26 = select_ln253_fu_319_p3.read();
    } else if ((esl_seteq<1,1,1>(icmp_ln242_fu_257_p2.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(icmp_ln246_fu_273_p2.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln259_fu_328_p2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_63_fu_334_p3.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln266_fu_352_p2.read()))) {
        ap_phi_mux_pos_6_phi_fu_122_p26 = select_ln266_fu_374_p3.read();
    } else if ((esl_seteq<1,1,1>(icmp_ln242_fu_257_p2.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(icmp_ln246_fu_273_p2.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln259_fu_328_p2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln272_fu_383_p2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_66_fu_389_p3.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln279_fu_407_p2.read()))) {
        ap_phi_mux_pos_6_phi_fu_122_p26 = select_ln279_fu_429_p3.read();
    } else if ((esl_seteq<1,1,1>(icmp_ln242_fu_257_p2.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(icmp_ln246_fu_273_p2.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln259_fu_328_p2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln272_fu_383_p2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_65_fu_438_p3.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln292_fu_456_p2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln292_1_fu_472_p2.read()))) {
        ap_phi_mux_pos_6_phi_fu_122_p26 = select_ln292_fu_484_p3.read();
    } else if ((esl_seteq<1,1,1>(icmp_ln242_fu_257_p2.read(), ap_const_lv1_0) && 
                esl_seteq<1,1,1>(icmp_ln246_fu_273_p2.read(), ap_const_lv1_1) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln259_fu_328_p2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln272_fu_383_p2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, tmp_65_fu_438_p3.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln292_fu_456_p2.read()) && 
                esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln292_1_fu_472_p2.read()))) {
        ap_phi_mux_pos_6_phi_fu_122_p26 = ap_const_lv3_3;
    } else if (((esl_seteq<1,1,1>(icmp_ln242_fu_257_p2.read(), ap_const_lv1_0) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln246_fu_273_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, tmp_62_fu_279_p3.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln253_fu_297_p2.read())) || 
                (esl_seteq<1,1,1>(icmp_ln242_fu_257_p2.read(), ap_const_lv1_0) && 
                 esl_seteq<1,1,1>(icmp_ln246_fu_273_p2.read(), ap_const_lv1_1) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln259_fu_328_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, tmp_63_fu_334_p3.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln266_fu_352_p2.read())) || 
                (esl_seteq<1,1,1>(icmp_ln242_fu_257_p2.read(), ap_const_lv1_0) && 
                 esl_seteq<1,1,1>(icmp_ln246_fu_273_p2.read(), ap_const_lv1_1) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln259_fu_328_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln272_fu_383_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, tmp_66_fu_389_p3.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln279_fu_407_p2.read())) || 
                (esl_seteq<1,1,1>(icmp_ln242_fu_257_p2.read(), ap_const_lv1_0) && 
                 esl_seteq<1,1,1>(icmp_ln246_fu_273_p2.read(), ap_const_lv1_1) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln259_fu_328_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln272_fu_383_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, tmp_65_fu_438_p3.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln292_fu_456_p2.read())))) {
        ap_phi_mux_pos_6_phi_fu_122_p26 = ap_const_lv3_2;
    } else if (((esl_seteq<1,1,1>(icmp_ln242_fu_257_p2.read(), ap_const_lv1_0) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln246_fu_273_p2.read()) && 
                 esl_seteq<1,1,1>(tmp_62_fu_279_p3.read(), ap_const_lv1_1)) || 
                (esl_seteq<1,1,1>(icmp_ln242_fu_257_p2.read(), ap_const_lv1_0) && 
                 esl_seteq<1,1,1>(icmp_ln246_fu_273_p2.read(), ap_const_lv1_1) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln259_fu_328_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_63_fu_334_p3.read())) || 
                (esl_seteq<1,1,1>(icmp_ln242_fu_257_p2.read(), ap_const_lv1_0) && 
                 esl_seteq<1,1,1>(icmp_ln246_fu_273_p2.read(), ap_const_lv1_1) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln259_fu_328_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_0, icmp_ln272_fu_383_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_66_fu_389_p3.read())) || 
                (esl_seteq<1,1,1>(icmp_ln242_fu_257_p2.read(), ap_const_lv1_0) && 
                 esl_seteq<1,1,1>(icmp_ln246_fu_273_p2.read(), ap_const_lv1_1) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln259_fu_328_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, icmp_ln272_fu_383_p2.read()) && 
                 esl_seteq<1,1,1>(ap_const_lv1_1, tmp_65_fu_438_p3.read())))) {
        ap_phi_mux_pos_6_phi_fu_122_p26 = ap_const_lv3_1;
    } else {
        ap_phi_mux_pos_6_phi_fu_122_p26 = ap_phi_reg_pp0_iter0_pos_6_reg_119.read();
    }
}

void Inverse::thread_ap_phi_reg_pp0_iter0_block_2_reg_159() {
    ap_phi_reg_pp0_iter0_block_2_reg_159 =  (sc_lv<4>) ("XXXX");
}

void Inverse::thread_ap_phi_reg_pp0_iter0_index_0_in_in_reg_203() {
    ap_phi_reg_pp0_iter0_index_0_in_in_reg_203 =  (sc_lv<15>) ("XXXXXXXXXXXXXXX");
}

void Inverse::thread_ap_phi_reg_pp0_iter0_p_0_in_reg_221() {
    ap_phi_reg_pp0_iter0_p_0_in_reg_221 =  (sc_lv<16>) ("XXXXXXXXXXXXXXXX");
}

void Inverse::thread_ap_phi_reg_pp0_iter0_phi_ln311_reg_212() {
    ap_phi_reg_pp0_iter0_phi_ln311_reg_212 =  (sc_lv<8>) ("XXXXXXXX");
}

void Inverse::thread_ap_phi_reg_pp0_iter0_pos_6_reg_119() {
    ap_phi_reg_pp0_iter0_pos_6_reg_119 =  (sc_lv<3>) ("XXX");
}

void Inverse::thread_ap_ready() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1))) {
        ap_ready = ap_const_logic_1;
    } else {
        ap_ready = ap_const_logic_0;
    }
}

void Inverse::thread_ap_reset_idle_pp0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_0, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_idle_pp0_0to0.read()))) {
        ap_reset_idle_pp0 = ap_const_logic_1;
    } else {
        ap_reset_idle_pp0 = ap_const_logic_0;
    }
}

void Inverse::thread_ap_return_0() {
    ap_return_0 = val_fu_570_p1.read();
}

void Inverse::thread_ap_return_1() {
    ap_return_1 = ap_phi_mux_phi_ln311_phi_fu_215_p4.read();
}

void Inverse::thread_icmp_ln242_fu_257_p2() {
    icmp_ln242_fu_257_p2 = (!x.read().is_01() || !ap_const_lv16_0.is_01())? sc_lv<1>(): sc_lv<1>(x.read() == ap_const_lv16_0);
}

void Inverse::thread_icmp_ln246_fu_273_p2() {
    icmp_ln246_fu_273_p2 = (!tmp_fu_263_p4.read().is_01() || !ap_const_lv4_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_fu_263_p4.read() == ap_const_lv4_0);
}

void Inverse::thread_icmp_ln253_1_fu_313_p2() {
    icmp_ln253_1_fu_313_p2 = (!tmp_68_fu_303_p4.read().is_01() || !ap_const_lv3_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_68_fu_303_p4.read() == ap_const_lv3_0);
}

void Inverse::thread_icmp_ln253_fu_297_p2() {
    icmp_ln253_fu_297_p2 = (!tmp_64_fu_287_p4.read().is_01() || !ap_const_lv2_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_64_fu_287_p4.read() == ap_const_lv2_0);
}

void Inverse::thread_icmp_ln259_fu_328_p2() {
    icmp_ln259_fu_328_p2 = (!tmpx_fu_233_p4.read().is_01() || !ap_const_lv4_0.is_01())? sc_lv<1>(): sc_lv<1>(tmpx_fu_233_p4.read() == ap_const_lv4_0);
}

void Inverse::thread_icmp_ln266_1_fu_368_p2() {
    icmp_ln266_1_fu_368_p2 = (!tmp_71_fu_358_p4.read().is_01() || !ap_const_lv3_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_71_fu_358_p4.read() == ap_const_lv3_0);
}

void Inverse::thread_icmp_ln266_fu_352_p2() {
    icmp_ln266_fu_352_p2 = (!tmp_67_fu_342_p4.read().is_01() || !ap_const_lv2_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_67_fu_342_p4.read() == ap_const_lv2_0);
}

void Inverse::thread_icmp_ln272_fu_383_p2() {
    icmp_ln272_fu_383_p2 = (!tmpx_1_fu_243_p4.read().is_01() || !ap_const_lv4_0.is_01())? sc_lv<1>(): sc_lv<1>(tmpx_1_fu_243_p4.read() == ap_const_lv4_0);
}

void Inverse::thread_icmp_ln279_1_fu_423_p2() {
    icmp_ln279_1_fu_423_p2 = (!tmp_73_fu_413_p4.read().is_01() || !ap_const_lv3_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_73_fu_413_p4.read() == ap_const_lv3_0);
}

void Inverse::thread_icmp_ln279_fu_407_p2() {
    icmp_ln279_fu_407_p2 = (!tmp_70_fu_397_p4.read().is_01() || !ap_const_lv2_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_70_fu_397_p4.read() == ap_const_lv2_0);
}

void Inverse::thread_icmp_ln292_1_fu_472_p2() {
    icmp_ln292_1_fu_472_p2 = (!tmp_72_fu_462_p4.read().is_01() || !ap_const_lv3_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_72_fu_462_p4.read() == ap_const_lv3_0);
}

void Inverse::thread_icmp_ln292_2_fu_478_p2() {
    icmp_ln292_2_fu_478_p2 = (!tmpx_2_fu_253_p1.read().is_01() || !ap_const_lv4_0.is_01())? sc_lv<1>(): sc_lv<1>(tmpx_2_fu_253_p1.read() == ap_const_lv4_0);
}

void Inverse::thread_icmp_ln292_fu_456_p2() {
    icmp_ln292_fu_456_p2 = (!tmp_69_fu_446_p4.read().is_01() || !ap_const_lv2_0.is_01())? sc_lv<1>(): sc_lv<1>(tmp_69_fu_446_p4.read() == ap_const_lv2_0);
}

void Inverse::thread_icmp_ln301_fu_511_p2() {
    icmp_ln301_fu_511_p2 = (!B_L_fu_501_p2.read().is_01() || !ap_const_lv5_0.is_01())? sc_lv<1>(): sc_lv<1>(B_L_fu_501_p2.read() == ap_const_lv5_0);
}

void Inverse::thread_index_fu_539_p4() {
    index_fu_539_p4 = ap_phi_mux_index_0_in_in_phi_fu_206_p4.read().range(14, 4);
}

void Inverse::thread_select_ln253_fu_319_p3() {
    select_ln253_fu_319_p3 = (!icmp_ln253_1_fu_313_p2.read()[0].is_01())? sc_lv<3>(): ((icmp_ln253_1_fu_313_p2.read()[0].to_bool())? ap_const_lv3_4: ap_const_lv3_3);
}

void Inverse::thread_select_ln266_fu_374_p3() {
    select_ln266_fu_374_p3 = (!icmp_ln266_1_fu_368_p2.read()[0].is_01())? sc_lv<3>(): ((icmp_ln266_1_fu_368_p2.read()[0].to_bool())? ap_const_lv3_4: ap_const_lv3_3);
}

void Inverse::thread_select_ln279_fu_429_p3() {
    select_ln279_fu_429_p3 = (!icmp_ln279_1_fu_423_p2.read()[0].is_01())? sc_lv<3>(): ((icmp_ln279_1_fu_423_p2.read()[0].to_bool())? ap_const_lv3_4: ap_const_lv3_3);
}

void Inverse::thread_select_ln292_fu_484_p3() {
    select_ln292_fu_484_p3 = (!icmp_ln292_2_fu_478_p2.read()[0].is_01())? sc_lv<3>(): ((icmp_ln292_2_fu_478_p2.read()[0].to_bool())? ap_const_lv3_0: ap_const_lv3_4);
}

void Inverse::thread_shl_ln302_fu_532_p2() {
    shl_ln302_fu_532_p2 = (!zext_ln302_fu_528_p1.read().is_01())? sc_lv<15>(): trunc_ln301_fu_517_p1.read() << (unsigned short)zext_ln302_fu_528_p1.read().to_uint();
}

void Inverse::thread_sub_ln307_fu_560_p2() {
    sub_ln307_fu_560_p2 = (!add_ln307_fu_554_p2.read().is_01() || !zext_ln299_2_fu_507_p1.read().is_01())? sc_lv<6>(): (sc_biguint<6>(add_ln307_fu_554_p2.read()) - sc_biguint<6>(zext_ln299_2_fu_507_p1.read()));
}

void Inverse::thread_tmp_62_fu_279_p3() {
    tmp_62_fu_279_p3 = x.read().range(15, 15);
}

void Inverse::thread_tmp_63_fu_334_p3() {
    tmp_63_fu_334_p3 = x.read().range(11, 11);
}

void Inverse::thread_tmp_64_fu_287_p4() {
    tmp_64_fu_287_p4 = x.read().range(15, 14);
}

void Inverse::thread_tmp_65_fu_438_p3() {
    tmp_65_fu_438_p3 = x.read().range(3, 3);
}

void Inverse::thread_tmp_66_fu_389_p3() {
    tmp_66_fu_389_p3 = x.read().range(7, 7);
}

void Inverse::thread_tmp_67_fu_342_p4() {
    tmp_67_fu_342_p4 = x.read().range(11, 10);
}

void Inverse::thread_tmp_68_fu_303_p4() {
    tmp_68_fu_303_p4 = x.read().range(15, 13);
}

void Inverse::thread_tmp_69_fu_446_p4() {
    tmp_69_fu_446_p4 = x.read().range(3, 2);
}

void Inverse::thread_tmp_70_fu_397_p4() {
    tmp_70_fu_397_p4 = x.read().range(7, 6);
}

void Inverse::thread_tmp_71_fu_358_p4() {
    tmp_71_fu_358_p4 = x.read().range(11, 9);
}

void Inverse::thread_tmp_72_fu_462_p4() {
    tmp_72_fu_462_p4 = x.read().range(3, 1);
}

void Inverse::thread_tmp_73_fu_413_p4() {
    tmp_73_fu_413_p4 = x.read().range(7, 5);
}

void Inverse::thread_tmp_fu_263_p4() {
    tmp_fu_263_p4 = x.read().range(15, 12);
}

void Inverse::thread_tmpx_1_fu_243_p4() {
    tmpx_1_fu_243_p4 = x.read().range(7, 4);
}

void Inverse::thread_tmpx_2_fu_253_p1() {
    tmpx_2_fu_253_p1 = x.read().range(4-1, 0);
}

void Inverse::thread_tmpx_fu_233_p4() {
    tmpx_fu_233_p4 = x.read().range(11, 8);
}

void Inverse::thread_trunc_ln301_fu_517_p1() {
    trunc_ln301_fu_517_p1 = x.read().range(15-1, 0);
}

void Inverse::thread_val_fu_570_p1() {
    val_fu_570_p1 = esl_zext<32,16>(ap_phi_mux_p_0_in_phi_fu_225_p4.read());
}

void Inverse::thread_xf_division_lut_address0() {
    xf_division_lut_address0 =  (sc_lv<12>) (zext_ln306_fu_549_p1.read());
}

void Inverse::thread_xf_division_lut_ce0() {
    if ((esl_seteq<1,1,1>(ap_const_logic_1, ap_CS_fsm_pp0_stage0.read()) && 
         esl_seteq<1,1,1>(ap_const_logic_1, ap_start.read()) && 
         esl_seteq<1,1,1>(ap_block_pp0_stage0_11001.read(), ap_const_boolean_0) && 
         esl_seteq<1,1,1>(ap_ce.read(), ap_const_logic_1))) {
        xf_division_lut_ce0 = ap_const_logic_1;
    } else {
        xf_division_lut_ce0 = ap_const_logic_0;
    }
}

void Inverse::thread_zext_ln299_1_fu_497_p1() {
    zext_ln299_1_fu_497_p1 = esl_zext<5,4>(ap_phi_mux_block_2_phi_fu_162_p26.read());
}

void Inverse::thread_zext_ln299_2_fu_507_p1() {
    zext_ln299_2_fu_507_p1 = esl_zext<6,5>(B_L_fu_501_p2.read());
}

void Inverse::thread_zext_ln299_fu_493_p1() {
    zext_ln299_fu_493_p1 = esl_zext<5,3>(ap_phi_mux_pos_6_phi_fu_122_p26.read());
}

void Inverse::thread_zext_ln302_fu_528_p1() {
    zext_ln302_fu_528_p1 = esl_zext<15,5>(add_ln302_fu_522_p2.read());
}

void Inverse::thread_zext_ln306_fu_549_p1() {
    zext_ln306_fu_549_p1 = esl_zext<64,11>(index_fu_539_p4.read());
}

void Inverse::thread_zext_ln307_fu_566_p1() {
    zext_ln307_fu_566_p1 = esl_zext<8,6>(sub_ln307_reg_639.read());
}

void Inverse::thread_ap_NS_fsm() {
    switch (ap_CS_fsm.read().to_uint64()) {
        case 1 : 
            ap_NS_fsm = ap_ST_fsm_pp0_stage0;
break;
        default : 
            ap_NS_fsm = "X";
            break;
    }
}

}

