-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2019.2.1
-- Copyright (C) 1986-2019 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity Inverse is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    ap_ce : IN STD_LOGIC;
    x : IN STD_LOGIC_VECTOR (15 downto 0);
    M : IN STD_LOGIC_VECTOR (5 downto 0);
    N_read : IN STD_LOGIC_VECTOR (7 downto 0);
    ap_return_0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    ap_return_1 : OUT STD_LOGIC_VECTOR (7 downto 0) );
end;


architecture behav of Inverse is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv4_4 : STD_LOGIC_VECTOR (3 downto 0) := "0100";
    constant ap_const_lv4_8 : STD_LOGIC_VECTOR (3 downto 0) := "1000";
    constant ap_const_lv4_C : STD_LOGIC_VECTOR (3 downto 0) := "1100";
    constant ap_const_lv16_FFFF : STD_LOGIC_VECTOR (15 downto 0) := "1111111111111111";
    constant ap_const_lv32_8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001000";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_lv16_0 : STD_LOGIC_VECTOR (15 downto 0) := "0000000000000000";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_D : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001101";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv3_4 : STD_LOGIC_VECTOR (2 downto 0) := "100";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_9 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001001";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv5_1F : STD_LOGIC_VECTOR (4 downto 0) := "11111";
    constant ap_const_lv6_10 : STD_LOGIC_VECTOR (5 downto 0) := "010000";

    signal ap_CS_fsm : STD_LOGIC_VECTOR (0 downto 0) := "1";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal xf_division_lut_address0 : STD_LOGIC_VECTOR (11 downto 0);
    signal xf_division_lut_ce0 : STD_LOGIC;
    signal xf_division_lut_q0 : STD_LOGIC_VECTOR (15 downto 0);
    signal icmp_ln242_fu_257_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln242_reg_591 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln307_fu_560_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal sub_ln307_reg_639 : STD_LOGIC_VECTOR (5 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_phi_mux_pos_6_phi_fu_122_p26 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_phi_reg_pp0_iter0_pos_6_reg_119 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln246_fu_273_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_62_fu_279_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln253_fu_297_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln259_fu_328_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_63_fu_334_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln266_fu_352_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln272_fu_383_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_66_fu_389_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln279_fu_407_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_65_fu_438_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln292_fu_456_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln292_1_fu_472_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln292_fu_484_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln279_fu_429_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln266_fu_374_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal select_ln253_fu_319_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal ap_phi_mux_block_2_phi_fu_162_p26 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_phi_reg_pp0_iter0_block_2_reg_159 : STD_LOGIC_VECTOR (3 downto 0);
    signal ap_phi_mux_index_0_in_in_phi_fu_206_p4 : STD_LOGIC_VECTOR (14 downto 0);
    signal shl_ln302_fu_532_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_phi_reg_pp0_iter0_index_0_in_in_reg_203 : STD_LOGIC_VECTOR (14 downto 0);
    signal icmp_ln301_fu_511_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln301_fu_517_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_phi_mux_phi_ln311_phi_fu_215_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal zext_ln307_fu_566_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter1_phi_ln311_reg_212 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_reg_pp0_iter0_phi_ln311_reg_212 : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_phi_mux_p_0_in_phi_fu_225_p4 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter1_p_0_in_reg_221 : STD_LOGIC_VECTOR (15 downto 0);
    signal ap_phi_reg_pp0_iter0_p_0_in_reg_221 : STD_LOGIC_VECTOR (15 downto 0);
    signal zext_ln306_fu_549_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal tmp_fu_263_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_64_fu_287_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_68_fu_303_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln253_1_fu_313_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmpx_fu_233_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_67_fu_342_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_71_fu_358_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln266_1_fu_368_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmpx_1_fu_243_p4 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_70_fu_397_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_73_fu_413_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal icmp_ln279_1_fu_423_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_69_fu_446_p4 : STD_LOGIC_VECTOR (1 downto 0);
    signal tmp_72_fu_462_p4 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmpx_2_fu_253_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal icmp_ln292_2_fu_478_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal zext_ln299_1_fu_497_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln299_fu_493_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal B_L_fu_501_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal add_ln302_fu_522_p2 : STD_LOGIC_VECTOR (4 downto 0);
    signal zext_ln302_fu_528_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal index_fu_539_p4 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln307_fu_554_p2 : STD_LOGIC_VECTOR (5 downto 0);
    signal zext_ln299_2_fu_507_p1 : STD_LOGIC_VECTOR (5 downto 0);
    signal val_fu_570_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_idle_pp0_0to0 : STD_LOGIC;
    signal ap_reset_idle_pp0 : STD_LOGIC;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_condition_48 : BOOLEAN;

    component Inverse_xf_divisiwdI IS
    generic (
        DataWidth : INTEGER;
        AddressRange : INTEGER;
        AddressWidth : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        address0 : IN STD_LOGIC_VECTOR (11 downto 0);
        ce0 : IN STD_LOGIC;
        q0 : OUT STD_LOGIC_VECTOR (15 downto 0) );
    end component;



begin
    xf_division_lut_U : component Inverse_xf_divisiwdI
    generic map (
        DataWidth => 16,
        AddressRange => 2049,
        AddressWidth => 12)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        address0 => xf_division_lut_address0,
        ce0 => xf_division_lut_ce0,
        q0 => xf_division_lut_q0);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_enable_reg_pp0_iter1 <= ap_start;
                end if; 
            end if;
        end if;
    end process;


    ap_phi_reg_pp0_iter1_p_0_in_reg_221_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_48)) then
                if ((icmp_ln242_fu_257_p2 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp0_iter1_p_0_in_reg_221 <= ap_const_lv16_FFFF;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_p_0_in_reg_221 <= ap_phi_reg_pp0_iter0_p_0_in_reg_221;
                end if;
            end if; 
        end if;
    end process;

    ap_phi_reg_pp0_iter1_phi_ln311_reg_212_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_boolean_1 = ap_condition_48)) then
                if ((icmp_ln242_fu_257_p2 = ap_const_lv1_1)) then 
                    ap_phi_reg_pp0_iter1_phi_ln311_reg_212 <= N_read;
                elsif ((ap_const_boolean_1 = ap_const_boolean_1)) then 
                    ap_phi_reg_pp0_iter1_phi_ln311_reg_212 <= ap_phi_reg_pp0_iter0_phi_ln311_reg_212;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln242_reg_591 <= icmp_ln242_fu_257_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln242_fu_257_p2 = ap_const_lv1_0) and (ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                sub_ln307_reg_639 <= sub_ln307_fu_560_p2;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage0_subdone, ap_reset_idle_pp0)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
            when others =>  
                ap_NS_fsm <= "X";
        end case;
    end process;
    B_L_fu_501_p2 <= std_logic_vector(unsigned(zext_ln299_1_fu_497_p1) + unsigned(zext_ln299_fu_493_p1));
    add_ln302_fu_522_p2 <= std_logic_vector(unsigned(B_L_fu_501_p2) + unsigned(ap_const_lv5_1F));
    add_ln307_fu_554_p2 <= std_logic_vector(unsigned(M) + unsigned(ap_const_lv6_10));
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_block_pp0_stage0_11001_assign_proc : process(ap_start)
    begin
                ap_block_pp0_stage0_11001 <= ((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1));
    end process;


    ap_block_pp0_stage0_subdone_assign_proc : process(ap_start, ap_ce)
    begin
                ap_block_pp0_stage0_subdone <= ((ap_const_logic_0 = ap_ce) or ((ap_start = ap_const_logic_0) and (ap_start = ap_const_logic_1)));
    end process;


    ap_block_state1_pp0_stage0_iter0_assign_proc : process(ap_start)
    begin
                ap_block_state1_pp0_stage0_iter0 <= (ap_start = ap_const_logic_0);
    end process;

        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_48_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_ce)
    begin
                ap_condition_48 <= ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0));
    end process;


    ap_done_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0, ap_enable_reg_pp0_iter1, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if ((((ap_start = ap_const_logic_0) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);
    ap_enable_reg_pp0_iter0 <= ap_start;

    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_idle_pp0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1)
    begin
        if (((ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to0_assign_proc : process(ap_enable_reg_pp0_iter0)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_0)) then 
            ap_idle_pp0_0to0 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_phi_mux_block_2_phi_fu_162_p26_assign_proc : process(icmp_ln242_fu_257_p2, icmp_ln246_fu_273_p2, tmp_62_fu_279_p3, icmp_ln253_fu_297_p2, icmp_ln259_fu_328_p2, tmp_63_fu_334_p3, icmp_ln266_fu_352_p2, icmp_ln272_fu_383_p2, tmp_66_fu_389_p3, icmp_ln279_fu_407_p2, tmp_65_fu_438_p3, icmp_ln292_fu_456_p2, icmp_ln292_1_fu_472_p2, ap_phi_reg_pp0_iter0_block_2_reg_159)
    begin
        if ((((icmp_ln292_1_fu_472_p2 = ap_const_lv1_1) and (icmp_ln292_fu_456_p2 = ap_const_lv1_1) and (icmp_ln272_fu_383_p2 = ap_const_lv1_1) and (icmp_ln259_fu_328_p2 = ap_const_lv1_1) and (icmp_ln246_fu_273_p2 = ap_const_lv1_1) and (tmp_65_fu_438_p3 = ap_const_lv1_0) and (icmp_ln242_fu_257_p2 = ap_const_lv1_0)) or ((icmp_ln292_fu_456_p2 = ap_const_lv1_1) and (icmp_ln272_fu_383_p2 = ap_const_lv1_1) and (icmp_ln259_fu_328_p2 = ap_const_lv1_1) and (icmp_ln246_fu_273_p2 = ap_const_lv1_1) and (icmp_ln292_1_fu_472_p2 = ap_const_lv1_0) and (tmp_65_fu_438_p3 = ap_const_lv1_0) and (icmp_ln242_fu_257_p2 = ap_const_lv1_0)) or ((icmp_ln272_fu_383_p2 = ap_const_lv1_1) and (icmp_ln259_fu_328_p2 = ap_const_lv1_1) and (icmp_ln246_fu_273_p2 = ap_const_lv1_1) and (icmp_ln292_fu_456_p2 = ap_const_lv1_0) and (tmp_65_fu_438_p3 = ap_const_lv1_0) and (icmp_ln242_fu_257_p2 = ap_const_lv1_0)) or ((tmp_65_fu_438_p3 = ap_const_lv1_1) and (icmp_ln272_fu_383_p2 = ap_const_lv1_1) and (icmp_ln259_fu_328_p2 = ap_const_lv1_1) and (icmp_ln246_fu_273_p2 = ap_const_lv1_1) and (icmp_ln242_fu_257_p2 = ap_const_lv1_0)))) then 
            ap_phi_mux_block_2_phi_fu_162_p26 <= ap_const_lv4_C;
        elsif ((((icmp_ln279_fu_407_p2 = ap_const_lv1_1) and (icmp_ln259_fu_328_p2 = ap_const_lv1_1) and (icmp_ln246_fu_273_p2 = ap_const_lv1_1) and (tmp_66_fu_389_p3 = ap_const_lv1_0) and (icmp_ln272_fu_383_p2 = ap_const_lv1_0) and (icmp_ln242_fu_257_p2 = ap_const_lv1_0)) or ((icmp_ln259_fu_328_p2 = ap_const_lv1_1) and (icmp_ln246_fu_273_p2 = ap_const_lv1_1) and (icmp_ln279_fu_407_p2 = ap_const_lv1_0) and (tmp_66_fu_389_p3 = ap_const_lv1_0) and (icmp_ln272_fu_383_p2 = ap_const_lv1_0) and (icmp_ln242_fu_257_p2 = ap_const_lv1_0)) or ((tmp_66_fu_389_p3 = ap_const_lv1_1) and (icmp_ln259_fu_328_p2 = ap_const_lv1_1) and (icmp_ln246_fu_273_p2 = ap_const_lv1_1) and (icmp_ln272_fu_383_p2 = ap_const_lv1_0) and (icmp_ln242_fu_257_p2 = ap_const_lv1_0)))) then 
            ap_phi_mux_block_2_phi_fu_162_p26 <= ap_const_lv4_8;
        elsif ((((icmp_ln266_fu_352_p2 = ap_const_lv1_1) and (icmp_ln246_fu_273_p2 = ap_const_lv1_1) and (tmp_63_fu_334_p3 = ap_const_lv1_0) and (icmp_ln259_fu_328_p2 = ap_const_lv1_0) and (icmp_ln242_fu_257_p2 = ap_const_lv1_0)) or ((icmp_ln246_fu_273_p2 = ap_const_lv1_1) and (icmp_ln266_fu_352_p2 = ap_const_lv1_0) and (tmp_63_fu_334_p3 = ap_const_lv1_0) and (icmp_ln259_fu_328_p2 = ap_const_lv1_0) and (icmp_ln242_fu_257_p2 = ap_const_lv1_0)) or ((tmp_63_fu_334_p3 = ap_const_lv1_1) and (icmp_ln246_fu_273_p2 = ap_const_lv1_1) and (icmp_ln259_fu_328_p2 = ap_const_lv1_0) and (icmp_ln242_fu_257_p2 = ap_const_lv1_0)))) then 
            ap_phi_mux_block_2_phi_fu_162_p26 <= ap_const_lv4_4;
        elsif ((((tmp_62_fu_279_p3 = ap_const_lv1_1) and (icmp_ln246_fu_273_p2 = ap_const_lv1_0) and (icmp_ln242_fu_257_p2 = ap_const_lv1_0)) or ((icmp_ln253_fu_297_p2 = ap_const_lv1_1) and (tmp_62_fu_279_p3 = ap_const_lv1_0) and (icmp_ln246_fu_273_p2 = ap_const_lv1_0) and (icmp_ln242_fu_257_p2 = ap_const_lv1_0)) or ((tmp_62_fu_279_p3 = ap_const_lv1_0) and (icmp_ln246_fu_273_p2 = ap_const_lv1_0) and (icmp_ln253_fu_297_p2 = ap_const_lv1_0) and (icmp_ln242_fu_257_p2 = ap_const_lv1_0)))) then 
            ap_phi_mux_block_2_phi_fu_162_p26 <= ap_const_lv4_0;
        else 
            ap_phi_mux_block_2_phi_fu_162_p26 <= ap_phi_reg_pp0_iter0_block_2_reg_159;
        end if; 
    end process;


    ap_phi_mux_index_0_in_in_phi_fu_206_p4_assign_proc : process(icmp_ln242_fu_257_p2, shl_ln302_fu_532_p2, ap_phi_reg_pp0_iter0_index_0_in_in_reg_203, icmp_ln301_fu_511_p2, trunc_ln301_fu_517_p1)
    begin
        if ((icmp_ln242_fu_257_p2 = ap_const_lv1_0)) then
            if ((icmp_ln301_fu_511_p2 = ap_const_lv1_1)) then 
                ap_phi_mux_index_0_in_in_phi_fu_206_p4 <= trunc_ln301_fu_517_p1;
            elsif ((icmp_ln301_fu_511_p2 = ap_const_lv1_0)) then 
                ap_phi_mux_index_0_in_in_phi_fu_206_p4 <= shl_ln302_fu_532_p2;
            else 
                ap_phi_mux_index_0_in_in_phi_fu_206_p4 <= ap_phi_reg_pp0_iter0_index_0_in_in_reg_203;
            end if;
        else 
            ap_phi_mux_index_0_in_in_phi_fu_206_p4 <= ap_phi_reg_pp0_iter0_index_0_in_in_reg_203;
        end if; 
    end process;


    ap_phi_mux_p_0_in_phi_fu_225_p4_assign_proc : process(xf_division_lut_q0, icmp_ln242_reg_591, ap_phi_reg_pp0_iter1_p_0_in_reg_221)
    begin
        if ((icmp_ln242_reg_591 = ap_const_lv1_0)) then 
            ap_phi_mux_p_0_in_phi_fu_225_p4 <= xf_division_lut_q0;
        else 
            ap_phi_mux_p_0_in_phi_fu_225_p4 <= ap_phi_reg_pp0_iter1_p_0_in_reg_221;
        end if; 
    end process;


    ap_phi_mux_phi_ln311_phi_fu_215_p4_assign_proc : process(icmp_ln242_reg_591, zext_ln307_fu_566_p1, ap_phi_reg_pp0_iter1_phi_ln311_reg_212)
    begin
        if ((icmp_ln242_reg_591 = ap_const_lv1_0)) then 
            ap_phi_mux_phi_ln311_phi_fu_215_p4 <= zext_ln307_fu_566_p1;
        else 
            ap_phi_mux_phi_ln311_phi_fu_215_p4 <= ap_phi_reg_pp0_iter1_phi_ln311_reg_212;
        end if; 
    end process;


    ap_phi_mux_pos_6_phi_fu_122_p26_assign_proc : process(icmp_ln242_fu_257_p2, ap_phi_reg_pp0_iter0_pos_6_reg_119, icmp_ln246_fu_273_p2, tmp_62_fu_279_p3, icmp_ln253_fu_297_p2, icmp_ln259_fu_328_p2, tmp_63_fu_334_p3, icmp_ln266_fu_352_p2, icmp_ln272_fu_383_p2, tmp_66_fu_389_p3, icmp_ln279_fu_407_p2, tmp_65_fu_438_p3, icmp_ln292_fu_456_p2, icmp_ln292_1_fu_472_p2, select_ln292_fu_484_p3, select_ln279_fu_429_p3, select_ln266_fu_374_p3, select_ln253_fu_319_p3)
    begin
        if (((icmp_ln253_fu_297_p2 = ap_const_lv1_1) and (tmp_62_fu_279_p3 = ap_const_lv1_0) and (icmp_ln246_fu_273_p2 = ap_const_lv1_0) and (icmp_ln242_fu_257_p2 = ap_const_lv1_0))) then 
            ap_phi_mux_pos_6_phi_fu_122_p26 <= select_ln253_fu_319_p3;
        elsif (((icmp_ln266_fu_352_p2 = ap_const_lv1_1) and (icmp_ln246_fu_273_p2 = ap_const_lv1_1) and (tmp_63_fu_334_p3 = ap_const_lv1_0) and (icmp_ln259_fu_328_p2 = ap_const_lv1_0) and (icmp_ln242_fu_257_p2 = ap_const_lv1_0))) then 
            ap_phi_mux_pos_6_phi_fu_122_p26 <= select_ln266_fu_374_p3;
        elsif (((icmp_ln279_fu_407_p2 = ap_const_lv1_1) and (icmp_ln259_fu_328_p2 = ap_const_lv1_1) and (icmp_ln246_fu_273_p2 = ap_const_lv1_1) and (tmp_66_fu_389_p3 = ap_const_lv1_0) and (icmp_ln272_fu_383_p2 = ap_const_lv1_0) and (icmp_ln242_fu_257_p2 = ap_const_lv1_0))) then 
            ap_phi_mux_pos_6_phi_fu_122_p26 <= select_ln279_fu_429_p3;
        elsif (((icmp_ln292_1_fu_472_p2 = ap_const_lv1_1) and (icmp_ln292_fu_456_p2 = ap_const_lv1_1) and (icmp_ln272_fu_383_p2 = ap_const_lv1_1) and (icmp_ln259_fu_328_p2 = ap_const_lv1_1) and (icmp_ln246_fu_273_p2 = ap_const_lv1_1) and (tmp_65_fu_438_p3 = ap_const_lv1_0) and (icmp_ln242_fu_257_p2 = ap_const_lv1_0))) then 
            ap_phi_mux_pos_6_phi_fu_122_p26 <= select_ln292_fu_484_p3;
        elsif (((icmp_ln292_fu_456_p2 = ap_const_lv1_1) and (icmp_ln272_fu_383_p2 = ap_const_lv1_1) and (icmp_ln259_fu_328_p2 = ap_const_lv1_1) and (icmp_ln246_fu_273_p2 = ap_const_lv1_1) and (icmp_ln292_1_fu_472_p2 = ap_const_lv1_0) and (tmp_65_fu_438_p3 = ap_const_lv1_0) and (icmp_ln242_fu_257_p2 = ap_const_lv1_0))) then 
            ap_phi_mux_pos_6_phi_fu_122_p26 <= ap_const_lv3_3;
        elsif ((((tmp_62_fu_279_p3 = ap_const_lv1_0) and (icmp_ln246_fu_273_p2 = ap_const_lv1_0) and (icmp_ln253_fu_297_p2 = ap_const_lv1_0) and (icmp_ln242_fu_257_p2 = ap_const_lv1_0)) or ((icmp_ln272_fu_383_p2 = ap_const_lv1_1) and (icmp_ln259_fu_328_p2 = ap_const_lv1_1) and (icmp_ln246_fu_273_p2 = ap_const_lv1_1) and (icmp_ln292_fu_456_p2 = ap_const_lv1_0) and (tmp_65_fu_438_p3 = ap_const_lv1_0) and (icmp_ln242_fu_257_p2 = ap_const_lv1_0)) or ((icmp_ln259_fu_328_p2 = ap_const_lv1_1) and (icmp_ln246_fu_273_p2 = ap_const_lv1_1) and (icmp_ln279_fu_407_p2 = ap_const_lv1_0) and (tmp_66_fu_389_p3 = ap_const_lv1_0) and (icmp_ln272_fu_383_p2 = ap_const_lv1_0) and (icmp_ln242_fu_257_p2 = ap_const_lv1_0)) or ((icmp_ln246_fu_273_p2 = ap_const_lv1_1) and (icmp_ln266_fu_352_p2 = ap_const_lv1_0) and (tmp_63_fu_334_p3 = ap_const_lv1_0) and (icmp_ln259_fu_328_p2 = ap_const_lv1_0) and (icmp_ln242_fu_257_p2 = ap_const_lv1_0)))) then 
            ap_phi_mux_pos_6_phi_fu_122_p26 <= ap_const_lv3_2;
        elsif ((((tmp_62_fu_279_p3 = ap_const_lv1_1) and (icmp_ln246_fu_273_p2 = ap_const_lv1_0) and (icmp_ln242_fu_257_p2 = ap_const_lv1_0)) or ((tmp_65_fu_438_p3 = ap_const_lv1_1) and (icmp_ln272_fu_383_p2 = ap_const_lv1_1) and (icmp_ln259_fu_328_p2 = ap_const_lv1_1) and (icmp_ln246_fu_273_p2 = ap_const_lv1_1) and (icmp_ln242_fu_257_p2 = ap_const_lv1_0)) or ((tmp_66_fu_389_p3 = ap_const_lv1_1) and (icmp_ln259_fu_328_p2 = ap_const_lv1_1) and (icmp_ln246_fu_273_p2 = ap_const_lv1_1) and (icmp_ln272_fu_383_p2 = ap_const_lv1_0) and (icmp_ln242_fu_257_p2 = ap_const_lv1_0)) or ((tmp_63_fu_334_p3 = ap_const_lv1_1) and (icmp_ln246_fu_273_p2 = ap_const_lv1_1) and (icmp_ln259_fu_328_p2 = ap_const_lv1_0) and (icmp_ln242_fu_257_p2 = ap_const_lv1_0)))) then 
            ap_phi_mux_pos_6_phi_fu_122_p26 <= ap_const_lv3_1;
        else 
            ap_phi_mux_pos_6_phi_fu_122_p26 <= ap_phi_reg_pp0_iter0_pos_6_reg_119;
        end if; 
    end process;

    ap_phi_reg_pp0_iter0_block_2_reg_159 <= "XXXX";
    ap_phi_reg_pp0_iter0_index_0_in_in_reg_203 <= "XXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_p_0_in_reg_221 <= "XXXXXXXXXXXXXXXX";
    ap_phi_reg_pp0_iter0_phi_ln311_reg_212 <= "XXXXXXXX";
    ap_phi_reg_pp0_iter0_pos_6_reg_119 <= "XXX";

    ap_ready_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    ap_reset_idle_pp0_assign_proc : process(ap_start, ap_idle_pp0_0to0)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_idle_pp0_0to0 = ap_const_logic_1))) then 
            ap_reset_idle_pp0 <= ap_const_logic_1;
        else 
            ap_reset_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_return_0 <= val_fu_570_p1;
    ap_return_1 <= ap_phi_mux_phi_ln311_phi_fu_215_p4;
    icmp_ln242_fu_257_p2 <= "1" when (x = ap_const_lv16_0) else "0";
    icmp_ln246_fu_273_p2 <= "1" when (tmp_fu_263_p4 = ap_const_lv4_0) else "0";
    icmp_ln253_1_fu_313_p2 <= "1" when (tmp_68_fu_303_p4 = ap_const_lv3_0) else "0";
    icmp_ln253_fu_297_p2 <= "1" when (tmp_64_fu_287_p4 = ap_const_lv2_0) else "0";
    icmp_ln259_fu_328_p2 <= "1" when (tmpx_fu_233_p4 = ap_const_lv4_0) else "0";
    icmp_ln266_1_fu_368_p2 <= "1" when (tmp_71_fu_358_p4 = ap_const_lv3_0) else "0";
    icmp_ln266_fu_352_p2 <= "1" when (tmp_67_fu_342_p4 = ap_const_lv2_0) else "0";
    icmp_ln272_fu_383_p2 <= "1" when (tmpx_1_fu_243_p4 = ap_const_lv4_0) else "0";
    icmp_ln279_1_fu_423_p2 <= "1" when (tmp_73_fu_413_p4 = ap_const_lv3_0) else "0";
    icmp_ln279_fu_407_p2 <= "1" when (tmp_70_fu_397_p4 = ap_const_lv2_0) else "0";
    icmp_ln292_1_fu_472_p2 <= "1" when (tmp_72_fu_462_p4 = ap_const_lv3_0) else "0";
    icmp_ln292_2_fu_478_p2 <= "1" when (tmpx_2_fu_253_p1 = ap_const_lv4_0) else "0";
    icmp_ln292_fu_456_p2 <= "1" when (tmp_69_fu_446_p4 = ap_const_lv2_0) else "0";
    icmp_ln301_fu_511_p2 <= "1" when (B_L_fu_501_p2 = ap_const_lv5_0) else "0";
    index_fu_539_p4 <= ap_phi_mux_index_0_in_in_phi_fu_206_p4(14 downto 4);
    select_ln253_fu_319_p3 <= 
        ap_const_lv3_4 when (icmp_ln253_1_fu_313_p2(0) = '1') else 
        ap_const_lv3_3;
    select_ln266_fu_374_p3 <= 
        ap_const_lv3_4 when (icmp_ln266_1_fu_368_p2(0) = '1') else 
        ap_const_lv3_3;
    select_ln279_fu_429_p3 <= 
        ap_const_lv3_4 when (icmp_ln279_1_fu_423_p2(0) = '1') else 
        ap_const_lv3_3;
    select_ln292_fu_484_p3 <= 
        ap_const_lv3_0 when (icmp_ln292_2_fu_478_p2(0) = '1') else 
        ap_const_lv3_4;
    shl_ln302_fu_532_p2 <= std_logic_vector(shift_left(unsigned(trunc_ln301_fu_517_p1),to_integer(unsigned('0' & zext_ln302_fu_528_p1(15-1 downto 0)))));
    sub_ln307_fu_560_p2 <= std_logic_vector(unsigned(add_ln307_fu_554_p2) - unsigned(zext_ln299_2_fu_507_p1));
    tmp_62_fu_279_p3 <= x(15 downto 15);
    tmp_63_fu_334_p3 <= x(11 downto 11);
    tmp_64_fu_287_p4 <= x(15 downto 14);
    tmp_65_fu_438_p3 <= x(3 downto 3);
    tmp_66_fu_389_p3 <= x(7 downto 7);
    tmp_67_fu_342_p4 <= x(11 downto 10);
    tmp_68_fu_303_p4 <= x(15 downto 13);
    tmp_69_fu_446_p4 <= x(3 downto 2);
    tmp_70_fu_397_p4 <= x(7 downto 6);
    tmp_71_fu_358_p4 <= x(11 downto 9);
    tmp_72_fu_462_p4 <= x(3 downto 1);
    tmp_73_fu_413_p4 <= x(7 downto 5);
    tmp_fu_263_p4 <= x(15 downto 12);
    tmpx_1_fu_243_p4 <= x(7 downto 4);
    tmpx_2_fu_253_p1 <= x(4 - 1 downto 0);
    tmpx_fu_233_p4 <= x(11 downto 8);
    trunc_ln301_fu_517_p1 <= x(15 - 1 downto 0);
    val_fu_570_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_p_0_in_phi_fu_225_p4),32));
    xf_division_lut_address0 <= zext_ln306_fu_549_p1(12 - 1 downto 0);

    xf_division_lut_ce0_assign_proc : process(ap_start, ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, ap_ce)
    begin
        if (((ap_const_logic_1 = ap_ce) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_start = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            xf_division_lut_ce0 <= ap_const_logic_1;
        else 
            xf_division_lut_ce0 <= ap_const_logic_0;
        end if; 
    end process;

    zext_ln299_1_fu_497_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_block_2_phi_fu_162_p26),5));
    zext_ln299_2_fu_507_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(B_L_fu_501_p2),6));
    zext_ln299_fu_493_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ap_phi_mux_pos_6_phi_fu_122_p26),5));
    zext_ln302_fu_528_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln302_fu_522_p2),15));
    zext_ln306_fu_549_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(index_fu_539_p4),64));
    zext_ln307_fu_566_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sub_ln307_reg_639),8));
end behav;
